<?xml version="1.0" encoding="utf-8"?>
<nugget name="HCVN_ZGLIF">
 <CLAS CLSNAME="ZGLIF_UTILITY_STORAGE" VERSION="1" LANGU="E" DESCRIPT="Stores various methods" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <method CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="COPY_FILE_ON_SERVER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="COPY_FILE_ON_SERVER" SCONAME="IV_SOURCE_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="COPY_FILE_ON_SERVER" SCONAME="IV_TARGET_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <exception CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="COPY_FILE_ON_SERVER" SCONAME="ZCX_GENERIC_EXCEPTION" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD copy_file_on_server.

    DATA lv_source_file TYPE xstring.

    OPEN DATASET iv_source_path FOR INPUT IN BINARY MODE.
    IF sy-subrc &lt;&gt; 0.
      zcx_generic_exception=&gt;raise( &apos;Source file not found.&apos; ).
    ENDIF.

    OPEN DATASET iv_target_path FOR OUTPUT IN BINARY MODE.
    IF sy-subrc &lt;&gt; 0.
      CLOSE DATASET iv_source_path.
      zcx_generic_exception=&gt;raise( &apos;Target file could not be created&apos; ).
    ENDIF.

    DO.
      READ DATASET iv_source_path INTO lv_source_file.
      IF sy-subrc &lt;&gt; 0.
        EXIT.
      ENDIF.
      TRANSFER lv_source_file TO iv_target_path.

    ENDDO.

    CLOSE DATASET iv_source_path.
    CLOSE DATASET iv_target_path.


  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="DELETE_FILE_ON_SERVER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="DELETE_FILE_ON_SERVER" SCONAME="IV_FILE_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <exception CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="DELETE_FILE_ON_SERVER" SCONAME="ZCX_GENERIC_EXCEPTION" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD delete_file_on_server.

    DELETE DATASET iv_file_path.
    IF sy-subrc &lt;&gt; 0.
      zcx_generic_exception=&gt;raise( &apos;File could not be deleted&apos; ).
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="RAISE_WF_EVENT" VERSION="1" LANGU="E" DESCRIPT="Raise WF event" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="RAISE_WF_EVENT" SCONAME="PIV_OBJECT_TYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SWR_STRUCT-OBJECT_TYP"/>
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="RAISE_WF_EVENT" SCONAME="PIV_OBJECT_KEY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SWR_STRUCT-OBJECT_KEY"/>
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="RAISE_WF_EVENT" SCONAME="PIV_EVENT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SWR_STRUCT-EVENT"/>
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="RAISE_WF_EVENT" SCONAME="PCV_RETURN_CODE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-SUBRC"/>
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="RAISE_WF_EVENT" SCONAME="PCV_EVENT_ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="SWR_STRUCT-EVENT_ID"/>
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="RAISE_WF_EVENT" SCONAME="PCT_INPUT_CONTAINER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="SWRTCONT"/>
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="RAISE_WF_EVENT" SCONAME="PCT_MESSAGE_LINES" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="USMD4_T_SWR_MESSAG"/>
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="RAISE_WF_EVENT" SCONAME="PCT_MESSAGE_STRUCT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="8 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="SWR_MSGTAB"/>
   <source>METHOD raise_wf_event.

    &quot; raise given event of the specified object
    CALL FUNCTION &apos;SAP_WAPI_CREATE_EVENT&apos;
      EXPORTING
        object_type     = piv_object_type
        object_key      = piv_object_key
        event           = piv_event
*       COMMIT_WORK     = &apos;X&apos;
*       EVENT_LANGUAGE  = SY-LANGU
*       LANGUAGE        = SY-LANGU
*       USER            = SY-UNAME
*       IFS_XML_CONTAINER       = IFS_XML_CONTAINER
      IMPORTING
        return_code     = pcv_return_code
        event_id        = pcv_event_id
      TABLES
        input_container = pct_input_container
        message_lines   = pct_message_lines
        message_struct  = pct_message_struct.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="SET_BATCH_STATUS_TO_DB" VERSION="1" LANGU="E" DESCRIPT="Set specific status to Batch + DB update" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="SET_BATCH_STATUS_TO_DB" SCONAME="PIT_BATCH" VERSION="1" LANGU="E" DESCRIPT="GLIF: Batch status table" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_BATCH_STAT_TT"/>
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="SET_BATCH_STATUS_TO_DB" SCONAME="PIV_STATUS" VERSION="1" LANGU="E" DESCRIPT="Status to be set" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_BATCH_STATUS"/>
   <source>METHOD set_batch_status_to_db.
    zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                            pev_time = DATA(lv_time) ).

    &quot; Get all the relevant entries
    SELECT *
    FROM zglif_batch_stat
    INTO TABLE @DATA(lt_batch)
    FOR ALL ENTRIES IN @pit_batch
    WHERE interface_name    = @pit_batch-interface_name
      AND batch_id          = @pit_batch-batch_id.

    LOOP AT lt_batch ASSIGNING FIELD-SYMBOL(&lt;ls_batch&gt;).
      &lt;ls_batch&gt;-batch_status   = piv_status.
      &lt;ls_batch&gt;-batch_changed_on     = lv_date.
      &lt;ls_batch&gt;-batch_changed_at     = lv_time.
      &lt;ls_batch&gt;-batch_changed_by     = sy-uname.
    ENDLOOP.

    &quot; Update DB
    MODIFY zglif_batch_stat FROM TABLE lt_batch.
    COMMIT WORK AND WAIT.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="SET_MESSAGE_STATUS_TO_DB" VERSION="1" LANGU="E" DESCRIPT="Set specific status to Message + DB update" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="SET_MESSAGE_STATUS_TO_DB" SCONAME="PIT_MESSAGE" VERSION="1" LANGU="E" DESCRIPT="GLIF: Message status table" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_MESS_STAT_TT"/>
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="SET_MESSAGE_STATUS_TO_DB" SCONAME="PIV_STATUS" VERSION="1" LANGU="E" DESCRIPT="Status to be set" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS"/>
   <source>METHOD set_message_status_to_db.

    zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                            pev_time = DATA(lv_time) ).

    &quot; Get all the relevant entries
    SELECT *
    FROM zglif_mess_stat
    INTO TABLE @DATA(lt_mess)
    FOR ALL ENTRIES IN @pit_message
    WHERE interface_name    = @pit_message-interface_name
      AND batch_id          = @pit_message-batch_id
      AND message_id        = @pit_message-message_id.

    LOOP AT lt_mess ASSIGNING FIELD-SYMBOL(&lt;ls_mess&gt;).
      &quot; Possible to move GET TIME STAMP here for higher accuracy + lower performance
      &lt;ls_mess&gt;-message_status  = piv_status.
      &lt;ls_mess&gt;-message_changed_on      = lv_date.
      &lt;ls_mess&gt;-message_changed_at      = lv_time.
      &lt;ls_mess&gt;-message_changed_by      = sy-uname.
    ENDLOOP.

    &quot; Update DB
    MODIFY zglif_mess_stat FROM TABLE lt_mess.
    COMMIT WORK AND WAIT.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="UPDATE_BATCH_STATUS" VERSION="1" LANGU="E" DESCRIPT="Check the readiness of the batch - no DB update" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="UPDATE_BATCH_STATUS" SCONAME="PCT_BATCH" VERSION="1" LANGU="E" DESCRIPT="GLIF: Batch status table" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_BATCH_STAT_TT"/>
   <source>METHOD update_batch_status.
    zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                            pev_time = DATA(lv_time) ).

    &quot; Get all messages from the batch
    SELECT *
      FROM zglif_mess_stat
      INTO TABLE @DATA(lt_mess_stat)
      FOR ALL ENTRIES IN @pct_batch
      WHERE interface_name  = @pct_batch-interface_name
        AND batch_id        = @pct_batch-batch_id.

    &quot; Set correct status based on presence of problematic line
    LOOP AT pct_batch ASSIGNING FIELD-SYMBOL(&lt;ls_batch&gt;).
      &quot; Set date and time of this modified entry
      &lt;ls_batch&gt;-batch_changed_on = lv_date.
      &lt;ls_batch&gt;-batch_changed_at = lv_time.
      &lt;ls_batch&gt;-batch_changed_by = sy-uname.

      &quot; Error Handler - Cancel - one Canceled message -&gt; whole Batch Canceled
      IF line_exists( lt_mess_stat[ interface_name = &lt;ls_batch&gt;-interface_name batch_id = &lt;ls_batch&gt;-batch_id message_status = zglif_dispatcher=&gt;gc_99_canceled ] ).
        &lt;ls_batch&gt;-batch_status = zglif_dispatcher=&gt;gc_99_canceled.
        CONTINUE.
      ENDIF.

      &quot; Error Handler - Corrections
      IF line_exists( lt_mess_stat[ interface_name = &lt;ls_batch&gt;-interface_name batch_id = &lt;ls_batch&gt;-batch_id message_status = zglif_dispatcher=&gt;gc_51_being_corrected ] ).
        &lt;ls_batch&gt;-batch_status = zglif_dispatcher=&gt;gc_51_being_corrected.
        CONTINUE.
      ENDIF.
      IF line_exists( lt_mess_stat[ interface_name = &lt;ls_batch&gt;-interface_name batch_id = &lt;ls_batch&gt;-batch_id message_status = zglif_dispatcher=&gt;gc_50_corrected ] ).
        &quot; We have to check for other message being still in &quot;Being corrected&quot; status
        READ TABLE lt_mess_stat
            WITH KEY    interface_name  = &lt;ls_batch&gt;-interface_name
                        batch_id        = &lt;ls_batch&gt;-batch_id
                        message_status  = zglif_dispatcher=&gt;gc_51_being_corrected
            TRANSPORTING NO FIELDS.
        IF sy-subrc = 0.
          &lt;ls_batch&gt;-batch_status = zglif_dispatcher=&gt;gc_51_being_corrected.
        ELSE.
          &lt;ls_batch&gt;-batch_status = zglif_dispatcher=&gt;gc_50_corrected.
          CONTINUE.
        ENDIF.
      ENDIF.

      &quot; Feeder - Feeding
      IF line_exists( lt_mess_stat[ interface_name = &lt;ls_batch&gt;-interface_name  batch_id = &lt;ls_batch&gt;-batch_id message_status = zglif_dispatcher=&gt;gc_01_download_error ] ).
        &lt;ls_batch&gt;-batch_status = zglif_dispatcher=&gt;gc_01_download_error.
        CONTINUE.
      ENDIF.
      IF line_exists( lt_mess_stat[ interface_name = &lt;ls_batch&gt;-interface_name  batch_id = &lt;ls_batch&gt;-batch_id message_status = zglif_dispatcher=&gt;gc_00_downloaded ] ).
        &lt;ls_batch&gt;-batch_status = zglif_dispatcher=&gt;gc_00_downloaded.
        CONTINUE.
      ENDIF.

      &quot; Feeder - Conversion
      IF line_exists( lt_mess_stat[ interface_name = &lt;ls_batch&gt;-interface_name  batch_id = &lt;ls_batch&gt;-batch_id message_status = zglif_dispatcher=&gt;gc_11_conversion_error ] ).
        &lt;ls_batch&gt;-batch_status = zglif_dispatcher=&gt;gc_11_conversion_error.
        CONTINUE.
      ENDIF.
      IF line_exists( lt_mess_stat[ interface_name = &lt;ls_batch&gt;-interface_name  batch_id = &lt;ls_batch&gt;-batch_id message_status = zglif_dispatcher=&gt;gc_10_converted ] ).
        &lt;ls_batch&gt;-batch_status = zglif_dispatcher=&gt;gc_10_converted.
        CONTINUE.
      ENDIF.

      &quot; Processor - Test Processing
      IF line_exists( lt_mess_stat[ interface_name = &lt;ls_batch&gt;-interface_name  batch_id = &lt;ls_batch&gt;-batch_id message_status = zglif_dispatcher=&gt;gc_21_test_processing_fail ] ).
        &lt;ls_batch&gt;-batch_status = zglif_dispatcher=&gt;gc_21_test_processing_fail.
        CONTINUE.
      ENDIF.
      IF line_exists( lt_mess_stat[ interface_name = &lt;ls_batch&gt;-interface_name  batch_id = &lt;ls_batch&gt;-batch_id message_status = zglif_dispatcher=&gt;gc_20_test_processing_ok ] ).
        &lt;ls_batch&gt;-batch_status = zglif_dispatcher=&gt;gc_20_test_processing_ok.
        CONTINUE.
      ENDIF.

      &quot; Processor - Productive Processing
      IF line_exists( lt_mess_stat[ interface_name = &lt;ls_batch&gt;-interface_name  batch_id = &lt;ls_batch&gt;-batch_id message_status = zglif_dispatcher=&gt;gc_31_processing_fail ] ).
        &lt;ls_batch&gt;-batch_status = zglif_dispatcher=&gt;gc_31_processing_fail.
        CONTINUE.
      ENDIF.
      IF line_exists( lt_mess_stat[ interface_name = &lt;ls_batch&gt;-interface_name  batch_id = &lt;ls_batch&gt;-batch_id message_status = zglif_dispatcher=&gt;gc_30_processing_ok ] ).
        &lt;ls_batch&gt;-batch_status = zglif_dispatcher=&gt;gc_30_processing_ok.
        CONTINUE.
      ENDIF.

      &quot; Note: status Workflow in progress is set up directly in GLIF
    ENDLOOP.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="UPDATE_BATCH_STATUS_TO_DB" VERSION="1" LANGU="E" DESCRIPT="Check the readiness of the batch - no DB update" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_UTILITY_STORAGE" CMPNAME="UPDATE_BATCH_STATUS_TO_DB" SCONAME="PCT_BATCH" VERSION="1" LANGU="E" DESCRIPT="GLIF: Batch status table" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_BATCH_STAT_TT"/>
   <source>METHOD update_batch_status_to_db.

    update_batch_status(
      CHANGING
        pct_batch = pct_batch    &quot; GLIF: Batch status table
    ).

    &quot; Update DB
    MODIFY zglif_batch_stat FROM TABLE pct_batch.
    COMMIT WORK AND WAIT.

  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_SUPERPROCESSOR" VERSION="1" LANGU="E" DESCRIPT="Super class for Processor step of GLIF" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <attribute CLSNAME="ZGLIF_SUPERPROCESSOR" CMPNAME="MV_DO_LOG" VERSION="1" LANGU="E" DESCRIPT="Do or do not log" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BOOLEAN" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_SUPERPROCESSOR" CMPNAME="MV_LOG_HANDLE" VERSION="1" LANGU="E" DESCRIPT="Log handle" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BALLOGHNDL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZGLIF_SUPERPROCESSOR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="Constructor" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD constructor.
    &quot; #TODO: application log
    &quot; WRITE: / Superprocessor&apos;s constructor has been created|.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERPROCESSOR" CMPNAME="LOG_ADD_TEXT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_SUPERPROCESSOR" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_TEXT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZGLIF_SUPERPROCESSOR" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_TYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYMSGTY" PARVALUE="&apos;S&apos;"/>
   <parameter CLSNAME="ZGLIF_SUPERPROCESSOR" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_DETLEVEL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALLEVEL"/>
   <source>METHOD log_add_text.
    IF mv_do_log = abap_true.
      zglif_logger=&gt;log_add_text( iv_text = iv_text iv_type = iv_type iv_detlevel = iv_detlevel iv_log_handle = mv_log_handle ).
    ENDIF.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERPROCESSOR" CMPNAME="PROCESS" VERSION="1" LANGU="E" DESCRIPT="Process interfaced doc/file/idoc.. - redefined in subclasses" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD process.
    &quot; Do not insert implementation here =&gt; redefine method Process in the specific subclass

    &quot; #TODO: application log
    &quot; WRITE: / |Superprocessor&apos;s Process is called, no action here, let&apos;s move on.|. &quot; #TODO: application log
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERPROCESSOR" CMPNAME="SET_LOG_HANDLE" VERSION="1" LANGU="E" DESCRIPT="Set Log handle to superconvertor" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_SUPERPROCESSOR" CMPNAME="SET_LOG_HANDLE" SCONAME="IV_LOG_HANDLE" VERSION="1" LANGU="E" DESCRIPT="Log handle value" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALLOGHNDL"/>
   <parameter CLSNAME="ZGLIF_SUPERPROCESSOR" CMPNAME="SET_LOG_HANDLE" SCONAME="IV_DO_LOG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BOOLEAN"/>
   <source>METHOD set_log_handle.
    mv_log_handle = iv_log_handle.
    mv_do_log = iv_do_log.
  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_SUPERFEEDER" VERSION="1" LANGU="E" DESCRIPT="GLIF: Feeder Superclass" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="MV_DO_LOG" VERSION="1" LANGU="E" DESCRIPT="Do or do not log" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BOOLEAN" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="MV_LOG_HANDLE" VERSION="1" LANGU="E" DESCRIPT="Log handle" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BALLOGHNDL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="Constructor" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD constructor.
    &quot; #TODO: application log
    &quot; WRITE: / |Superfeeder has been created|.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="CONVERT" VERSION="1" LANGU="E" DESCRIPT="Perform the file conversion - redefined in subclasses" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD convert.
    &quot; Do not insert implementation here =&gt; redefine method Convert in the specific subclass

    &quot; #TODO: application log
    &quot; WRITE: / |Superfeeder&apos;s Convert is called, no action here, let&apos;s move on.|. &quot; #TODO: application log
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="FEED" VERSION="1" LANGU="E" DESCRIPT="Perform the feeding - redefined in subclasses" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD feed.
    &quot; Do not insert implementation here =&gt; redefine method Feed in the specific subclass

    &quot; #TODO: application log
    &quot; WRITE: / |Superfeeder&apos;s Feed is called, no action here, let&apos;s move on.|. &quot; #TODO: application log
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="LOG_ADD_TEXT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_TEXT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_TYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYMSGTY" PARVALUE="&apos;S&apos;"/>
   <parameter CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_DETLEVEL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALLEVEL"/>
   <source>METHOD log_add_text.
    IF mv_do_log = abap_true.
      zglif_logger=&gt;log_add_text( iv_text = iv_text iv_type = iv_type iv_detlevel = iv_detlevel iv_log_handle = mv_log_handle ).
    ENDIF.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="SET_LOG_HANDLE" VERSION="1" LANGU="E" DESCRIPT="Set Log handle to superconvertor" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="SET_LOG_HANDLE" SCONAME="IV_LOG_HANDLE" VERSION="1" LANGU="E" DESCRIPT="Log handle value" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALLOGHNDL"/>
   <parameter CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="SET_LOG_HANDLE" SCONAME="IV_DO_LOG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BOOLEAN"/>
   <source>METHOD set_log_handle.
    mv_log_handle = iv_log_handle.
    mv_do_log = iv_do_log.
  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_SUPERERRORHANDLER" VERSION="1" LANGU="E" DESCRIPT="GLIF: Error Handler Superclass" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZGLIF_SUPERERRORHANDLER" CMPNAME="MV_DO_LOG" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BOOLEAN" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_SUPERERRORHANDLER" CMPNAME="MV_LOG_HANDLE" VERSION="1" LANGU="E" DESCRIPT="Log handle" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BALLOGHNDL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZGLIF_SUPERERRORHANDLER" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="Constructor" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD constructor.
    &quot; #TODO: application log
    &quot; WRITE: / |SuperErrorHandler has been created|. &quot; #TODO: application log
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERERRORHANDLER" CMPNAME="LOG_ADD_TEXT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_SUPERERRORHANDLER" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_TEXT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZGLIF_SUPERERRORHANDLER" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_TYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYMSGTY" PARVALUE="&apos;S&apos;"/>
   <parameter CLSNAME="ZGLIF_SUPERERRORHANDLER" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_DETLEVEL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALLEVEL"/>
   <source>METHOD log_add_text.
    IF mv_do_log = abap_true.
      zglif_logger=&gt;log_add_text( iv_text = iv_text iv_type = iv_type iv_detlevel = iv_detlevel iv_log_handle = mv_log_handle ).
    ENDIF.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERERRORHANDLER" CMPNAME="PROCESS_ERRORS" VERSION="1" LANGU="E" DESCRIPT="Process Errors - redefined in subclasses" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD process_errors.
    &quot; Do not insert implementation here =&gt; redefine method Convert of the specific subclass

    &quot; #TODO: application log
    &quot; WRITE: / |SuperErrorHandle&apos;s Process Errors has been called. No action here, let&apos;s move on.|. &quot; #TODO: application log
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERERRORHANDLER" CMPNAME="SET_LOG_HANDLE" VERSION="1" LANGU="E" DESCRIPT="Set Log handle to superconvertor" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_SUPERERRORHANDLER" CMPNAME="SET_LOG_HANDLE" SCONAME="IV_LOG_HANDLE" VERSION="1" LANGU="E" DESCRIPT="Log handle value" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALLOGHNDL"/>
   <parameter CLSNAME="ZGLIF_SUPERERRORHANDLER" CMPNAME="SET_LOG_HANDLE" SCONAME="IV_DO_LOG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BOOLEAN"/>
   <source>METHOD set_log_handle.
    mv_log_handle = iv_log_handle.
    mv_do_log = iv_do_log.
  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_SUPERCONVERTOR" VERSION="1" LANGU="E" DESCRIPT="GLIF: Convertor Superclass" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <attribute CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="MV_DO_LOG" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BOOLEAN" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="MV_LOG_HANDLE" VERSION="1" LANGU="E" DESCRIPT="Log handle" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BALLOGHNDL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="Constructor" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD constructor.
    &quot; #TODO: application log
    &quot; WRITE: / Superconvertor has been created|.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="CONVERT" VERSION="1" LANGU="E" DESCRIPT="Perform the file conversion - redefined in subclasses" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD convert.
    &quot; Do not insert implementation here =&gt; redefine method Convert in the specific subclass

    &quot; #TODO: application log
    &quot; WRITE: / |Superconvertor&apos;s Convert is called, no action here, let&apos;s move on.|. &quot; #TODO: application log
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="LOG_ADD_TEXT" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_TEXT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_TYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYMSGTY" PARVALUE="&apos;S&apos;"/>
   <parameter CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_DETLEVEL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALLEVEL"/>
   <source>METHOD log_add_text.
    IF mv_do_log = abap_true.
      zglif_logger=&gt;log_add_text( iv_text = iv_text iv_type = iv_type iv_detlevel = iv_detlevel iv_log_handle = mv_log_handle ).
    ENDIF.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="SET_LOG_HANDLE" VERSION="1" LANGU="E" DESCRIPT="Set Log handle to superconvertor" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="SET_LOG_HANDLE" SCONAME="IV_LOG_HANDLE" VERSION="1" LANGU="E" DESCRIPT="Log handle value" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALLOGHNDL"/>
   <parameter CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="SET_LOG_HANDLE" SCONAME="IV_DO_LOG" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BOOLEAN"/>
   <source>METHOD set_log_handle.
    mv_log_handle = iv_log_handle.
    mv_do_log = iv_do_log.
  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_PROCESSOR_IDOC" VERSION="1" LANGU="E" DESCRIPT="GLIF: Processor class for IDoc processing" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZGLIF_SUPERPROCESSOR">
  <types CLSNAME="ZGLIF_PROCESSOR_IDOC" CMPNAME="TY_BATCH_ID_R" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="4 " SRCCOLUMN1="6 " SRCROW2="4 " SRCCOLUMN2="47 " TYPESRC_LENG="0 " TYPESRC="ty_batch_id_r TYPE RANGE OF zglif_batch_id
"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZGLIF_PROCESSOR_IDOC" CMPNAME="GS_PROCCUST" VERSION="1" LANGU="1" DESCRIPT="GLIF: Processor Customization table" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_PROCCUST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_PROCESSOR_IDOC" CMPNAME="MTR_BATCH_ID" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_BATCH_ID_R" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZGLIF_PROCESSOR_IDOC" REFCLSNAME="ZGLIF_SUPERPROCESSOR" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZGLIF_PROCESSOR_IDOC" REFCLSNAME="ZGLIF_SUPERPROCESSOR" VERSION="1" MTDNAME="PROCESS" EXPOSURE="2"/>
  </inheritance>
  <method CLSNAME="ZGLIF_PROCESSOR_IDOC" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_PROCESSOR_IDOC" CMPNAME="CONSTRUCTOR" SCONAME="PIS_PROCCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Processor Customization table" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_PROCCUST"/>
   <source>METHOD constructor.
    &quot; Call the constructor of the Superclass: zglif_superprocessor
    super-&gt;constructor( ).

    &quot; take over the Processor customization structure
    gs_proccust = pis_proccust.

    DATA: lv_fieldname TYPE string VALUE &apos;(ZGLIF_ACTIVATE)S_BATCH[]&apos;.
    ASSIGN (lv_fieldname) TO FIELD-SYMBOL(&lt;ltr_batch&gt;).
    IF sy-subrc = 0.
      log_add_text( iv_text = |Batch Assigned from (ZGLIF_ACTIVATE)S_BATCH[]| iv_detlevel = &apos;3&apos; ).
      mtr_batch_id = &lt;ltr_batch&gt;.
    ELSE.
      lv_fieldname = &apos;(ZBOOKNG_PROCESSING)P_BATCH&apos;.
      ASSIGN (lv_fieldname) TO FIELD-SYMBOL(&lt;lv_batch&gt;).
      IF sy-subrc = 0.
        log_add_text( iv_text = |Batch Assigned from (ZBOOKNG_PROCESSING)P_BATCH| iv_detlevel = &apos;3&apos; ).
        mtr_batch_id = VALUE #( ( sign = &apos;I&apos; option = &apos;EQ&apos; low = &lt;lv_batch&gt; ) ).
      ENDIF.
    ENDIF.

    &quot; WRITE: / |IDoc Processor has been created. Rejoice!|. &quot; #TODO: application log
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_PROCESSOR_IDOC" CMPNAME="GET_MODE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_PROCESSOR_IDOC" CMPNAME="GET_MODE" SCONAME="PIV_IDOC" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_IDOC_NUMBER"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_IDOC" CMPNAME="GET_MODE" SCONAME="PEV_MODE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_PROCESSOR_MODE"/>
   <source>METHOD get_mode.

    &quot; Get the batch and get the processing mode
    SELECT SINGLE batch~interface_name, batch~batch_id, batch~batch_status
    FROM    zglif_mess_stat     AS message JOIN
            zglif_batch_stat    AS batch ON message~batch_id = batch~batch_id
    INTO @DATA(ls_batch)
    WHERE message~idoc_number = @piv_idoc.  &quot; this is enough, IDocs are unique on client

    CASE ls_batch-batch_status.
      WHEN zglif_dispatcher=&gt;gc_10_converted OR zglif_dispatcher=&gt;gc_50_corrected.  &quot; run test processing
        pev_mode = zglif_dispatcher=&gt;gc_test_mode.
      WHEN zglif_dispatcher=&gt;gc_20_test_processing_ok.                              &quot; run productive processing
        pev_mode = zglif_dispatcher=&gt;gc_prod_mode.
      WHEN OTHERS.                                                                  &quot; run manual processing
        pev_mode = zglif_dispatcher=&gt;gc_empty_string.
    ENDCASE.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERPROCESSOR" CMPNAME="PROCESS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD process.
    DATA: &quot;lt_idoc_control      TYPE TABLE OF edidc,
      &quot;lt_idoc_data         TYPE TABLE OF edidd,
      lt_batch_stat_update TYPE          zglif_batch_stat_tt,
      ltr_docnum           TYPE RANGE OF edidc-docnum.

    log_add_text( iv_text = |Getting batches to process| iv_detlevel = &apos;3&apos; ).

    &quot; Get the batch numbers to be processed
    SELECT *
    FROM zglif_batch_stat
    INTO TABLE @DATA(lt_batch_stat)
    WHERE interface_name    = @gs_proccust-interface_name AND
        ( batch_status      = @zglif_dispatcher=&gt;gc_10_converted
       OR batch_status      = @zglif_dispatcher=&gt;gc_20_test_processing_ok
       OR batch_status      = @zglif_dispatcher=&gt;gc_50_corrected )
      AND batch_id IN @mtr_batch_id.

    &quot; this is to ensure we update the batch status after every batch&apos;s processing even if multiple batches are processed
    IF lt_batch_stat IS NOT INITIAL.
      LOOP AT lt_batch_stat INTO DATA(ls_batch_stat).
        &quot; Get the specific messages to be processed and other tables
*        CLEAR:  gt_mess_stat.
*                lt_idoc_control,
*                lt_idoc_data.

        log_add_text( iv_text = |Processing batch { ls_batch_stat-batch_id }| iv_detlevel = &apos;4&apos; ).

        SELECT &apos;I&apos; AS sign, &apos;EQ&apos; AS option, idoc_number AS low
            FROM  zglif_mess_stat
            INTO CORRESPONDING FIELDS OF TABLE @ltr_docnum
            WHERE interface_name    = @gs_proccust-interface_name
              AND batch_id          = @ls_batch_stat-batch_id
              AND message_status &lt;&gt; @zglif_dispatcher=&gt;gc_98_canceled_zero_values. &quot; Do not process canceled iDocs

        IF sy-subrc = 0.
*          lt_idoc_control = VALUE #( FOR ls_line IN gt_mess_stat ( docnum = ls_line-idoc_number ) ).

          log_add_text( iv_text = |Run Processing for batch { ls_batch_stat-batch_id }| iv_detlevel = &apos;5&apos; ).

          CASE ls_batch_stat-batch_status.
            WHEN zglif_dispatcher=&gt;gc_10_converted OR zglif_dispatcher=&gt;gc_50_corrected.
              ls_batch_stat-batch_status = zglif_dispatcher=&gt;gc_15_test_processing_run.
            WHEN zglif_dispatcher=&gt;gc_20_test_processing_ok.
              ls_batch_stat-batch_status = zglif_dispatcher=&gt;gc_25_processing_run.
            WHEN OTHERS.
          ENDCASE.

          MODIFY zglif_batch_stat FROM ls_batch_stat.
          COMMIT WORK AND WAIT.

          IF gs_proccust-rfcgr IS NOT INITIAL.
            SUBMIT rbdapp01 WITH docnum IN ltr_docnum WITH p_wait = abap_true WITH p_output = abap_false WITH p_parall = abap_true WITH p_rfcgr = gs_proccust-rfcgr
            EXPORTING LIST TO MEMORY AND RETURN.
          ELSE.
            SUBMIT rbdapp01 WITH docnum IN ltr_docnum WITH p_wait = abap_true WITH p_output = abap_false
            EXPORTING LIST TO MEMORY AND RETURN.
          ENDIF.




*          CALL FUNCTION &apos;APPLICATION_IDOC_POST_IMMEDIAT&apos;
*          &quot;  EXPORTING
*          &quot;    error_flag                = C_FALSE    &quot; Flag: called from error handling
*          &quot;    inbound_partner_profile   =     &quot; Partner profile for inbound processing
*          &quot;    do_commit                 = C_TRUE    &quot; Flag: Commit Work stopped in program
*            TABLES
*              idoc_control              = lt_idoc_control   &quot; IDoc control records
*              idoc_data                 = lt_idoc_data   &quot; IDoc data segments
*            EXCEPTIONS
*              error_opening_idoc        = 1
*              error_writing_idoc_status = 2
*              no_idocs                  = 3
*              OTHERS                    = 4.
*          IF sy-subrc &lt;&gt; 0.
*            WRITE: / |Technical Error occured while Processing IDocs.|. &quot; #TODO: application log
*            WRITE: / |Function Module APPLICATION_IDOC_POST_IMMEDIAT produced sy-subrc = { sy-subrc }|. &quot; #TODO: application log
*
*            zglif_logger=&gt;get_timestamp( IMPORTING pev_date = DATA(lv_date)
*                                                   pev_time = DATA(lv_time) ).
*            LOOP AT lt_idoc_control INTO DATA(ls_idoc_control).
*              TRY.
*                  &quot; this is enought specific, IDocs are unique on client
*                  gt_mess_stat[ idoc_number = ls_idoc_control-docnum ]-message_status       = zglif_dispatcher=&gt;gc_21_test_processing_fail.
*                  gt_mess_stat[ idoc_number = ls_idoc_control-docnum ]-message_changed_on   = lv_date.
*                  gt_mess_stat[ idoc_number = ls_idoc_control-docnum ]-message_changed_at   = lv_time.
*                  gt_mess_stat[ idoc_number = ls_idoc_control-docnum ]-message_changed_by   = sy-uname.
*                CATCH cx_sy_itab_line_not_found.
*                  &quot; TODO: app log
*                  &quot; this is not possible based on above coding
*              ENDTRY.
*            ENDLOOP.
*          ENDIF.

          &quot; Save the modified DB entries
*          MODIFY zglif_mess_stat FROM TABLE gt_mess_stat.
          COMMIT WORK AND WAIT.
        ELSE.
*          WRITE: / |No IDocs for processing found in zglif_mess_stat|. &quot; #TODO: application log
          log_add_text( iv_text = |No IDocs for processing found in zglif_mess_stat| iv_type = &apos;E&apos; iv_detlevel = &apos;5&apos; ).
        ENDIF.
      ENDLOOP.

      log_add_text( iv_text = |Updating status for all batches| iv_detlevel = &apos;4&apos; ).
      &quot; Update batch statuses - take just this one batch
      lt_batch_stat_update = lt_batch_stat.
      zglif_utility_storage=&gt;update_batch_status( CHANGING pct_batch = lt_batch_stat_update ).
      MODIFY zglif_batch_stat FROM TABLE lt_batch_stat_update.
      COMMIT WORK AND WAIT.

      &quot; Log the new statuses of Batches
      DATA: lt_status_texts TYPE TABLE OF dd07v.
      &quot; get text of the status
      CALL FUNCTION &apos;DD_DOMVALUES_GET&apos;
        EXPORTING
          domname        = &apos;ZGLIF_BATCH_STATUS_DOM&apos;
          text           = abap_true
          langu          = sy-langu
*         bypass_buffer  = SPACE
*        IMPORTING
*         rc             =
        TABLES
          dd07v_tab      = lt_status_texts
        EXCEPTIONS
          wrong_textflag = 1
          OTHERS         = 2.
      IF sy-subrc &lt;&gt; 0.
      log_add_text( iv_text = |Error when getting the status texts from domain ZGLIF_BATCH_STATUS_DOM.| iv_type = &apos;E&apos; iv_detlevel = &apos;4&apos; ).
*        WRITE: / |Error when getting the status texts from domain ZGLIF_BATCH_STATUS_DOM.|. &quot; #TODO: application log
*       MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*                  WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.

      log_add_text( iv_text = |Batch statuses:| iv_detlevel = &apos;5&apos; ).
      LOOP AT lt_batch_stat_update INTO DATA(ls_batch_stat_update).
        TRY .
            log_add_text( iv_text = |Processing of Batch { ls_batch_stat_update-batch_id } ended with status: { lt_status_texts[ domvalue_l = ls_batch_stat_update-batch_status ]-ddtext } | iv_detlevel = &apos;6&apos; ).
*            WRITE: / |Processing of Batch { ls_batch_stat_update-batch_id } | &amp;
*                     |ended with status: { lt_status_texts[ domvalue_l = ls_batch_stat_update-batch_status ]-ddtext } |. &quot; #TODO: application log
          CATCH cx_sy_itab_line_not_found.
            log_add_text( iv_text = |Processing of Batch { ls_batch_stat_update-batch_id } ended with status: { ls_batch_stat_update-batch_status }| iv_detlevel = &apos;6&apos; ).
*            WRITE: / |Processing of Batch { ls_batch_stat_update-batch_id } | &amp;
*                     |ended with status: { ls_batch_stat_update-batch_status } |. &quot; #TODO: application log
        ENDTRY.

      ENDLOOP.
    ELSE.
      log_add_text( iv_text = |No Batches for processing found in zglif_batch_stat| iv_type = &apos;E&apos; iv_detlevel = &apos;4&apos; ).
*      WRITE: / |No IDocs for processing found in zglif_batch_stat |. &quot; #TODO: application log
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_PROCESSOR_IDOC" CMPNAME="SET_STATUS" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_PROCESSOR_IDOC" CMPNAME="SET_STATUS" SCONAME="PIV_IDOC" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_IDOC_NUMBER"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_IDOC" CMPNAME="SET_STATUS" SCONAME="PIV_STATUS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_IDOC" CMPNAME="SET_STATUS" SCONAME="PIS_RETURN_MESSAGE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_RETURN_MESSAGE"/>
   <source>METHOD set_status.
*    zglif_logger=&gt;get_timestamp( IMPORTING pev_date = DATA(lv_date)
*                                           pev_time = DATA(lv_time) ).

*    &quot; set the status to the correct line - idoc_number is unique, no need for further identification
*    READ TABLE gt_mess_stat ASSIGNING FIELD-SYMBOL(&lt;ls_mess_stat&gt;) WITH KEY idoc_number = piv_idoc.
*
*    &lt;ls_mess_stat&gt;-message_status       = piv_status.                   &quot; status of the GLIF Message
*    &lt;ls_mess_stat&gt;-idoc_status          = pis_return_message-status.    &quot; status of the SAP IDoc
*    &lt;ls_mess_stat&gt;-msgty                = pis_return_message-msgty.
*    &lt;ls_mess_stat&gt;-msgid                = pis_return_message-msgid.
*    &lt;ls_mess_stat&gt;-msgno                = pis_return_message-msgno.
*    &lt;ls_mess_stat&gt;-msgv1                = pis_return_message-msgv1.
*    &lt;ls_mess_stat&gt;-msgv2                = pis_return_message-msgv2.
*    &lt;ls_mess_stat&gt;-msgv3                = pis_return_message-msgv3.
*    &lt;ls_mess_stat&gt;-msgv4                = pis_return_message-msgv4.
*    &lt;ls_mess_stat&gt;-message_changed_on   = lv_date.
*    &lt;ls_mess_stat&gt;-message_changed_at   = lv_time.
*    &lt;ls_mess_stat&gt;-message_changed_by   = sy-uname.
  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_LOGGER" VERSION="1" LANGU="E" DESCRIPT="Logs various changes" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <method CLSNAME="ZGLIF_LOGGER" CMPNAME="GET_TIMESTAMP" VERSION="1" LANGU="E" DESCRIPT="Get current timestamp" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="GET_TIMESTAMP" SCONAME="PEV_DATE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="SYST_DATLO"/>
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="GET_TIMESTAMP" SCONAME="PEV_TIME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="SYST_TIMLO"/>
   <source>METHOD get_timestamp.

    &quot; Due to problems with server time and time zones
    &quot; Get timestamp and translate to date &amp; time format
    GET TIME STAMP FIELD DATA(lv_timestamp).

    CALL FUNCTION &apos;ABI_TIMESTAMP_CONVERT_FROM&apos;
      EXPORTING
        iv_timestamp     = lv_timestamp    &quot; UTC time stamp in short form (YYYYMMDDhhmmss)
      IMPORTING
        o_date           = pev_date    &quot; Date and time, local date of user
        o_time           = pev_time    &quot; Date and time, local time for user
      EXCEPTIONS
        conversion_error = 1
        OTHERS           = 2.

    IF sy-subrc &lt;&gt; 0.
      CLEAR:  pev_date,
              pev_time.
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_LOGGER" CMPNAME="LOG_ADD_TEXT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_TEXT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_TYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYMSGTY" PARVALUE="&apos;S&apos;"/>
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_DETLEVEL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALLEVEL"/>
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_LOG_HANDLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALLOGHNDL" PAROPTIONL="X"/>
   <source>METHOD log_add_text.

    DATA lv_text TYPE c LENGTH 255.

    lv_text = iv_text.
    CALL FUNCTION &apos;BAL_LOG_MSG_ADD_FREE_TEXT&apos;
      EXPORTING
        i_log_handle     = iv_log_handle
        i_msgty          = iv_type
        i_text           = lv_text
        i_detlevel       = iv_detlevel
      EXCEPTIONS
        log_not_found    = 1
        msg_inconsistent = 2
        log_is_full      = 3
        OTHERS           = 4.

    WRITE / iv_text.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_LOGGER" CMPNAME="LOG_CREATE" VERSION="1" LANGU="E" DESCRIPT="Create LOG Object" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="LOG_CREATE" SCONAME="IV_OBJECT" VERSION="1" LANGU="E" DESCRIPT="Object" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALOBJ_D"/>
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="LOG_CREATE" SCONAME="IV_SUBOBJECT" VERSION="1" LANGU="E" DESCRIPT="Subobject" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALSUBOBJ"/>
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="LOG_CREATE" SCONAME="IV_EXTNUMBER" VERSION="1" LANGU="E" DESCRIPT="External Number" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALNREXT"/>
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="LOG_CREATE" SCONAME="IV_EXPIRATION_DAYS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="INT1"/>
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="LOG_CREATE" SCONAME="RV_LOG_HANDLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="BALLOGHNDL"/>
   <source>METHOD log_create.
    DATA: ls_log        TYPE bal_s_log.

    ls_log-aldate_del = sy-datum + iv_expiration_days.

    ls_log-object = iv_object.
    ls_log-subobject = iv_subobject.
    ls_log-extnumber = iv_extnumber.
    CALL FUNCTION &apos;BAL_LOG_CREATE&apos;
      EXPORTING
        i_s_log                 = ls_log
      IMPORTING
        e_log_handle            = rv_log_handle
      EXCEPTIONS
        log_header_inconsistent = 1
        OTHERS                  = 2.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_LOGGER" CMPNAME="LOG_SAVE" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="LOG_SAVE" SCONAME="IV_LOG_HANDLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALLOGHNDL" PAROPTIONL="X"/>
   <source>METHOD log_save.
    DATA: lt_lognumbers TYPE bal_t_lgnm,
          lv_save_all TYPE boolean.

    IF iv_log_handle IS SUPPLIED AND iv_log_handle IS NOT INITIAL.
      DATA(lt_log_handle) = VALUE bal_t_logh( ( iv_log_handle ) ).
    ELSE.
      lv_save_all = abap_true.
    ENDIF.


    CALL FUNCTION &apos;BAL_DB_SAVE&apos;
      EXPORTING
        i_t_log_handle   = lt_log_handle
        i_save_all       = lv_save_all
      IMPORTING
        e_new_lognumbers = lt_lognumbers
      EXCEPTIONS
        log_not_found    = 1
        save_not_allowed = 2
        numbering_error  = 3
        OTHERS           = 4.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_LOGGER" CMPNAME="SET_TIMESTAMP_MESSAGE" VERSION="1" LANGU="E" DESCRIPT="Set timestamp and user to Messages" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="SET_TIMESTAMP_MESSAGE" SCONAME="PIT_MESSAGES" VERSION="1" LANGU="E" DESCRIPT="Table of Messages that are to be processed" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_MESS_STAT_TT"/>
   <source>METHOD set_timestamp_message.
    DATA: lt_messages TYPE TABLE OF zglif_mess_stat.

    zglif_logger=&gt;get_timestamp( IMPORTING    pev_date = DATA(lv_date)
                                    pev_time = DATA(lv_time) ).

    IF lv_date IS NOT INITIAL AND lv_time IS NOT INITIAL.
      &quot; Get the entries to be modified and change the timestamp
      SELECT *
      FROM zglif_mess_stat
      INTO TABLE @lt_messages
      FOR ALL ENTRIES IN @pit_messages
      WHERE interface_name    = @pit_messages-interface_name
        AND batch_id          = @pit_messages-batch_id
        AND message_id        = @pit_messages-message_id.

      LOOP AT lt_messages ASSIGNING FIELD-SYMBOL(&lt;ls_messsage&gt;).
        &lt;ls_messsage&gt;-message_changed_on = lv_date.
        &lt;ls_messsage&gt;-message_changed_at = lv_time.
        &lt;ls_messsage&gt;-message_changed_by = sy-uname.
      ENDLOOP.

      &quot; Save modified entries to DB
      MODIFY zglif_mess_stat FROM TABLE lt_messages.
      COMMIT WORK AND WAIT.

    ELSE.
*     MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*                WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.  &quot; #TODO Logger
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_LOGGER" CMPNAME="SET_TIMESTAM_BATCH" VERSION="1" LANGU="E" DESCRIPT="Set timestamp and user to Batches" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_LOGGER" CMPNAME="SET_TIMESTAM_BATCH" SCONAME="PIT_BATCH" VERSION="1" LANGU="E" DESCRIPT="Table of Batches that are to be processed" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_BATCH_STAT_TT"/>
   <source>METHOD set_timestam_batch.
    DATA: lt_batches TYPE TABLE OF zglif_batch_stat.

    zglif_logger=&gt;get_timestamp( IMPORTING    pev_date = DATA(lv_date)
                                    pev_time = DATA(lv_time) ).

    IF lv_date IS NOT INITIAL AND lv_time IS NOT INITIAL.
      &quot; Get the entries to be modified and change the timestamp
      SELECT *
      FROM zglif_batch_stat
      INTO TABLE @lt_batches
      FOR ALL ENTRIES IN @pit_batch
      WHERE interface_name    = @pit_batch-interface_name
        AND batch_id          = @pit_batch-batch_id.

      LOOP AT lt_batches ASSIGNING FIELD-SYMBOL(&lt;ls_batch&gt;).
        &lt;ls_batch&gt;-batch_changed_on = lv_date.
        &lt;ls_batch&gt;-batch_changed_at = lv_time.
        &lt;ls_batch&gt;-batch_changed_by = sy-uname.
      ENDLOOP.

      &quot; Save modified entries to DB
      MODIFY zglif_batch_stat FROM TABLE lt_batches.
      COMMIT WORK AND WAIT.

    ELSE.
*     MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*                WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.  &quot; #TODO Logger
    ENDIF.


  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_FEEDER_WEBSERVICE" VERSION="1" LANGU="E" DESCRIPT="Feeder for FTP data sources" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZGLIF_SUPERFEEDER">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZGLIF_FEEDER_WEBSERVICE" CMPNAME="GS_FEEDCUST" VERSION="1" LANGU="1" DESCRIPT="GLIF: Feeder Customization table" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_FEEDCUST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_FEEDER_WEBSERVICE" CMPNAME="GT_MESS_STAT" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="6 " SRCROW2="6 " SRCCOLUMN2="49 " TYPESRC_LENG="46 " TYPESRC="gt_mess_stat TYPE TABLE OF   zglif_mess_stat
"/>
  <inheritance CLSNAME="ZGLIF_FEEDER_WEBSERVICE" REFCLSNAME="ZGLIF_SUPERFEEDER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZGLIF_FEEDER_WEBSERVICE" REFCLSNAME="ZGLIF_SUPERFEEDER" VERSION="1" MTDNAME="FEED" EXPOSURE="2"/>
  </inheritance>
  <method CLSNAME="ZGLIF_FEEDER_WEBSERVICE" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_FEEDER_WEBSERVICE" CMPNAME="CONSTRUCTOR" SCONAME="PIS_FEEDCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Feeder&apos;s customization table" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_FEEDCUST"/>
   <source>METHOD constructor.
    &quot; Call the constructor of the Superclass: zglif_superfeeder
    super-&gt;constructor( ).
    &quot; take over the Feeder customization structure
    gs_feedcust = pis_feedcust.


  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="FEED" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD feed.
    &quot;Perform parent implementation
    CALL METHOD super-&gt;feed( ).

    WRITE: / |Webservice Feeder for GLIF Interface: { gs_feedcust-interface_name }|. &quot; #TODO: application log
    WRITE: / |--------------------------------------|.
*    WRITE: / |Webservice name:               { gs_feedcust-webservice_name }|. &quot; #TODO: application log
*    WRITE: / |Webservice data table:         { gs_feedcust-webservice_data_table }|. &quot; #TODO: application log
    WRITE: / |In Webservice type of feeder the data are already in the system pushed by WS itself.|,
           / |No need for FEEDER here, this is just to check that there is some data to be processed.|,
           / |--------------------------------------|,
           / |This feeder class is bound to table &apos;ZGLIF_BOOKNG_WS&apos; and it&apos;s data.|,
           / |Converted from WS to iDoc for this table is &apos;ZGLIF_CONVERTOR_WS_TO_IDOC&apos;|,
           / |--------------------------------------|.


    get_info_about_data( ).


*    &quot; Save the received webservice payload and update stat tables
*    save_payload( ).

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_FEEDER_WEBSERVICE" CMPNAME="GET_INFO_ABOUT_DATA" VERSION="1" LANGU="E" DESCRIPT="Get info about data that was saved into table" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD get_info_about_data.

    DATA: lv_total_count_of_batch_id TYPE i,
          lv_total_number_of_items   TYPE i.

    SELECT zglif_batch_stat~batch_id, zglif_mess_stat~message_id, COUNT( DISTINCT item ) AS count
      FROM zglif_batch_stat
      JOIN zglif_mess_stat ON zglif_batch_stat~batch_id = zglif_mess_stat~batch_id AND zglif_batch_stat~interface_name = zglif_mess_stat~interface_name
      JOIN zglif_bookng_ws ON zglif_bookng_ws~batch_id = zglif_batch_stat~batch_id AND zglif_bookng_ws~message_id = zglif_mess_stat~message_id
      WHERE batch_status = @zglif_dispatcher=&gt;gc_00_downloaded
      AND zglif_batch_stat~interface_name = @gs_feedcust-interface_name
      GROUP BY zglif_batch_stat~batch_id, zglif_mess_stat~message_id
      INTO TABLE @DATA(lt_data).

    IF sy-subrc = 0.
      WRITE: / |There is total of { sy-dbcnt } items to be processed|,
             / |--------------------------------------|,
             / |Here is the list:|,
             / |--------------------------------------|.
    ELSE.
      WRITE: / |There is nothing to be processed now|.
    ENDIF.

    LOOP AT lt_data INTO DATA(ls_data).
      AT NEW batch_id.
        ADD 1 TO lv_total_count_of_batch_id.
      ENDAT.

      WRITE: / |Batch ID: { ls_data-batch_id } with Message ID { ls_data-message_id } with total { ls_data-count } items|.

      ADD ls_data-count TO lv_total_number_of_items.

    ENDLOOP.

    WRITE: / |--------------------------------------|,
           / |In total there is { lv_total_count_of_batch_id } BatchIds with { sy-dbcnt } of Messages with { lv_total_number_of_items }|,
           / |--------------------------------------|,
           / |Run WS Converter for them|.


  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_FEEDER_WEBSERVICE" CMPNAME="SAVE_PAYLOAD" VERSION="1" LANGU="E" DESCRIPT="Save the webservice payload" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD save_payload.
    &quot; Import the BookNG webservice data (exported from webservice FM ZBOOKNG_WS_DOCUMENT - insert your webservice name for other implementations)
    &quot; Please note that the ASSING with syntax lv_fieldname = &apos;(ZBOOKNG_WS_DOCUMENT)GS_WS_DATA&apos;. will not work as we use SUBMIT report
    DATA(ls_imp_bookng_ws_data) = VALUE zbookng_document( ).
    IMPORT ls_exp_bookng_ws_data TO ls_imp_bookng_ws_data FROM MEMORY ID &apos;LS_BOOKNG_WS_DATA&apos;.

    zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                            pev_time = DATA(lv_time) ).

    DATA(lt_bookng_data) = VALUE zglif_bookng_ws_tt(
    FOR ls_item IN ls_imp_bookng_ws_data-doc_items
        (
            batch_id        = ls_imp_bookng_ws_data-doc_head-batch_id
            message_id      = ls_imp_bookng_ws_data-doc_head-message_id
*            reference1      = ls_item-reference1
            message_status  = zglif_dispatcher=&gt;gc_00_downloaded
            company_code    = ls_imp_bookng_ws_data-doc_head-company_code
            document_date   = ls_imp_bookng_ws_data-doc_head-document_date
            posting_date    = ls_imp_bookng_ws_data-doc_head-posting_date
            ledger_group    = ls_imp_bookng_ws_data-doc_head-ledger_group
            debit_credit    = ls_item-debit_credit
            gl_account      = ls_item-gl_account
            amount          = ls_item-amount
            profit_center   = ls_item-profit_center
            business_area   = ls_item-business_area
            segment         = ls_item-segment
            item_text       = ls_item-item_text
*            item_model      = ls_item-item_model
            changed_on      = lv_date
            changed_at      = lv_time
            changed_by      = sy-uname
        )
    ).

    &quot; Try saving the data
    &quot; Catch the possible duplicate key - no duplicate allowed
    TRY.
        INSERT zglif_bookng_ws FROM TABLE lt_bookng_data.

        &quot; In case we saved the payload properly, update the *stat tables for batch and message with proper statuses
        TRY.
            CLEAR: lv_date,
                   lv_time.
            zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = lv_date
                                                    pev_time = lv_time ).
            &quot; Prepare data for Message stat table
            DATA(lt_mess_stat) = VALUE zglif_mess_stat_tt(
                (
                  interface_name      = gs_feedcust-interface_name
                  &quot; filename            = &quot; no filename for webservice
                  batch_id            = ls_imp_bookng_ws_data-doc_head-batch_id
                  message_id          = ls_imp_bookng_ws_data-doc_head-message_id
                  message_status      = zglif_dispatcher=&gt;gc_00_downloaded    &quot; #TODO: logger
                  message_changed_on  = lv_date
                  message_changed_at  = lv_time
                  message_changed_by  = sy-uname
                )
           ).

            &quot; Prepare data for Batch stat table
            DATA(lt_batch_stat) = VALUE zglif_batch_stat_tt(
                (
                  interface_name      = gs_feedcust-interface_name
                  batch_id            = ls_imp_bookng_ws_data-doc_head-batch_id
                  batch_status        = zglif_dispatcher=&gt;gc_00_downloaded
                  batch_changed_on    = sy-datum
                  batch_changed_at    = sy-uzeit
                  batch_changed_by    = sy-uname
                )
            ).

            &quot; Insert new entries into the tables
            INSERT zglif_mess_stat FROM TABLE lt_mess_stat.
            INSERT zglif_batch_stat FROM TABLE lt_batch_stat.
            COMMIT WORK AND WAIT.
          CATCH cx_root.
            WRITE: /  |Problem with saving document (Batch { ls_imp_bookng_ws_data-doc_head-batch_id }, Message { ls_imp_bookng_ws_data-doc_head-message_id } ) into GLIF status tables ZGLIF_MESS_STAT and ZGLIF_BATCH_STAT.|.
        ENDTRY.
      CATCH cx_root.
        WRITE: /  |Problem with saving data from Batch { ls_imp_bookng_ws_data-doc_head-batch_id }, Message { ls_imp_bookng_ws_data-doc_head-message_id } into GLIF table ZGLIF_BOOKNG_WS.|.
    ENDTRY.
  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_FEEDER_FTP" VERSION="1" LANGU="E" DESCRIPT="Feeder for FTP data sources" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZGLIF_SUPERFEEDER">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="GS_FEEDCUST" VERSION="1" LANGU="1" DESCRIPT="GLIF: Feeder Customization table" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_FEEDCUST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="GS_FTP_DATA" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="7 " SRCCOLUMN1="6 " SRCROW2="7 " SRCCOLUMN2="45 " TYPESRC_LENG="42 " TYPESRC="gs_ftp_data  LIKE LINE OF    gt_ftp_data
"/>
  <attribute CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="GT_FTP_DATA" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="6 " SRCROW2="6 " SRCCOLUMN2="38 " TYPESRC_LENG="35 " TYPESRC="gt_ftp_data  TYPE TABLE OF   line
"/>
  <attribute CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="GT_MESS_STAT" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="8 " SRCCOLUMN1="6 " SRCROW2="8 " SRCCOLUMN2="49 " TYPESRC_LENG="46 " TYPESRC="gt_mess_stat TYPE TABLE OF   zglif_mess_stat
"/>
  <attribute CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="GV_FTP_HANDLE" VERSION="1" LANGU="1" DESCRIPT="FTP handle returned by FM FTP_CONNECT" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="I" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="GV_SCRAMBLED_PSWD" VERSION="1" LANGU="1" DESCRIPT="Password scrambled by FM HTTP_SCRAMBLE" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="6 " SRCROW2="6 " SRCCOLUMN2="40 " TYPESRC_LENG="37 " TYPESRC="gv_scrambled_pswd TYPE c LENGTH 255
"/>
  <inheritance CLSNAME="ZGLIF_FEEDER_FTP" REFCLSNAME="ZGLIF_SUPERFEEDER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZGLIF_FEEDER_FTP" REFCLSNAME="ZGLIF_SUPERFEEDER" VERSION="1" MTDNAME="FEED" EXPOSURE="2"/>
  </inheritance>
  <method CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="CONSTRUCTOR" SCONAME="PIS_FEEDCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Feeder&apos;s customization tabler" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_FEEDCUST"/>
   <source>METHOD constructor.
    &quot; Call the constructor of the Superclass: zglif_superfeeder
    super-&gt;constructor( ).
    &quot; take over the Feeder customization structure
    gs_feedcust = pis_feedcust.

    &quot; WRITE: / |FTP Feeder has been created. Rejoice!|. &quot; #TODO: application log
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="DISCONNECT" VERSION="1" LANGU="E" DESCRIPT="Filename of currently processed file (needed for BAdI)" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD disconnect.
    &quot; Disconnect from FTP
    CALL FUNCTION &apos;FTP_DISCONNECT&apos;
      EXPORTING
        handle = gv_ftp_handle
      EXCEPTIONS
        OTHERS = 1.

    IF sy-subrc = 0.
      WRITE: / |FTP connection closed.|. &quot; #TODO: application log

      &quot; Close RFC connection
      CALL FUNCTION &apos;RFC_CONNECTION_CLOSE&apos;
        EXPORTING
          destination = gs_feedcust-sap_rfc_destination
        EXCEPTIONS
          OTHERS      = 1.
      IF sy-subrc = 0.
        WRITE: / |RFC connection closed.|. &quot; #TODO: application log
      ELSE.
        WRITE: / |Error: RFC connection not closed properly.|. &quot; #TODO: application log
      ENDIF.
    ELSE.
      WRITE: / |Error: FTP connection not closed properly.|. &quot; #TODO: application log
    ENDIF.

    CLEAR gv_ftp_handle.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="DOWNLOAD_FILES" VERSION="1" LANGU="E" DESCRIPT="Download files from FTP using FTP commands" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD download_files.
    DATA: lv_cmd           TYPE char120,  &quot; not using implicit declarations intentionally
          lt_batch_stat    TYPE TABLE OF zglif_batch_stat,
          ls_batch_stat    TYPE zglif_batch_stat,
          ls_mess_stat     TYPE zglif_mess_stat,
          lv_batch_id      TYPE zglif_batch_id,
          lv_prev_batch_id TYPE zglif_batch_id.

    &quot; Do we have any files to work with?
    DESCRIBE TABLE gt_ftp_data LINES DATA(lv_lines).
    IF lv_lines = 4.
      WRITE: / |No files ready for download in FTP folder { gs_feedcust-ftp_folder_source } |. &quot; #TODO: application log
    ELSE.
      &quot; Delete the last line as there is only status info
      DELETE gt_ftp_data INDEX lv_lines.

      &quot; Get rid of the first three lines
      DELETE gt_ftp_data INDEX 3.
      DELETE gt_ftp_data INDEX 2.
      DELETE gt_ftp_data INDEX 1.

      &quot; Download the files from the FTP to SAP
      DATA(lt_files_for_download) = gt_ftp_data. &quot; note: gt_ftp_data is changed after performing FTP command
      lv_batch_id = lv_prev_batch_id = gt_ftp_data[ 1 ]-line+3(5). &quot; No need for try-endtry, we are sure that the lines exist  &quot; -line+58(5).
      LOOP AT lt_files_for_download
        INTO gs_ftp_data
        WHERE table_line+0(45) IS NOT INITIAL. &quot; table_line+55(45) IS NOT INITIAL.
        zglif_logger=&gt;get_timestamp( IMPORTING    pev_date = DATA(lv_date)
                                                  pev_time = DATA(lv_time) ).
        lv_cmd = |get { gs_ftp_data(45) } |. &quot; |get { gs_ftp_data+55(45) } |.
        perform_ftp_command( lv_cmd ).

        &quot; Log the Message and if downloaded successfully, delete the file from FTP
        IF sy-subrc = 0.
          ls_mess_stat = VALUE #(
            interface_name      = gs_feedcust-interface_name
            filename            = gs_ftp_data(40)    &quot; gs_ftp_data+55(40)
            batch_id            = gs_ftp_data+3(5)     &quot; gs_ftp_data+58(5)
            message_id          = gs_ftp_data+9(7)     &quot; gs_ftp_data+64(7)
            message_status      = zglif_dispatcher=&gt;gc_00_downloaded    &quot; #TODO: logger
            message_changed_on  = lv_date
            message_changed_at  = lv_time
            message_changed_by  = sy-uname ).
          &quot; Delete the file
          lv_cmd = |delete { gs_ftp_data(45) } |.    &quot; |delete { gs_ftp_data+55(45) } |.
          perform_ftp_command( lv_cmd ).
        ELSE.
          ls_mess_stat = VALUE #(
            interface_name      = gs_feedcust-interface_name
            filename            = gs_ftp_data(40)     &quot; gs_ftp_data+55(40)
            batch_id            = gs_ftp_data+3(5)      &quot; gs_ftp_data+58(5)
            message_id          = gs_ftp_data+9(7)      &quot; gs_ftp_data+64(7)
            message_status      = zglif_dispatcher=&gt;gc_01_download_error    &quot; #TODO: logger
            message_changed_on  = lv_date
            message_changed_at  = lv_time
            message_changed_by  = sy-uname ).
        ENDIF.
        &quot; Update Message table
        APPEND ls_mess_stat TO gt_mess_stat.

        &quot; Check whether a new batch has started. If so, mark down the old batch number
        lv_batch_id = gs_ftp_data+3(5).    &quot; gs_ftp_data+58(5).
        IF lv_batch_id &lt;&gt; lv_prev_batch_id.
          ls_batch_stat = VALUE #(
            interface_name      = gs_feedcust-interface_name
            batch_id            = lv_prev_batch_id
            batch_changed_on    = lv_date
            batch_changed_at    = lv_time
            batch_changed_by    = sy-uname ).
          APPEND ls_batch_stat TO lt_batch_stat.

          lv_prev_batch_id = lv_batch_id.
        ENDIF.
      ENDLOOP.

      ls_batch_stat = VALUE #(
        interface_name      = gs_feedcust-interface_name
        batch_id            = lv_prev_batch_id
        batch_changed_on    = lv_date
        batch_changed_at    = lv_time
        batch_changed_by    = sy-uname ).
      APPEND ls_batch_stat TO lt_batch_stat.

      &quot; Save the modified DB entries so that the batch statuses use the updated values
      INSERT zglif_mess_stat FROM TABLE gt_mess_stat.
      COMMIT WORK AND WAIT.

      &quot; Update batch statuses and save them
      zglif_utility_storage=&gt;update_batch_status( CHANGING pct_batch = lt_batch_stat ).
      MODIFY zglif_batch_stat FROM TABLE lt_batch_stat.
      COMMIT WORK AND WAIT.
    ENDIF.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="FEED" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD feed.
    &quot;Perform parent implementation
    CALL METHOD super-&gt;feed( ).

    &quot;Connect to FPT based on the customization
    ftp_connect( ).

    &quot; Proceed only if the connection was successful
    CHECK gv_ftp_handle IS NOT INITIAL.

    &quot; Perform the requested command
    ftp_transfer( ).

    &quot; Proceed only if the connection was successful
    CHECK gv_ftp_handle IS NOT INITIAL. &quot; #TODO: delete after raising error in download files

    &quot; Disconnect from the FTp properly
    disconnect( ).

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="FTP_CONNECT" VERSION="1" LANGU="E" DESCRIPT="Connect to the FTP from customization" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD ftp_connect.
    &quot; Prepare the constant for scrambling the password
    CONSTANTS: lc_salt TYPE i VALUE &apos;26101957&apos;.

    &quot; Scramble the password
    CALL FUNCTION &apos;HTTP_SCRAMBLE&apos;
      EXPORTING
        source      = gs_feedcust-ftp_pswd
        sourcelen   = strlen( gs_feedcust-ftp_pswd )
        key         = lc_salt
      IMPORTING
        destination = gv_scrambled_pswd.

    WRITE: / |FTP Feeder for GLIF Interface: { gs_feedcust-interface_name }|. &quot; #TODO: application log
    WRITE: / |Connecting to FTP { gs_feedcust-ftp_host }|. &quot; #TODO: application log
    WRITE: / |User:             { gs_feedcust-ftp_user }|. &quot; #TODO: application log
    WRITE: / |Password:         { gv_scrambled_pswd }|. &quot; #TODO: application log
    WRITE: / |RFC destination:  { gs_feedcust-sap_rfc_destination }|. &quot; #TODO: application log

    &quot; To get rid of possible short network trouble
    DO 5 TIMES.
      &quot; Use the scrambled password to connect to the FTP
      CALL FUNCTION &apos;FTP_CONNECT&apos;
        EXPORTING
          user            = gs_feedcust-ftp_user
          password        = gv_scrambled_pswd
          host            = gs_feedcust-ftp_host
          rfc_destination = gs_feedcust-sap_rfc_destination     &quot; Use SAPFTPA
        IMPORTING
          handle          = gv_ftp_handle
        EXCEPTIONS
          not_connected   = 1
          OTHERS          = 2.
      IF sy-subrc NE 0 OR gv_ftp_handle IS INITIAL.
        WRITE: / |Not connected to FTP { gs_feedcust-ftp_host }|. &quot; #TODO: application log
      ENDIF.

      IF gv_ftp_handle IS NOT INITIAL.
        WRITE: / |Connected to FTP { gs_feedcust-ftp_host }|. &quot; #TODO: application log
        EXIT.
      ELSE.
        WRITE: / |Could not connect to FTP { gs_feedcust-ftp_host }|. &quot; #TODO: application log
      ENDIF.
    ENDDO.

    &quot; #TODO raise error
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="FTP_TRANSFER" VERSION="1" LANGU="E" DESCRIPT="Transfer files from FTP - connect, find folder, download..." EXPOSURE="0" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD ftp_transfer.
    DATA: lv_cmd      TYPE char120.  &quot; not using implicit declarations intentionally

    &quot; Set the directory for local machine = SAP application server
    lv_cmd = |lcd { gs_feedcust-sap_folder_source } |.
    perform_ftp_command( EXPORTING piv_command = lv_cmd IMPORTING pev_status = DATA(lv_status) ).
    CHECK lv_status = 0.
    WRITE: / |Local folder changed to { gs_feedcust-sap_folder_source }|. &quot; #TODO: application log

    &quot; Set the directory on remote machine = FTP
    IF gs_feedcust-ftp_folder_source IS NOT INITIAL.
      lv_cmd = |cd { gs_feedcust-ftp_folder_source } |.
      perform_ftp_command( EXPORTING piv_command = lv_cmd IMPORTING pev_status = lv_status ).
      CHECK lv_status = 0.
      WRITE: / |FTP folder changed to { gs_feedcust-ftp_folder_source }|. &quot; #TODO: application log
    ENDIF.

    &quot; Set the ASCII transfer mode = preferred for text files
    &quot; Note: BINARY preferred for non-text files
    lv_cmd  = |ascii|.
    perform_ftp_command( EXPORTING piv_command = lv_cmd IMPORTING pev_status = lv_status ).
    CHECK lv_status = 0.
    WRITE: / |Mode changed to { lv_cmd } for file transfer.|. &quot; #TODO: application log

    &quot; List the available files into table gt_ftp_data
    lv_cmd = |ls -A1|.  &quot; parameter a1 returns only filenames and not file info
    perform_ftp_command( EXPORTING piv_command = lv_cmd IMPORTING pev_status = lv_status ).
    CHECK lv_status = 0.
    WRITE: / |Files listed from FTP { gs_feedcust-ftp_host } folder { gs_feedcust-ftp_folder_source } |. &quot; #TODO: application log

    &quot;Let&apos;s try to download files
    download_files( ).

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="PERFORM_FTP_COMMAND" VERSION="1" LANGU="E" DESCRIPT="Perform FTP command" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="PERFORM_FTP_COMMAND" SCONAME="PIV_COMMAND" VERSION="1" LANGU="E" DESCRIPT="FTP command to be performed" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="CHAR120"/>
   <parameter CLSNAME="ZGLIF_FEEDER_FTP" CMPNAME="PERFORM_FTP_COMMAND" SCONAME="PEV_STATUS" VERSION="1" LANGU="E" DESCRIPT="Return value from performing FTP command" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="SY-SUBRC"/>
   <source>METHOD perform_ftp_command.
    &quot; Perform FTP command
    WRITE: / |Performing command { piv_command }|. &quot; #TODO: application log

    CALL FUNCTION &apos;FTP_COMMAND&apos;
      EXPORTING
        handle        = gv_ftp_handle
        command       = piv_command
      TABLES
        data          = gt_ftp_data
      EXCEPTIONS
        tcpip_error   = 1
        command_error = 2
        data_error    = 3
        OTHERS        = 4.
    IF sy-subrc = 0.
      &quot; #TODO: logging of messages from FTP - in lt_messages, for example that the file was downloaded
      pev_status = sy-subrc.
      WRITE: / |Success.|. &quot; #TODO: application log
    ELSE.
      &quot; There was a problem, disconnect and inform
      &quot; #TODO: via raising error
      pev_status = sy-subrc.
      WRITE: / |Error performing command. Sy-subrc =  { sy-subrc }. Disconnecting. |. &quot; #TODO: application log
      disconnect( ).
    ENDIF.

    &quot; Don&apos;t forget to initialize the table unless Listing command was used
    IF piv_command &lt;&gt; &apos;ls -A1&apos;.
      CLEAR gt_ftp_data.
    ENDIF.
  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_ERROR_HANDLER_IDOC" VERSION="1" LANGU="E" DESCRIPT="GLIF: Error Handler for IDocs" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZGLIF_SUPERERRORHANDLER">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <attribute CLSNAME="ZGLIF_ERROR_HANDLER_IDOC" CMPNAME="GS_HANDLECUST" VERSION="1" LANGU="1" DESCRIPT="Local structure type for Messages after classification" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_HANDLECUST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_ERROR_HANDLER_IDOC" CMPNAME="GT_CATEGORIES" VERSION="1" LANGU="1" DESCRIPT="Customizaiton of relationship Error parameters - Category" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="15 " SRCCOLUMN1="6 " SRCROW2="15 " SRCCOLUMN2="55 " TYPESRC_LENG="52 " TYPESRC="gt_categories        TYPE TABLE OF zglif_errorcust
"/>
  <attribute CLSNAME="ZGLIF_ERROR_HANDLER_IDOC" CMPNAME="GT_CATEGORY_DESC" VERSION="1" LANGU="1" DESCRIPT="Descriptions of Error Category" EXPOSURE="0" STATE="1" EDITORDER="4 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="17 " SRCCOLUMN1="6 " SRCROW2="17 " SRCCOLUMN2="55 " TYPESRC_LENG="52 " TYPESRC="gt_category_desc     TYPE TABLE OF zglif_err_categ
"/>
  <attribute CLSNAME="ZGLIF_ERROR_HANDLER_IDOC" CMPNAME="GT_CLASSIFIED_ERRORS" VERSION="1" LANGU="1" DESCRIPT="GLIF Messages in some kind of Error status" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="13 " SRCCOLUMN1="6 " SRCROW2="13 " SRCCOLUMN2="55 " TYPESRC_LENG="52 " TYPESRC="gt_classified_errors TYPE TABLE OF zglif_mess_stat
"/>
  <inheritance CLSNAME="ZGLIF_ERROR_HANDLER_IDOC" REFCLSNAME="ZGLIF_SUPERERRORHANDLER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZGLIF_ERROR_HANDLER_IDOC" REFCLSNAME="ZGLIF_SUPERERRORHANDLER" VERSION="1" MTDNAME="PROCESS_ERRORS" EXPOSURE="2"/>
  </inheritance>
  <method CLSNAME="ZGLIF_ERROR_HANDLER_IDOC" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="Constructor" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_ERROR_HANDLER_IDOC" CMPNAME="CONSTRUCTOR" SCONAME="PIS_HANDLECUST" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_HANDLECUST"/>
   <source>METHOD constructor.
    &quot; Call the constructor of the Superclass: zglif_supererrorhandler
    super-&gt;constructor( ).
    &quot; take over the Feeder customization structure
    gs_handlecust = pis_handlecust.

    &quot; get the Categories customization
    SELECT *
    FROM zglif_errorcust
    INTO TABLE gt_categories
    WHERE interface_name = pis_handlecust-interface_name.

    &quot; Get values for categories
    SELECT *
      FROM zglif_err_categ
      INTO TABLE gt_category_desc
      WHERE interface_name = pis_handlecust-interface_name.

    log_add_text( iv_text = |Error Handler for IDoc has been created. Yippie!| iv_detlevel = &apos;3&apos; ).
*    WRITE: / |Error Handler for IDoc has been created. Yippie!|. &quot; #TODO: application log
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_ERROR_HANDLER_IDOC" CMPNAME="FIND_ERRORS" VERSION="1" LANGU="E" DESCRIPT="Find Errors" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD find_errors.
    DATA:
      lt_batch             TYPE TABLE OF zglif_batch_stat.
*      gt_classified_errors TYPE TABLE OF gty_error_messages_classified.

    &quot; Any Batch in Error status?
    &quot; SELECT batch_id, batch_status, message_id, message_status, msgid, msgno, msgty, msgv1, msgv2, msgv3, msgv4, category
    SELECT *
    FROM zglif_btch_msg
    INTO TABLE @DATA(lt_errormessages)
    WHERE ( interface_name      = @gs_handlecust-interface_name AND
            (  batch_status     = @zglif_dispatcher=&gt;gc_01_download_error
            OR batch_status     = @zglif_dispatcher=&gt;gc_11_conversion_error
            OR batch_status     = @zglif_dispatcher=&gt;gc_21_test_processing_fail
            OR batch_status     = @zglif_dispatcher=&gt;gc_31_processing_fail
            OR batch_status     = @zglif_dispatcher=&gt;gc_52_workflow_not_started ) )
      &quot; Get only messages in error (in case half of the batch is ok and other half is not OK)
      AND ( interface_name      = @gs_handlecust-interface_name AND
            (  message_status   = @zglif_dispatcher=&gt;gc_01_download_error
            OR message_status   = @zglif_dispatcher=&gt;gc_11_conversion_error
            OR message_status   = @zglif_dispatcher=&gt;gc_21_test_processing_fail
            OR message_status   = @zglif_dispatcher=&gt;gc_31_processing_fail
            OR message_status   = @zglif_dispatcher=&gt;gc_52_workflow_not_started ) ).
*    GROUP BY batch_id, batch_status, message_status, msgid, msgno, msgty, msgv1, msgv2, msgv3, msgv4, category.


    IF sy-subrc &lt;&gt; 0.
      log_add_text( iv_text = |No Batch found in Error status. Yay!| iv_detlevel = &apos;4&apos; ).
*      WRITE: / |No Batch found in Error status. Yay!|. &quot; #TODO: application log
    ELSE.
      &quot; Create table of classified errors
      &quot; Due to low SPS ABAP AS level, I cannot use statemens DEFAULT, hence this workaround
      &quot;      TRY.
      &quot; me-&gt;gt_classified_errors = VALUE #( FOR ls_error IN lt_errormessages (
      &quot; batch_id        = ls_error-batch_id
      &quot; message_id      = ls_error-message_id
      &quot; msgid           = ls_error-msgid
      &quot; msgno           = ls_error-msgno
      &quot; msgty           = ls_error-msgty
      &quot; msgv1           = ls_error-msgv1
      &quot; msgv2           = ls_error-msgv2
      &quot; msgv3           = ls_error-msgv3
      &quot; msgv4           = ls_error-msgv4 ) ).
      &quot;          category        = gt_categories[  message_status  = ls_error-message_status
      &quot;                                            msgid           = ls_error-msgid
      &quot;                                            msgno           = ls_error-msgno ]-category ) ). &lt;-- &apos;DEFAULT&apos; addition
      &quot;        CATCH cx_sy_itab_line_not_found.
      &quot;      ENDTRY.

      &quot; Get current time and date
      zglif_logger=&gt;get_timestamp( IMPORTING pev_date = DATA(lv_date)
                                             pev_time = DATA(lv_time) ).

      &quot; Replace by &quot;DEFAULT&quot; table descriptor after AS ABAP SPS is upgraded
      me-&gt;gt_classified_errors = CORRESPONDING #( lt_errormessages ).
      LOOP AT me-&gt;gt_classified_errors ASSIGNING FIELD-SYMBOL(&lt;ls_classified_errors&gt;).
        TRY.
            &quot; Save with current time and date
            &lt;ls_classified_errors&gt;-message_changed_on  = lv_date.
            &lt;ls_classified_errors&gt;-message_changed_at  = lv_time.
            &lt;ls_classified_errors&gt;-message_changed_by  = sy-uname.
            &lt;ls_classified_errors&gt;-category = gt_categories[  message_status  = &lt;ls_classified_errors&gt;-message_status
                                                              msgid           = &lt;ls_classified_errors&gt;-msgid
                                                              msgno           = &lt;ls_classified_errors&gt;-msgno ]-category.
          CATCH cx_sy_itab_line_not_found.
            &lt;ls_classified_errors&gt;-category = gs_handlecust-default_category.
        ENDTRY.
      ENDLOOP.

      MODIFY zglif_mess_stat FROM TABLE gt_classified_errors.
      COMMIT WORK AND WAIT.
    ENDIF.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERERRORHANDLER" CMPNAME="PROCESS_ERRORS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD process_errors.
    DATA:
      lv_object_type     TYPE swr_struct-object_typ VALUE &apos;ZGLIF_ERR&apos;,
      lv_object_key      TYPE swr_struct-object_key,
      lv_event           TYPE swr_struct-event VALUE &apos;ErrorRaised&apos;,
      lv_return_code     TYPE sy-subrc,
      lv_event_id        TYPE swr_struct-event_id,
      lt_input_container TYPE STANDARD TABLE OF swr_cont,
      lt_message_lines   TYPE STANDARD TABLE OF swr_messag,
      lt_message_struct  TYPE STANDARD TABLE OF swr_mstruc,


      lt_batch_wf        TYPE TABLE OF zglif_batch_stat,
      ls_batch_wf        LIKE LINE OF lt_batch_wf.

    &quot; Get the entries that ended up in some kind of error and classify them
    find_errors( ).

    &quot; Messages in Error status found? If not, then info message was issued in find errors( ).
    CHECK gt_classified_errors IS NOT INITIAL.
    log_add_text( iv_text = |Errors have been found during the processing. All Errors are grouped by the Batch number and Error message.| iv_type = &apos;W&apos; iv_detlevel = &apos;4&apos; ).
    log_add_text( iv_text = |For each unique combination a separate workflow will be started.| iv_type = &apos;W&apos; iv_detlevel = &apos;4&apos; ).
*    WRITE: / |Errors have been found during the processing. All Errors are grouped by the Batch number and Error message.|. &quot; #TODO: application log
*    WRITE: / |For each unique combination a separate workflow will be started.|. &quot; #TODO: application log
    LOOP AT gt_classified_errors
        INTO DATA(ls_classified_errors)
        GROUP BY (  interface_name = ls_classified_errors-interface_name
                    batch_id = ls_classified_errors-batch_id
                    message_status = ls_classified_errors-message_status    &quot; #TODO: is this grouping necessary?
                    msgid = ls_classified_errors-msgid
                    msgno = ls_classified_errors-msgno
                    msgty = ls_classified_errors-msgty
                    msgv1 = ls_classified_errors-msgv1
                    msgv2 = ls_classified_errors-msgv2
                    msgv3 = ls_classified_errors-msgv3
                    msgv4 = ls_classified_errors-msgv4 ).

      &quot; Get timestamp
      zglif_logger=&gt;get_timestamp( IMPORTING pev_date = DATA(lv_date)
                                             pev_time = DATA(lv_time) ).

      &quot; Get name Category description (not only number ID)
      READ TABLE gt_category_desc
            INTO DATA(ls_category_desc)
            WITH KEY interface_name = me-&gt;gs_handlecust-interface_name
                     id             = ls_classified_errors-category.

      IF ls_category_desc-category_description IS NOT INITIAL.
        DATA(lv_category_desc) = ls_category_desc-category_description.
      ENDIF.


      CLEAR: lv_object_key.
      CONCATENATE ls_classified_errors-interface_name ls_classified_errors-batch_id ls_classified_errors-category INTO lv_object_key RESPECTING BLANKS.

      &quot; create workflow event
      CALL FUNCTION &apos;SAP_WAPI_CREATE_EVENT&apos;
        EXPORTING
          object_type     = lv_object_type
          object_key      = lv_object_key
          event           = lv_event
*         COMMIT_WORK     = &apos;X&apos;
*         EVENT_LANGUAGE  = SY-LANGU
*         LANGUAGE        = SY-LANGU
*         USER            = SY-UNAME
*         IFS_XML_CONTAINER       = IFS_XML_CONTAINER
        IMPORTING
          return_code     = lv_return_code
          event_id        = lv_event_id
        TABLES
          input_container = lt_input_container
          message_lines   = lt_message_lines
          message_struct  = lt_message_struct.

      IF sy-subrc = 0.
        DATA: lv_text TYPE string.
        lv_text = |Workflow successfully started for Interface  { ls_classified_errors-interface_name } | &amp;
                  |batch { ls_classified_errors-batch_id } and Error Category: { ls_classified_errors-category } { lv_category_desc } | &amp;
                  |Further information and the specific Error Type is in log table ZGLIF_MESS_STAT. |.
        log_add_text( iv_text = lv_text iv_detlevel = &apos;5&apos; ).
*        WRITE: /    |Workflow successfully started for Interface  { ls_classified_errors-interface_name } | &amp;
*                    |batch { ls_classified_errors-batch_id } and Error Category: { ls_classified_errors-category } { lv_category_desc } | &amp;
*                    |Further information and the specific Error Type is in log table ZGLIF_MESS_STAT. |. &quot; #TODO: application log
        CLEAR ls_batch_wf.
        ls_batch_wf = VALUE #(
            interface_name      = gs_handlecust-interface_name
            batch_id            = ls_classified_errors-batch_id
            batch_status        = zglif_dispatcher=&gt;gc_51_being_corrected
            batch_changed_on    = lv_date
            batch_changed_at    = lv_time
            batch_changed_by    = sy-uname ).
        APPEND ls_batch_wf TO lt_batch_wf.
      ELSE.
        lv_text = |Workflow not started for Interface  { ls_classified_errors-interface_name } | &amp;
                  |batch { ls_classified_errors-batch_id } and Error Category: { ls_classified_errors-category } { lv_category_desc } | &amp;
                  |Further information and the specific Error Type is in log table ZGLIF_MESS_STAT.|.
        log_add_text( iv_text = lv_text iv_type = &apos;E&apos; iv_detlevel = &apos;5&apos; ).
*        WRITE: /    |Workflow not started for Interface  { ls_classified_errors-interface_name } | &amp;
*                    |batch { ls_classified_errors-batch_id } and Error Category: { ls_classified_errors-category } { lv_category_desc } | &amp;
*                    |Further information and the specific Error Type is in log table ZGLIF_MESS_STAT. |. &quot; #TODO: application log
        CLEAR ls_batch_wf.
        ls_batch_wf = VALUE #(
            interface_name      = gs_handlecust-interface_name
            batch_id            = ls_classified_errors-batch_id
            batch_status        = zglif_dispatcher=&gt;gc_52_workflow_not_started
            batch_changed_on    = lv_date
            batch_changed_at    = lv_time
            batch_changed_by    = sy-uname ).
        APPEND ls_batch_wf TO lt_batch_wf.
      ENDIF.

    ENDLOOP.

    &quot; Update statuses of batches and messages
    SELECT *
    FROM zglif_mess_stat
    INTO TABLE @DATA(lt_mess_wf)
    FOR ALL ENTRIES IN @lt_batch_wf
    WHERE interface_name    = @lt_batch_wf-interface_name
      AND batch_id          = @lt_batch_wf-batch_id.

    LOOP AT lt_mess_wf ASSIGNING FIELD-SYMBOL(&lt;ls_mess_wf&gt;) &quot; update only messages with errors, not all in given batch
      WHERE message_status = zglif_dispatcher=&gt;gc_01_download_error
         OR message_status = zglif_dispatcher=&gt;gc_11_conversion_error
         OR message_status = zglif_dispatcher=&gt;gc_21_test_processing_fail
         OR message_status = zglif_dispatcher=&gt;gc_31_processing_fail.

      zglif_logger=&gt;get_timestamp( IMPORTING pev_date = lv_date
                                             pev_time = lv_time ).
      TRY.
          &quot; Set current time and date
          &lt;ls_mess_wf&gt;-message_changed_on = lv_date.
          &lt;ls_mess_wf&gt;-message_changed_at = lv_time.
          &lt;ls_mess_wf&gt;-message_changed_by = sy-uname.
          &quot; Overtake the status from Batch
          &lt;ls_mess_wf&gt;-message_status = lt_batch_wf[ interface_name = &lt;ls_mess_wf&gt;-interface_name batch_id = &lt;ls_mess_wf&gt;-batch_id ]-batch_status.
        CATCH cx_sy_itab_line_not_found.
          &quot; #todo: application log
          &quot; note this is not possible based on coding above, it is just decent coding
      ENDTRY.
    ENDLOOP.

    MODIFY zglif_batch_stat FROM TABLE lt_batch_wf.
    MODIFY zglif_mess_stat FROM TABLE lt_mess_wf.
    COMMIT WORK AND WAIT.

    log_add_text( iv_text = |Error Processing completed.|  iv_detlevel = &apos;3&apos; ).
*    WRITE: / |Error Processing completed.|. &quot; #TODO: application log

  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_DISPATCHER" VERSION="1" LANGU="E" DESCRIPT="GLIF Dispatcher" CATEGORY="00" EXPOSURE="0" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_00_DOWNLOADED" VERSION="1" LANGU="1" DESCRIPT="GLIF Message Status: Downloaded" EXPOSURE="2" STATE="1" EDITORDER="6 " ATTDECLTYP="2" ATTVALUE="&apos;00&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_01_DOWNLOAD_ERROR" VERSION="1" LANGU="1" DESCRIPT="GLIF Message Status: Download Error" EXPOSURE="2" STATE="1" EDITORDER="7 " ATTDECLTYP="2" ATTVALUE="&apos;01&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_02_DOWNLOADED_DATA_ERROR" VERSION="1" LANGU="E" DESCRIPT="GLIF Message Status: Downloaded data error" EXPOSURE="2" STATE="1" EDITORDER="8 " ATTDECLTYP="2" ATTVALUE="&apos;02&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_10_CONVERTED" VERSION="1" LANGU="1" DESCRIPT="GLIF Message Status: Converted" EXPOSURE="2" STATE="1" EDITORDER="9 " ATTDECLTYP="2" ATTVALUE="&apos;10&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_11_CONVERSION_ERROR" VERSION="1" LANGU="1" DESCRIPT="GLIF Message Status: Conversion Error" EXPOSURE="2" STATE="1" EDITORDER="10 " ATTDECLTYP="2" ATTVALUE="&apos;11&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_15_TEST_PROCESSING_RUN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="11 " ATTDECLTYP="2" ATTVALUE="&apos;15&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_20_TEST_PROCESSING_OK" VERSION="1" LANGU="1" DESCRIPT="GLIF Message Status: Test Processing OK" EXPOSURE="2" STATE="1" EDITORDER="12 " ATTDECLTYP="2" ATTVALUE="&apos;20&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_BATCH_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_21_TEST_PROCESSING_FAIL" VERSION="1" LANGU="1" DESCRIPT="GLIF Message Status: Test Processing Fail" EXPOSURE="2" STATE="1" EDITORDER="13 " ATTDECLTYP="2" ATTVALUE="&apos;21&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_25_PROCESSING_RUN" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="14 " ATTDECLTYP="2" ATTVALUE="&apos;25&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_BATCH_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_30_PROCESSING_OK" VERSION="1" LANGU="1" DESCRIPT="GLIF Message Status: Processing OK" EXPOSURE="2" STATE="1" EDITORDER="15 " ATTDECLTYP="2" ATTVALUE="&apos;30&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_31_PROCESSING_FAIL" VERSION="1" LANGU="1" DESCRIPT="GLIF Message Status: Processing Fail" EXPOSURE="2" STATE="1" EDITORDER="16 " ATTDECLTYP="2" ATTVALUE="&apos;31&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_50_CORRECTED" VERSION="1" LANGU="1" DESCRIPT="GLIF Message Status: Corrected" EXPOSURE="2" STATE="1" EDITORDER="17 " ATTDECLTYP="2" ATTVALUE="&apos;50&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_51_BEING_CORRECTED" VERSION="1" LANGU="1" DESCRIPT="GLIF Message Status: Being Corrected" EXPOSURE="2" STATE="1" EDITORDER="18 " ATTDECLTYP="2" ATTVALUE="&apos;51&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_52_WORKFLOW_NOT_STARTED" VERSION="1" LANGU="1" DESCRIPT="GLIF Message Status: Workflow not started" EXPOSURE="2" STATE="1" EDITORDER="19 " ATTDECLTYP="2" ATTVALUE="&apos;52&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_98_CANCELED_ZERO_VALUES" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="20 " ATTDECLTYP="2" ATTVALUE="&apos;98&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_99_CANCELED" VERSION="1" LANGU="1" DESCRIPT="GLIF Message Status: Canceled by user" EXPOSURE="2" STATE="1" EDITORDER="21 " ATTDECLTYP="2" ATTVALUE="&apos;99&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_EMPTY_STRING" VERSION="1" LANGU="1" DESCRIPT="Empty string" EXPOSURE="2" STATE="1" EDITORDER="24 " ATTDECLTYP="2" ATTVALUE="&apos;&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR1" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_PROD_MODE" VERSION="1" LANGU="1" DESCRIPT="GLIF Processing Mode: Productive" EXPOSURE="2" STATE="1" EDITORDER="23 " ATTDECLTYP="2" ATTVALUE="&apos;prod&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR4" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GC_TEST_MODE" VERSION="1" LANGU="1" DESCRIPT="GLIF Processing Mode: Test" EXPOSURE="2" STATE="1" EDITORDER="22 " ATTDECLTYP="2" ATTVALUE="&apos;test&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="CHAR4" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GR_DISPATCHER" VERSION="1" LANGU="1" DESCRIPT="GLIF Dispatcher" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZGLIF_DISPATCHER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="MC_LOG_OBJECT" VERSION="1" LANGU="E" DESCRIPT="Constant for Log Object" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;ZGLIF&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BALOBJ_D" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="MO_CONVERTOR" VERSION="1" LANGU="E" DESCRIPT="Convertor Reference" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZGLIF_SUPERCONVERTOR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="MO_ERROR_HANDLER" VERSION="1" LANGU="E" DESCRIPT="Error Handler Reference" EXPOSURE="2" STATE="1" EDITORDER="4 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZGLIF_SUPERERRORHANDLER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="MO_FEEDER" VERSION="1" LANGU="E" DESCRIPT="Feeder Reference" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZGLIF_SUPERFEEDER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="MO_PROCESSOR" VERSION="1" LANGU="E" DESCRIPT="Processor Reference" EXPOSURE="2" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="3" TYPE="ZGLIF_SUPERPROCESSOR" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="MS_DISPCUST" VERSION="1" LANGU="E" DESCRIPT="Customization for Dispatcher" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="1" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_DISPCUST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="MV_ABORT" VERSION="1" LANGU="E" DESCRIPT="Error in processing, customization etc. leads to Abort" EXPOSURE="2" STATE="1" EDITORDER="5 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BOOLEAN_FLG" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_DISPATCHER" CMPNAME="MV_LOG_HANDLE" VERSION="1" LANGU="E" DESCRIPT="Log Handle" EXPOSURE="0" STATE="1" EDITORDER="4 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BALLOGHNDL" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <method CLSNAME="ZGLIF_DISPATCHER" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="Prepare the instance" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_DISPATCHER" CMPNAME="CONSTRUCTOR" SCONAME="PIV_INTERFACE_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_INTERFACE_NAME"/>
   <source>METHOD constructor.


    &quot; Get the customized actions based on Interface name
    SELECT SINGLE *
      FROM zglif_dispcust
      INTO ms_dispcust
      WHERE interface_name  = piv_interface_name
        AND active          = abap_true.

    IF sy-subrc = 0.

      log_create( ).

      log_add_text( iv_text = |Dispatcher is being created.| iv_detlevel = &apos;1&apos; ).
      log_add_text( iv_text = |Dispatcher finished loading customization.| iv_detlevel   = &apos;2&apos; ).

    ELSE.
      &quot; Rely on program log instance. No other choice here (unless creating new log with one row...)
      zglif_logger=&gt;log_add_text( iv_text = |No active customization found for Dispatcher in table zglif_dispcust. Aborting.| iv_detlevel = &apos;2&apos; iv_type = &apos;E&apos; ).
      zglif_logger=&gt;log_save( ).
      mv_abort = abap_true.
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_DISPATCHER" CMPNAME="CONVERT" VERSION="1" LANGU="E" DESCRIPT="Convert the input data from extetrnal system to SAP fomat" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD convert.
    CHECK mv_abort = abap_false. &quot; Make sure there was no error in previous process

    WRITE: / |---------------------------------|.   &quot; #TODO: application log
    log_add_text( iv_text = |Converting started in Dispatcher.| iv_detlevel = &apos;1&apos; ).
    WRITE: / |---------------------------------|.   &quot; #TODO: application log


    &quot; Process the enabled Activities from Dispatcher customization: Converting

    &quot; Get the proper Convertor customization
    SELECT SINGLE *
      FROM zglif_convcust
      INTO @DATA(ls_convcust)
      WHERE interface_name    = @ms_dispcust-interface_name
        AND active            = @abap_true.

    IF sy-subrc = 0 AND ms_dispcust-convertor_class IS NOT INITIAL.
      log_add_text( iv_text = |Dispatcher selected entry with Interface { ms_dispcust-interface_name }| iv_detlevel = &apos;2&apos; ).

      &quot; And create proper Feeder
      TRY.
          CREATE OBJECT mo_convertor
            TYPE (ms_dispcust-convertor_class)
            EXPORTING pis_convcust = ls_convcust.

          log_add_text( iv_text = |Convertor created. Class: { ms_dispcust-convertor_class }| iv_detlevel = &apos;2&apos; ).

          &quot; Pass log handle to convertor class. If program has own log handle, this will be empty
          mo_convertor-&gt;set_log_handle( iv_log_handle = mv_log_handle iv_do_log = ms_dispcust-log_active ).

          log_add_text( iv_text = |Log handle was passed to convertor class| iv_detlevel = &apos;3&apos; ).

          log_add_text( iv_text = |Dispatcher says Convert! to the Convertor| iv_detlevel = &apos;2&apos; ).
          &quot; Start the feeding process of the specific feeder
          mo_convertor-&gt;convert( ).

        CATCH cx_sy_create_object_error.
          zglif_logger=&gt;log_add_text( iv_text = |Exception was raised in the Converting step.| iv_detlevel = &apos;2&apos; iv_type = &apos;E&apos; iv_log_handle = mv_log_handle ).
      ENDTRY.

    ELSE.
      log_add_text( iv_text = |No active customization found for Converting in table zglif_feedcust.| iv_detlevel = &apos;2&apos; iv_type = &apos;E&apos; ).
      log_add_text( iv_text = |Aborting Converting process for Interface { ms_dispcust-interface_name }.| iv_detlevel = &apos;2&apos; iv_type = &apos;E&apos; ).
    ENDIF.

    log_save( ).

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_DISPATCHER" CMPNAME="FEED" VERSION="1" LANGU="E" DESCRIPT="Start the feeding process of the Feeder" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD feed.
    CHECK mv_abort = abap_false. &quot; Make sure there was no error in previous process

    WRITE: / |---------------------------------|.   &quot; #TODO: application log
    log_add_text( iv_text = |Feeding started in Dispatcher.| iv_detlevel = &apos;1&apos; ).
    WRITE: / |---------------------------------|.   &quot; #TODO: application log

    &quot; Process the enabled Activities from Dispatcher customization: Feeding

    &quot; Get the proper Feeder customization
    SELECT SINGLE *
      FROM zglif_feedcust
      INTO @DATA(ls_feedcust)
      WHERE interface_name    = @ms_dispcust-interface_name
        AND active            = @abap_true.

    IF sy-subrc = 0 AND ms_dispcust-feeder_class IS NOT INITIAL.
      log_add_text( iv_text = |Dispatcher selected entry with Interface { ms_dispcust-interface_name }| iv_detlevel = &apos;2&apos; ).

      &quot; And create proper Feeder
      TRY.
          CREATE OBJECT mo_feeder
            TYPE (ms_dispcust-feeder_class)
            EXPORTING pis_feedcust = ls_feedcust.

          log_add_text( iv_text = |Feeder created. Class: { ms_dispcust-feeder_class }| iv_detlevel = &apos;2&apos; ).

          &quot; Pass log handle to feeder class. If program has own log handle, this will be empty
          mo_feeder-&gt;set_log_handle( iv_log_handle = mv_log_handle iv_do_log = ms_dispcust-log_active ).

          log_add_text( iv_text = |Dispatcher says Feed! to the Feeder| iv_detlevel = &apos;2&apos; ).
*            &quot; Start the feeding process of the specific feeder
          mo_feeder-&gt;feed( ).

        CATCH cx_sy_create_object_error.
          WRITE: / |Exception was raised in the Feeding step.|. &quot; #TODO: application log
          log_add_text( iv_text = |Exception was raised in the Feeding step.| iv_detlevel = &apos;2&apos; iv_type = &apos;E&apos; ).
      ENDTRY.


    ELSE.
      log_add_text( iv_text = |No active customization found for Feeding in table zglif_feedcust.| iv_detlevel = &apos;2&apos; iv_type = &apos;E&apos; ).
      log_add_text( iv_text = |Aborting Feeding process for Interface { ms_dispcust-interface_name }.| iv_detlevel = &apos;2&apos; iv_type = &apos;E&apos; ).
    ENDIF.

    log_save( ).

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GET_DISPATCHER" VERSION="1" LANGU="E" DESCRIPT="Get the instance of Dispatcher (Singleton: My one and only)" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="1" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GET_DISPATCHER" SCONAME="PIV_INTERFACE_NAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_INTERFACE_NAME"/>
   <parameter CLSNAME="ZGLIF_DISPATCHER" CMPNAME="GET_DISPATCHER" SCONAME="PRR_DISPATCHER" VERSION="1" LANGU="E" DESCRIPT="GLIF Dispatcher" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="3" TYPE="ZGLIF_DISPATCHER"/>
   <source>METHOD get_dispatcher.
    &quot; Check whether we already have an instance created
    IF gr_dispatcher IS INITIAL.
      WRITE:/ |New Dipatcher is being created.|. &quot; #TODO: application log
      gr_dispatcher = NEW #( piv_interface_name ).
    ELSE.
      WRITE:/ |Existing Dispatcher is being returned.|. &quot; #TODO: application log
    ENDIF.

    &quot; Always return the same instance = design pattern Singleton
    prr_dispatcher = gr_dispatcher.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_DISPATCHER" CMPNAME="LOG_ADD_TEXT" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_DISPATCHER" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_TEXT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZGLIF_DISPATCHER" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_TYPE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="SYMSGTY" PARVALUE="&apos;S&apos;"/>
   <parameter CLSNAME="ZGLIF_DISPATCHER" CMPNAME="LOG_ADD_TEXT" SCONAME="IV_DETLEVEL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BALLEVEL"/>
   <source>METHOD log_add_text.
    IF ms_dispcust-log_active = abap_true.
      zglif_logger=&gt;log_add_text( iv_text = iv_text iv_detlevel = iv_detlevel iv_type = iv_type iv_log_handle = mv_log_handle ).
    ENDIF.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_DISPATCHER" CMPNAME="LOG_CREATE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD log_create.
    DATA lv_expiration_day TYPE int1.

    IF ms_dispcust-log_days_keep IS NOT INITIAL.
      lv_expiration_day = ms_dispcust-log_days_keep.
    ELSE.
      lv_expiration_day = 60.
    ENDIF.


    &quot; in this case the log is active, but we want our own log instance
    IF ms_dispcust-log_active = abap_true AND ms_dispcust-log_create_own = abap_true.

      mv_log_handle = zglif_logger=&gt;log_create(
        EXPORTING
          iv_object          = mc_log_object &quot;ZGLIF
          iv_subobject       = CONV #( ms_dispcust-interface_name )
          iv_extnumber       = CONV #( sy-datum )
          iv_expiration_days = lv_expiration_day
      ).

      &quot; in this case log is active but we want to use log instance from calling program,
      &quot; however we need to check that there is some instance in case there isn&apos;t create our own so it would be logged
      &quot; Note: subobject for log should always be interface, so we can add that to filter
    ELSEIF ms_dispcust-log_active = abap_true AND ms_dispcust-log_create_own = abap_false.

      DATA: ls_log_filter TYPE bal_s_lfil,
            lt_log_handle TYPE bal_t_logh.

      CALL FUNCTION &apos;BAL_FILTER_CREATE&apos;
        EXPORTING
          i_subobject    = CONV balsubobj( ms_dispcust-interface_name )
        IMPORTING
          e_s_log_filter = ls_log_filter
        EXCEPTIONS
          OTHERS         = 0.

      CALL FUNCTION &apos;BAL_GLB_SEARCH_LOG&apos;
        EXPORTING
          i_s_log_filter = ls_log_filter
        IMPORTING
          e_t_log_handle = lt_log_handle
        EXCEPTIONS
          log_not_found  = 1
          OTHERS         = 2.

      IF lines( lt_log_handle ) = 1.
        mv_log_handle = lt_log_handle[ 1 ].
      ELSEIF lines( lt_log_handle ) &gt; 1.
        &quot; Keep empty log handle.. (it will go to first instance of log anyway)
      ELSE.
        &quot; No instance, create new instance of log
        mv_log_handle = zglif_logger=&gt;log_create(
        EXPORTING
          iv_object          = mc_log_object &quot;ZGLIF
          iv_subobject       = CONV #( ms_dispcust-interface_name )
          iv_extnumber       = CONV #( sy-datum )
          iv_expiration_days = lv_expiration_day
      ).
      ENDIF.
    ENDIF.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_DISPATCHER" CMPNAME="LOG_SAVE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD log_save.
    IF ms_dispcust-log_active = abap_true.
      zglif_logger=&gt;log_save( iv_log_handle = mv_log_handle ).
    ENDIF.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_DISPATCHER" CMPNAME="PROCESS" VERSION="1" LANGU="E" DESCRIPT="Process the files" EXPOSURE="2" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD process.
    CHECK mv_abort = abap_false. &quot; Make sure there was no error in previous process

    WRITE: / |---------------------------------|. &quot; #TODO: application log
    log_add_text( iv_text = |Processing started in Dispatcher.| iv_detlevel = &apos;1&apos; ).
    WRITE: / |---------------------------------|. &quot; #TODO: application log


    &quot; Process the enabled Activities from Dispatcher customization: Processing

    &quot; Get the proper Processor customization - prepared for when any Processor will need customization
    SELECT SINGLE *
      FROM zglif_proccust
      INTO @DATA(ls_proccust)
      WHERE interface_name     = @ms_dispcust-interface_name
        AND active             = @abap_true.

    IF sy-subrc = 0 AND ms_dispcust-processor_class IS NOT INITIAL.
      log_add_text( iv_text = |Dispatcher selected entry with Interface { ms_dispcust-interface_name }| iv_detlevel = &apos;2&apos; ).

      TRY.
          &quot; And create proper Processor
          CREATE OBJECT mo_processor
            TYPE (ms_dispcust-processor_class)
            EXPORTING pis_proccust = ls_proccust.

          log_add_text( iv_text = |Processing class instantiated. Class: { ms_dispcust-processor_class }| iv_detlevel = &apos;2&apos; ).

          &quot; Pass log handle to feeder class. If program has own log handle, this will be empty
          mo_processor-&gt;set_log_handle( iv_log_handle = mv_log_handle iv_do_log = ms_dispcust-log_active ).

          log_add_text( iv_text = |Dispatcher says Process! to the Processor| iv_detlevel = &apos;2&apos; ).

          &quot; Start the feeding process of the specific feeder
          mo_processor-&gt;process( ).

        CATCH cx_sy_create_object_error.
          log_add_text( iv_text = |Exception was raised in the Processing step.| iv_detlevel = &apos;2&apos; iv_type = &apos;E&apos; ).

      ENDTRY.

    ELSE.
      log_add_text( iv_text = |No active customization found for Processing in tables zglif_proccust.| iv_detlevel = &apos;2&apos; iv_type = &apos;E&apos; ).
      log_add_text( iv_text = |Aborting Processing process for Interface { ms_dispcust-interface_name }.| iv_detlevel = &apos;2&apos; iv_type = &apos;E&apos; ).
    ENDIF.

    log_save( ).

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_DISPATCHER" CMPNAME="PROCESS_ERRORS" VERSION="1" LANGU="E" DESCRIPT="Process possible errors that were create in file processing" EXPOSURE="2" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD process_errors.
    CHECK mv_abort = abap_false. &quot; Make sure there was no error in previous process

    WRITE: / |-------------------------------------|.   &quot; #TODO: application log
    log_add_text( iv_text = |Error Handling started in Dispatcher.| iv_detlevel = &apos;1&apos; ).
    WRITE: / |-------------------------------------|.   &quot; #TODO: application log


    &quot; Process the enabled Activities from Dispatcher customization: Error Handling

    &quot; Get the proper Feeder customization
    SELECT SINGLE *
      FROM zglif_handlecust
      INTO @DATA(ls_handlecust)
      WHERE interface_name    = @ms_dispcust-interface_name
        AND active            = @abap_true.

    IF sy-subrc = 0 AND ms_dispcust-error_handler_class IS NOT INITIAL AND ls_handlecust-default_category IS NOT INITIAL.

      log_add_text( iv_text = |Dispatcher selected entry with Interface { ms_dispcust-interface_name }| iv_detlevel = &apos;2&apos; ).

      &quot; And create proper Error Handler
      TRY.
          CREATE OBJECT mo_error_handler
            TYPE (ms_dispcust-error_handler_class)
            EXPORTING pis_handlecust = ls_handlecust.

          log_add_text( iv_text = |Error Handler Class created. Class: { ms_dispcust-error_handler_class }| iv_detlevel = &apos;2&apos; ).

          &quot; Pass log handle to feeder class. If program has own log handle, this will be empty
          mo_error_handler-&gt;set_log_handle( iv_log_handle = mv_log_handle iv_do_log = ms_dispcust-log_active ).


          log_add_text( iv_text = |Dispatcher says Process Errors! to the Error Handler| iv_detlevel = &apos;2&apos; ).

          &quot; Start the feeding process of the specific feeder
          mo_error_handler-&gt;process_errors( ).

        CATCH cx_sy_create_object_error.
          log_add_text( iv_text = |Exception was raised in the Error Handling step.| iv_detlevel = &apos;2&apos; iv_type = &apos;E&apos; ).
      ENDTRY.

    ELSE.
      log_add_text( iv_text = |No active customization found for Error Handler or no Default category filled in table zglif_handlecust.| iv_detlevel = &apos;2&apos; iv_type = &apos;E&apos; ).
      log_add_text( iv_text = |Aborting Error Handling process for Interface { ms_dispcust-interface_name }.| iv_detlevel = &apos;2&apos; iv_type = &apos;E&apos; ).
    ENDIF.

    log_save( ).

  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZCL_IM_GLIF_IDOC_CREATION" VERSION="1" LANGU="E" DESCRIPT="Imp. class for BAdI imp. ZGLIF_IDOC_CREATION" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk">
  <implementing CLSNAME="ZCL_IM_GLIF_IDOC_CREATION" REFCLSNAME="IF_EX_IDOC_DATA_INSERT" VERSION="1" EXPOSURE="2" STATE="1" RELTYPE="1" EDITORDER="0 "/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <interfaceMethod CLSNAME="ZCL_IM_GLIF_IDOC_CREATION" CPDNAME="IF_EX_IDOC_DATA_INSERT~FILL">
   <source>method IF_EX_IDOC_DATA_INSERT~FILL.
  endmethod.</source>
  </interfaceMethod>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" VERSION="1" LANGU="E" DESCRIPT="Convertor for WS data from ZBOOKNG_WS_DOCUMENT to SAP IDoc" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" RSTAT="K" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZGLIF_SUPERCONVERTOR">
  <types CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="TY_BATCH_R" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="4 " SRCCOLUMN1="6 " SRCROW2="4 " SRCCOLUMN2="44 " TYPESRC_LENG="0 " TYPESRC="ty_batch_r TYPE RANGE OF zglif_batch_id
"/>
  <types CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="TY_DOWN_MESS_S" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="6 " SRCROW2="11 " SRCCOLUMN2="26 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_down_mess_s,
        batch_id       TYPE zglif_batch_stat-batch_id,
        message_id     TYPE zglif_mess_stat-message_id,
        idoc_number    TYPE zglif_mess_stat-idoc_number,
        message_status TYPE zglif_mess_stat-message_status,
      END OF ty_down_mess_s
"/>
  <types CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="TY_DOWN_MESS_T" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="13 " SRCCOLUMN1="6 " SRCROW2="13 " SRCCOLUMN2="48 " TYPESRC_LENG="0 " TYPESRC="ty_down_mess_t TYPE TABLE OF ty_down_mess_s
"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="GS_CONVCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Convertor Customization table" EXPOSURE="2" STATE="1" EDITORDER="8 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_CONVCUST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="GS_IDOC_CONTROL" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDI_DC40" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="GT_BATCH_STAT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="13 " SRCCOLUMN1="6 " SRCROW2="13 " SRCCOLUMN2="53 " TYPESRC_LENG="50 " TYPESRC="gt_batch_stat   TYPE TABLE OF   zglif_batch_stat
"/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="GT_IDOC_DATA" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="16 " SRCCOLUMN1="6 " SRCROW2="16 " SRCCOLUMN2="43 " TYPESRC_LENG="40 " TYPESRC="gt_idoc_data    TYPE TABLE OF edi_dd40
"/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="GT_MESS_STAT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="11 " SRCCOLUMN1="6 " SRCROW2="11 " SRCCOLUMN2="52 " TYPESRC_LENG="49 " TYPESRC="gt_mess_stat    TYPE TABLE OF   zglif_mess_stat
"/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="GT_WS_DATA" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="7 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="20 " SRCCOLUMN1="6 " SRCROW2="20 " SRCCOLUMN2="50 " TYPESRC_LENG="47 " TYPESRC="gt_ws_data      TYPE TABLE OF zglif_bookng_ws
"/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="GV_ERROR" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="6 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDI_ERRFLG" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="GV_IDOC_NUMBER" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="5 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDI_DOCNUM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="MTR_BATCH_ID" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_BATCH_R" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="MT_DOWNLOADED_MESSAGES" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_DOWN_MESS_T" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" REFCLSNAME="ZGLIF_SUPERCONVERTOR" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" REFCLSNAME="ZGLIF_SUPERCONVERTOR" VERSION="1" MTDNAME="CONVERT" EXPOSURE="2"/>
  </inheritance>
  <method CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="CONSTRUCTOR" SCONAME="PIS_CONVCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Convertor&apos;s customization table" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_CONVCUST"/>
   <source>METHOD constructor.

    &quot; Call the constructor of the Superclass: zglif_superconvertor
    super-&gt;constructor( ).
    &quot; take over the Convertor customization structure
    gs_convcust = pis_convcust.

    log_add_text( iv_text = |Convertor WS to iDoc created| iv_detlevel = &apos;3&apos; ).

    DATA: lv_fieldname TYPE string VALUE &apos;(ZGLIF_ACTIVATE)S_BATCH[]&apos;.
    ASSIGN (lv_fieldname) TO FIELD-SYMBOL(&lt;ltr_batch&gt;).
    IF sy-subrc = 0.
      log_add_text( iv_text = |Batch Assigned from (ZGLIF_ACTIVATE)S_BATCH[]| iv_detlevel = &apos;3&apos; ).
      mtr_batch_id = &lt;ltr_batch&gt;.
    ELSE.
      lv_fieldname = &apos;(ZBOOKNG_PROCESSING)P_BATCH&apos;.
      ASSIGN (lv_fieldname) TO FIELD-SYMBOL(&lt;lv_batch&gt;).
      IF sy-subrc = 0.
        log_add_text( iv_text = |Batch Assigned from (ZBOOKNG_PROCESSING)P_BATCH| iv_detlevel = &apos;3&apos; ).
        mtr_batch_id = VALUE #( ( sign = &apos;I&apos; option = &apos;EQ&apos; low = &lt;lv_batch&gt; ) ).
      ENDIF.
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="CONVERT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD convert.
    &quot;Perform parent implementation
    CALL METHOD super-&gt;convert.

    &quot; Do we have any data for conversion?
    get_webservice_data( ).

    IF gt_ws_data IS NOT INITIAL.

*      &quot; Prepare idoc control structure
*      prepare_idoc_control_entry( ).

      log_add_text( iv_text = |Transfering data to new status| iv_detlevel = &apos;3&apos; ).

      LOOP AT gt_ws_data    INTO DATA(ls_ws_data)
                            GROUP BY (  batch_id    = ls_ws_data-batch_id
                                        message_id  = ls_ws_data-message_id )
                                        &quot; size        = GROUP SIZE      cannot be compiled due to unfinished upgrade from 750 to 753
                                        &quot; index       = GROUP INDEX )   cannot be compiled due to unfinished upgrade from 750 to 753
                            INTO DATA(ls_single_document_key).

*        TRY .
*            DATA(lv_idoc_number) = mt_downloaded_messages[ batch_id    = ls_single_document_key-batch_id
*                                                            message_id  = ls_single_document_key-message_id ]-idoc_number.
*            IF lv_idoc_number IS NOT INITIAL.
*              log_add_text( iv_text = |Old iDoc exists for batch: { ls_single_document_key-batch_id } messsage: { ls_single_document_key-message_id }, canceling iDoc: { lv_idoc_number }|
*                                          iv_detlevel = &apos;4&apos; ).
*              cancel_idoc( lv_idoc_number ).
*            ENDIF.
*          CATCH cx_sy_itab_line_not_found.
*
*        ENDTRY.


*
*        &quot; Prepare the header for the IDoc to be created
*        prepare_idoc_header_data( gt_ws_data[ batch_id    = ls_single_document_key-batch_id
*                                              message_id  = ls_single_document_key-message_id ] ).
*

*        &quot; Prepare the items for the IDoc to be created
*        LOOP AT GROUP ls_single_document_key INTO DATA(ls_single_document).
*          prepare_idoc_item_data(  pis_ws_data     = ls_single_document            &quot; Webservice payload - single line
*                                   piv_item_number = CONV buzei( sy-tabix ) ).     &quot; Number of the item for idoc creation
*        ENDLOOP.

*        &quot; Create single IDoc based on the prepared data
*        create_single_idoc(   piv_batch_id   = ls_single_document-batch_id        &quot; Batch ID
*                              piv_message_id = ls_single_document-message_id ).   &quot; Message ID

        DATA(lv_message_status) = zglif_dispatcher=&gt;gc_98_canceled_zero_values.
        LOOP AT GROUP ls_single_document_key INTO DATA(ls_single_document) WHERE ( amount &gt;= &apos;0.5&apos; OR amount &lt; &apos;-0.5&apos; ).
          lv_message_status = zglif_dispatcher=&gt;gc_10_converted.
          EXIT.
        ENDLOOP.
        IF lv_message_status = zglif_dispatcher=&gt;gc_98_canceled_zero_values.
          log_add_text( iv_text = |Batch { ls_single_document_key-batch_id }, Message { ls_single_document_key-message_id } canceled. Zero items | iv_type = &apos;W&apos; iv_detlevel = &apos;5&apos; ).
        ENDIF.

        zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                                    pev_time = DATA(lv_time) ).
        gt_mess_stat = VALUE #( BASE gt_mess_stat
                (
                interface_name      = gs_convcust-interface_name
                &quot; filename            = no filename for webservice payload
                batch_id            = ls_single_document_key-batch_id
                message_id          = ls_single_document_key-message_id
                message_status      = lv_message_status
*                idoc_number         = gv_idoc_number
                message_changed_on  = lv_date
                message_changed_at  = lv_time
                message_changed_by  = sy-uname
                )
            ).

        &quot; Clear the IDoc Header and Items data
        CLEAR gt_idoc_data.
      ENDLOOP.
      &quot; Conversion finished, update GLIF status tables
      update_status_tables( ).
    ELSE.
      log_add_text( iv_text = |No WS data found ready for conversion in table ZGLIF_BOOKNG_WS | iv_detlevel = &apos;3&apos; ).
*      WRITE: / |No WS data found ready for conversion in table ZGLIF_BOOKNG_WS |. &quot; #TODO: application log
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="GET_WEBSERVICE_DATA" VERSION="1" LANGU="E" DESCRIPT="get webservice data for conversion into idoc" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD get_webservice_data.
    &quot; Any data ready for conversion in the WS table?
    &quot; this class is currently bind to table ZGLIF_BOOKNG_WS ( and interface HCCN_BOOKNG )


    &quot; we don&apos;t want to process partialy downloaded data. Therefore we check batch_stat and message_stat tables

    log_add_text( iv_text = |Getting WS data from tables| iv_detlevel = &apos;3&apos; ).

    SELECT DISTINCT b~batch_id, m~message_id, m~idoc_number, m~message_status
      FROM zglif_batch_stat AS b
      JOIN zglif_mess_stat AS m  ON b~batch_id = m~batch_id AND b~interface_name = m~interface_name
      WHERE b~interface_name = @gs_convcust-interface_name
      AND ( b~batch_status = @zglif_dispatcher=&gt;gc_00_downloaded OR b~batch_status = @zglif_dispatcher=&gt;gc_50_corrected )
      AND ( m~message_status = @zglif_dispatcher=&gt;gc_00_downloaded OR m~message_status = @zglif_dispatcher=&gt;gc_50_corrected )
      AND b~batch_id IN @mtr_batch_id
      INTO CORRESPONDING FIELDS OF TABLE @mt_downloaded_messages.

    IF mt_downloaded_messages IS NOT INITIAL.
      SELECT *
        FROM zglif_bookng_ws
        INTO TABLE gt_ws_data
        FOR ALL ENTRIES IN mt_downloaded_messages
        WHERE batch_id = mt_downloaded_messages-batch_id
        AND message_id = mt_downloaded_messages-message_id
*        AND ( message_status = zglif_dispatcher=&gt;gc_00_downloaded OR message_status = zglif_dispatcher=&gt;gc_10_converted )
        ORDER BY PRIMARY KEY.

      log_add_text( iv_text = |Found { lines( mt_downloaded_messages ) } messages| iv_detlevel = &apos;3&apos; ).

    ENDIF.


  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_WS_TO_BAPI" CMPNAME="UPDATE_STATUS_TABLES" VERSION="1" LANGU="E" DESCRIPT="Update GLIF Batch and Message status tables" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD update_status_tables.
    &quot; Update the webservice data table statues so that they are not in status &quot;00 - Downloaded&quot; and tagged for conversion with the next run of interface
    LOOP AT gt_ws_data ASSIGNING FIELD-SYMBOL(&lt;lfs_ws_data&gt;).
      &lt;lfs_ws_data&gt;-message_status = gt_mess_stat[ batch_id = &lt;lfs_ws_data&gt;-batch_id message_id = &lt;lfs_ws_data&gt;-message_id ]-message_status.
    ENDLOOP.
    MODIFY zglif_bookng_ws FROM TABLE gt_ws_data.


    MODIFY zglif_mess_stat FROM TABLE gt_mess_stat.
    COMMIT WORK AND WAIT.

    &quot; Get the message that was modified as last into the first line of the new batch
    SORT gt_mess_stat DESCENDING BY batch_id message_id.

    &quot; Update the GLIF Batch status
    LOOP AT gt_mess_stat    INTO DATA(ls_mess_stat)
                            GROUP BY ( batch_id = ls_mess_stat-batch_id )
                            &quot; size        = GROUP SIZE      cannot be compiled due to unfinished upgrade from 750 to 753
                            &quot; index       = GROUP INDEX )   cannot be compiled due to unfinished upgrade from 750 to 753
                            INTO DATA(ls_single_batch_key).

      gt_batch_stat = VALUE #( BASE gt_batch_stat
        (
          interface_name      = gs_convcust-interface_name
          batch_id            = ls_single_batch_key-batch_id
          batch_changed_on    = gt_mess_stat[ batch_id = ls_single_batch_key-batch_id ]-message_changed_on  &quot; due to sorted table we know that this is the newest entry
          batch_changed_at    = gt_mess_stat[ batch_id = ls_single_batch_key-batch_id ]-message_changed_at  &quot; due to sorted table we know that this is the newest entry
          batch_changed_by    = gt_mess_stat[ batch_id = ls_single_batch_key-batch_id ]-message_changed_by  &quot; due to sorted table we know that this is the last entry
        )
      ).
    ENDLOOP.

    &quot; Update batch statuses
    zglif_utility_storage=&gt;update_batch_status( CHANGING pct_batch = gt_batch_stat ).
    MODIFY zglif_batch_stat FROM TABLE gt_batch_stat.
    COMMIT WORK AND WAIT.

    IF sy-subrc = 0.
      log_add_text( iv_text = |Status of following Batches has been updated:| iv_detlevel = &apos;3&apos; ).
*      WRITE: / |Status of following Batches has been updated: |. &quot; #TODO: application log
    ELSE.
      log_add_text( iv_text = |Problem with updating the status of following Batches: | iv_type = &apos;E&apos; iv_detlevel = &apos;3&apos; ).
*      WRITE: / |Problem with updating the status of following Batches: |. &quot; #TODO: application log
    ENDIF.
    LOOP AT gt_batch_stat INTO DATA(ls_batch_stat).
      log_add_text( iv_text = |Batch ID: { ls_batch_stat-batch_id }| iv_detlevel = &apos;4&apos; ).
*      WRITE: / | { ls_batch_stat-batch_id } |. &quot; #TODO: application log
    ENDLOOP.

  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" VERSION="1" LANGU="E" DESCRIPT="GLIF: Processor class for IDoc processing" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZGLIF_SUPERPROCESSOR">
  <types CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="TY_BATCH_ID_R" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="4 " SRCCOLUMN1="6 " SRCROW2="4 " SRCCOLUMN2="47 " TYPESRC_LENG="0 " TYPESRC="ty_batch_id_r TYPE RANGE OF zglif_batch_id
"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="C_CUSTOMER_INDICATOR" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="2" ATTVALUE="&apos;D&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZBOOKNG_CUST_VEND" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="C_VENDOR_INDICATOR" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;K&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZBOOKNG_CUST_VEND" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GS_PROCCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Processor Customization table" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_PROCCUST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="MTR_BATCH_ID" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_BATCH_ID_R" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="MTR_UNAME" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="7 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="13 " SRCCOLUMN1="9 " SRCROW2="13 " SRCCOLUMN2="40 " TYPESRC_LENG="34 " TYPESRC="mtr_uname TYPE RANGE OF sy-uname
"/>
  <attribute CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="MV_DOCUMENT_STATUS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BAPI_ACC_DOC_STATUS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="MV_PATH_INTERFACE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="6 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZBOOKNG_CSV_AUTO_FOLDER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" REFCLSNAME="ZGLIF_SUPERPROCESSOR" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" REFCLSNAME="ZGLIF_SUPERPROCESSOR" VERSION="1" MTDNAME="PROCESS" EXPOSURE="2"/>
  </inheritance>
  <method CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="CHECK_BALANCE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="CHECK_BALANCE" SCONAME="IT_CURRAMOUNT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIACCR09_TAB"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="CHECK_BALANCE" SCONAME="CT_EXTENSION" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIPAREX2_TAB"/>
   <source>METHOD check_balance.
    DATA: lv_rounding TYPE bapidoccur.

    DATA(lt_curramount) = it_curramount.

    LOOP AT lt_curramount REFERENCE INTO DATA(ls_curramount).

      lv_rounding = ls_curramount-&gt;amt_doccur MOD 1.

      IF lv_rounding &lt;&gt; 0.
        APPEND INITIAL LINE TO ct_extension REFERENCE INTO DATA(ls_extension).
        ls_extension-&gt;structure = &apos;BALANCE_CHECK&apos;.
        ls_extension-&gt;valuepart2 = ls_curramount-&gt;itemno_acc.
        IF lv_rounding &gt;= &apos;0.5&apos;.
          ls_extension-&gt;valuepart1 = &apos;POSITIVE&apos;.
        ELSE.
          ls_extension-&gt;valuepart1 = &apos;NEGATIVE&apos;.
        ENDIF.

      ENDIF.

    ENDLOOP.


  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="CONSTRUCTOR" SCONAME="PIS_PROCCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Processor Customization table" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_PROCCUST"/>
   <source>METHOD constructor.
    &quot; Call the constructor of the Superclass: zglif_superprocessor
    super-&gt;constructor( ).

    &quot; take over the Processor customization structure
    gs_proccust = pis_proccust.

    mtr_uname = VALUE #( ( sign = &apos;I&apos; option = &apos;EQ&apos; low = sy-uname ) ).

    DATA(lv_calling_report) = sy-cprog.
    DATA(lv_fieldname) = |({ lv_calling_report })R_PARK|.

*    DATA: lv_fieldname TYPE string VALUE &apos;(ZBOOKNG_TEST_CSV)R_PARK&apos;.
    ASSIGN (lv_fieldname) TO FIELD-SYMBOL(&lt;lv_park_document&gt;).
    IF sy-subrc = 0 AND &lt;lv_park_document&gt; = abap_true.
      mv_document_status = &apos;3&apos;.
    ELSE.
      CLEAR mv_document_status.
    ENDIF.

    lv_fieldname = |({ lv_calling_report })P_INTERF|.
    ASSIGN (lv_fieldname) TO FIELD-SYMBOL(&lt;lv_interface&gt;).
    IF sy-subrc = 0.
      mv_path_interface = &lt;lv_interface&gt;.
    ENDIF.


    lv_fieldname = |({ lv_calling_report })P_BATCH|.
    ASSIGN (lv_fieldname) TO FIELD-SYMBOL(&lt;lv_batch_id&gt;).
    IF sy-subrc = 0.
      mtr_batch_id = VALUE #( ( sign = &apos;I&apos; option = &apos;EQ&apos; low = &lt;lv_batch_id&gt; ) ).
      CLEAR mtr_uname.
    ENDIF.

    &quot; WRITE: / |IDoc Processor has been created. Rejoice!|. &quot; #TODO: application log
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PHYSICAL_PATH" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PHYSICAL_PATH" SCONAME="IV_LOGICAL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="PATHINTERN"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PHYSICAL_PATH" SCONAME="IV_FILENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EPS2FILNAM" PAROPTIONL="X"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PHYSICAL_PATH" SCONAME="RV_FILE_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD get_physical_path.

    DATA: lv_filename     TYPE eps2filnam,
          lv_logical_path TYPE pathintern.

    IF iv_logical CS &apos;/&apos;.
      SPLIT iv_logical AT &apos;/&apos; INTO TABLE DATA(lt_split).
      TRY.
          lv_logical_path = lt_split[ 1 ].
        CATCH cx_sy_itab_line_not_found.
      ENDTRY.
    ELSE.
      lv_logical_path = iv_logical.
    ENDIF.

    IF iv_filename IS NOT INITIAL.
      lv_filename = iv_filename.
    ELSE.
      lv_filename = &apos;X&apos;.
    ENDIF.

    IF lines( lt_split ) &gt; 1.
      lv_filename = |{ lt_split[ 2 ] }/{ lv_filename }|.
    ENDIF.


    IF mv_path_interface IS NOT INITIAL.
      lv_filename = |{ mv_path_interface }/{ lv_filename }|.
    ENDIF.


    CALL FUNCTION &apos;FILE_GET_NAME_USING_PATH&apos;
      EXPORTING
        logical_path               = lv_logical_path &quot;&apos;Z_GLIF_BOOKNG&apos; &quot;&quot;gs_convcust-sap_folder_source
        file_name                  = lv_filename
        eleminate_blanks           = abap_false
      IMPORTING
        file_name_with_path        = rv_file_path
      EXCEPTIONS
        path_not_found             = 1
        missing_parameter          = 2
        operating_system_not_found = 3
        file_system_not_found      = 4
        OTHERS                     = 5.
    IF sy-subrc = 1.
      &quot; path not found, probably used physical path, return it
      rv_file_path = iv_logical.
    ELSEIF sy-subrc &lt;&gt; 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 INTO DATA(lv_message).
      WRITE: / lv_message.
      RETURN.
    ENDIF.

    IF iv_filename IS INITIAL.

      DATA(lv_len) = strlen( rv_file_path ).
      SUBTRACT 1 FROM lv_len.
      rv_file_path = rv_file_path(lv_len).    &quot; get rid of X at the end

    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_DATA" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_DATA" SCONAME="IV_BATCH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_BATCH_STAT-BATCH_ID"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_DATA" SCONAME="IV_MESS_ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_MESS_STAT-MESSAGE_ID"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_DATA" SCONAME="ES_DOC_HEADER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIACHE09"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_DATA" SCONAME="ET_CURRAMOUNT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIACCR09_TAB"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_DATA" SCONAME="ET_ACCOUNTGL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIACGL09_TAB"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_DATA" SCONAME="ET_EXTENSION2" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIPAREX2_TAB"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_DATA" SCONAME="ET_RETURN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIRET2_TAB"/>
   <source>METHOD get_prepared_data.

    SELECT * FROM zbookng_csv_data
    INTO TABLE @DATA(lt_data)
    WHERE batch_id = @iv_batch
    AND message_id = @iv_mess_id.


    READ TABLE lt_data INTO DATA(ls_data) INDEX 1.
    IF sy-subrc = 0.
      es_doc_header-username = sy-uname.
      es_doc_header-comp_code = ls_data-company_code.
      es_doc_header-doc_type = ls_data-document_type.
      es_doc_header-fisc_year = ls_data-posting_date(4).
      es_doc_header-doc_date = ls_data-document_date.
      es_doc_header-pstng_date = ls_data-posting_date.
      es_doc_header-fis_period = COND #( WHEN ls_data-period IS NOT INITIAL THEN ls_data-period ELSE ls_data-posting_date+4(2) ).
      es_doc_header-ledger_group = ls_data-ledger.
      es_doc_header-header_txt = ls_data-header_text.
      es_doc_header-bus_act = &apos;RFBU&apos;.
      es_doc_header-ref_doc_no = ls_data-message_id.

      APPEND INITIAL LINE TO et_extension2 ASSIGNING FIELD-SYMBOL(&lt;ls_extension2&gt;).

*      &lt;ls_extension2&gt;-valuepart1 = &apos;XREF1_HD&apos;.
*      &lt;ls_extension2&gt;-valuepart2 = ls_data-batch_id.

      &lt;ls_extension2&gt;-structure = &apos;ACCOUNTGL&apos;.
      &lt;ls_extension2&gt;-valuepart1 = &apos;TABLE&apos;.
      &lt;ls_extension2&gt;-valuepart2 = &apos;C_ACCIT&apos;.
      &lt;ls_extension2&gt;-valuepart3 = &apos;XREF1_HD&apos;.
      &lt;ls_extension2&gt;-valuepart4 = ls_data-batch_id.


    ENDIF.

    LOOP AT lt_data INTO ls_data.


      APPEND INITIAL LINE TO et_curramount ASSIGNING FIELD-SYMBOL(&lt;ls_curramount&gt;).
      &lt;ls_curramount&gt;-itemno_acc = ls_data-line_item.
      &lt;ls_curramount&gt;-currency = ls_data-currency.
      &lt;ls_curramount&gt;-amt_doccur = SWITCH #( ls_data-debit_credit WHEN &apos;C&apos; THEN
                                ls_data-amount_document * -1 ELSE ls_data-amount_document ).
      &lt;ls_curramount&gt;-curr_type = &apos;00&apos;.

      IF ls_data-amount_local IS NOT INITIAL.
        APPEND INITIAL LINE TO et_curramount ASSIGNING &lt;ls_curramount&gt;.
        &lt;ls_curramount&gt;-itemno_acc = ls_data-line_item.
        &lt;ls_curramount&gt;-currency = &apos;VND&apos;.
        &lt;ls_curramount&gt;-amt_doccur = SWITCH #( ls_data-debit_credit WHEN &apos;C&apos; THEN
                                  ls_data-amount_local * -1 ELSE ls_data-amount_local ).
        &lt;ls_curramount&gt;-curr_type = &apos;10&apos;.
      ENDIF.




      APPEND INITIAL LINE TO et_accountgl ASSIGNING FIELD-SYMBOL(&lt;ls_gl_account&gt;).

      &lt;ls_gl_account&gt;-itemno_acc = ls_data-line_item.
      &lt;ls_gl_account&gt;-gl_account = ls_data-gl_account.
      &lt;ls_gl_account&gt;-segment = ls_data-segment.
      &lt;ls_gl_account&gt;-item_text = ls_data-item_text.
      &lt;ls_gl_account&gt;-costcenter = ls_data-cost_center.
      &lt;ls_gl_account&gt;-profit_ctr = ls_data-profit_center.
      &lt;ls_gl_account&gt;-ref_key_1 = ls_data-reference1.
      &lt;ls_gl_account&gt;-ref_key_2 = ls_data-reference2.
      &lt;ls_gl_account&gt;-ref_key_3 = ls_data-reference3.
      &lt;ls_gl_account&gt;-orderid = ls_data-order_number.
      &lt;ls_gl_account&gt;-alloc_nmbr = ls_data-assigment.
      &lt;ls_gl_account&gt;-value_date = ls_data-value_date.
*      &lt;ls_gl_account&gt;-trade_id = ls_data-vbund.
*
*      IF ls_data-zfbdt IS NOT INITIAL.
*        APPEND INITIAL LINE TO et_extension2 ASSIGNING &lt;ls_extension2&gt;.
*        &lt;ls_extension2&gt;-structure = &apos;ACCOUNTGL&apos;.
*        &lt;ls_extension2&gt;-valuepart1 = ls_data-line_item.
*        &lt;ls_extension2&gt;-valuepart2 = &apos;C_ACCIT&apos;.
*        &lt;ls_extension2&gt;-valuepart3 = &apos;ZFBDT&apos;.
*        &lt;ls_extension2&gt;-valuepart4 = ls_data-zfbdt.
*      ENDIF.


    ENDLOOP.



  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_TAX_DATA" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_TAX_DATA" SCONAME="IV_BATCH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_BATCH_STAT-BATCH_ID"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_TAX_DATA" SCONAME="IV_MESS_ID" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_MESS_STAT-MESSAGE_ID"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_TAX_DATA" SCONAME="ES_DOC_HEADER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIACHE09"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_TAX_DATA" SCONAME="ES_CUSTOMERCPD" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIACPA09"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_TAX_DATA" SCONAME="ET_CURRAMOUNT" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIACCR09_TAB"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_TAX_DATA" SCONAME="ET_ACCOUNTGL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="6 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIACGL09_TAB"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_TAX_DATA" SCONAME="ET_ACCOUNTRECEIVABLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="7 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIACAR09_TAB"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_TAX_DATA" SCONAME="ET_ACCOUNTPAYABLE" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="8 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIACAP09_TAB"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_TAX_DATA" SCONAME="ET_ACCOUNTTAX" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="9 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIACTX09_TAB"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_TAX_DATA" SCONAME="ET_EXTENSION2" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="10 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIPAREX2_TAB"/>
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="GET_PREPARED_TAX_DATA" SCONAME="ET_RETURN" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="11 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="BAPIRET2_TAB"/>
   <source>METHOD get_prepared_tax_data.

    TYPES: BEGIN OF ty_tax_data_s,
             itemno_acc   TYPE posnr_acc,
             company_code TYPE bukrs,
             tax_code     TYPE mwskz,
             amount       TYPE wrbtr,
             base_amount  TYPE wrbtr,
             currency     TYPE waers,
             dc_i         TYPE i,
           END OF ty_tax_data_s,
           ty_tax_data_t TYPE TABLE OF ty_tax_data_s.


    DATA: lt_mwdat      TYPE STANDARD TABLE OF rtax1u15,
          lv_fwnav      TYPE bset-fwste,
          lv_fwste      TYPE bset-fwste,
          lv_last_item  TYPE posnr_acc,
          lt_tax_data   TYPE ty_tax_data_t,
          lv_tax_amount TYPE bapitaxamt,
          lv_dc_i       TYPE i.

    CASE gs_proccust-interface_name.
      WHEN zcl_bookng_tools=&gt;mc_csv_tax_interface.

        SELECT * FROM zbookng_csv_tax
            INTO TABLE @DATA(lt_data)
            WHERE batch_id = @iv_batch
            AND message_id = @iv_mess_id.

      WHEN zcl_bookng_tools=&gt;mc_csv_auto.
        SELECT * FROM zbookng_csv_auto
            INTO CORRESPONDING FIELDS OF TABLE @lt_data
            WHERE batch_id = @iv_batch
            AND message_id = @iv_mess_id
            AND folder = @mv_path_interface.
      WHEN zcl_bookng_tools=&gt;mc_interface_name.

        SELECT * FROM zbookng_ws_to_bapi
        INTO CORRESPONDING FIELDS OF TABLE @lt_data
        WHERE batch_id = @iv_batch
        AND message_id = @iv_mess_id..

    ENDCASE.

**********************************************************************
    &quot; Header data

    READ TABLE lt_data INTO DATA(ls_data) INDEX 1.
    IF sy-subrc = 0.
      es_doc_header-username = sy-uname.
      es_doc_header-comp_code = ls_data-company_code.
      es_doc_header-doc_type = ls_data-document_type.
      es_doc_header-fisc_year = ls_data-posting_date(4).
      es_doc_header-doc_date = ls_data-document_date.
      es_doc_header-pstng_date = ls_data-posting_date.
      es_doc_header-fis_period = COND #( WHEN ls_data-period IS NOT INITIAL THEN ls_data-period ELSE ls_data-posting_date+4(2) ).
      es_doc_header-ledger_group = ls_data-ledger.
      es_doc_header-header_txt = ls_data-header_text.
      es_doc_header-bus_act = &apos;RFBU&apos;.
      es_doc_header-ref_doc_no = ls_data-message_id.

      APPEND INITIAL LINE TO et_extension2 ASSIGNING FIELD-SYMBOL(&lt;ls_extension2&gt;).

*      &lt;ls_extension2&gt;-valuepart1 = &apos;XREF1_HD&apos;.
*      &lt;ls_extension2&gt;-valuepart2 = ls_data-batch_id.

      &lt;ls_extension2&gt;-structure = &apos;ACCOUNTGL&apos;.
      &lt;ls_extension2&gt;-valuepart1 = &apos;TABLE&apos;.
      &lt;ls_extension2&gt;-valuepart2 = &apos;C_ACCIT&apos;.
      &lt;ls_extension2&gt;-valuepart3 = &apos;XREF1_HD&apos;.
      &lt;ls_extension2&gt;-valuepart4 = ls_data-batch_id.


      APPEND INITIAL LINE TO et_extension2 ASSIGNING &lt;ls_extension2&gt;.
      &lt;ls_extension2&gt;-structure = &apos;BALANCE_CHECK&apos;.

    ENDIF.

    LOOP AT lt_data INTO ls_data.

      IF lv_last_item &lt; ls_data-line_item.
        lv_last_item = ls_data-line_item.
      ENDIF.

      IF ls_data-debit_credit = &apos;C&apos;.
        lv_dc_i = -1.
      ELSE.
        lv_dc_i = 1.
      ENDIF.

**********************************************************************
      &quot; Currency table

      APPEND INITIAL LINE TO et_curramount ASSIGNING FIELD-SYMBOL(&lt;ls_curramount&gt;).
      &lt;ls_curramount&gt;-itemno_acc = ls_data-line_item.
      &lt;ls_curramount&gt;-currency = ls_data-currency.
*      &lt;ls_curramount&gt;-amt_doccur = SWITCH #( ls_data-debit_credit WHEN &apos;C&apos; THEN
*                                ls_data-amount_document * -1 ELSE ls_data-amount_document ).
      &lt;ls_curramount&gt;-amt_doccur = ls_data-amount_document * lv_dc_i.
      &lt;ls_curramount&gt;-amt_doccur_long = ls_data-amount_document * lv_dc_i.


      &lt;ls_curramount&gt;-curr_type = &apos;00&apos;.

      IF ls_data-mwskz IS NOT INITIAL AND ls_data-gross_net = &apos;G&apos;.

        &quot; Get tax amount from file
        IF ls_data-tax_amount IS NOT INITIAL.
*          IF &lt;ls_curramount&gt;-amt_doccur &gt; 0.
*            SUBTRACT ls_data-tax_amount FROM &lt;ls_curramount&gt;-amt_doccur.
*          ELSE.
*            ADD ls_data-tax_amount TO &lt;ls_curramount&gt;-amt_doccur.
*          ENDIF.
*          ADD ls_data-tax_amount TO lv_tax_amount.
          &lt;ls_curramount&gt;-tax_amt = ls_data-tax_amount * lv_dc_i.
          &lt;ls_curramount&gt;-tax_amt_long = ls_data-tax_amount * lv_dc_i.



          READ TABLE lt_tax_data ASSIGNING FIELD-SYMBOL(&lt;ls_tax_data&gt;) WITH KEY tax_code = ls_data-mwskz dc_i = lv_dc_i.
          IF sy-subrc = 0.
            ADD ls_data-tax_amount TO &lt;ls_tax_data&gt;-amount.
            &lt;ls_tax_data&gt;-base_amount = &lt;ls_tax_data&gt;-base_amount + ( ls_data-amount_document - ls_data-tax_amount ).
          ELSE.
            APPEND INITIAL LINE TO lt_tax_data ASSIGNING &lt;ls_tax_data&gt;.
            &lt;ls_tax_data&gt;-tax_code = ls_data-mwskz.
            &lt;ls_tax_data&gt;-amount = ls_data-tax_amount.
            &lt;ls_tax_data&gt;-dc_i = lv_dc_i.
            &lt;ls_tax_data&gt;-base_amount = ls_data-amount_document - ls_data-tax_amount.
            &lt;ls_tax_data&gt;-company_code = ls_data-company_code.
            &lt;ls_tax_data&gt;-currency = ls_data-currency.
          ENDIF.


          &quot; Calculate base amount
        ELSE.

          CALL FUNCTION &apos;CALCULATE_TAX_FROM_GROSSAMOUNT&apos;
            EXPORTING
              i_bukrs                   = ls_data-company_code
              i_mwskz                   = ls_data-mwskz
*             i_txjcd                   = space
              i_waers                   = ls_data-currency
              i_wrbtr                   = ls_data-amount_document
*             i_zbd1p                   = 0
*             i_prsdt                   =
*             i_protokoll               =
*             i_taxps                   =
*             i_accnt_ext               =
*             i_accdata                 =
*             is_enhancement            =
*             i_pricing_refresh_tx      = space
            IMPORTING
              e_fwnav                   = lv_fwnav  &quot; add
*             e_fwnvv                   = lv_fwnvv
              e_fwste                   = lv_fwste  &quot; subtract
*             e_fwast                   = lv_fwast
            TABLES
              t_mwdat                   = lt_mwdat
            EXCEPTIONS
              bukrs_not_found           = 1
              country_not_found         = 2
              mwskz_not_defined         = 3
              mwskz_not_valid           = 4
              account_not_found         = 5
              different_discount_base   = 6
              different_tax_base        = 7
              txjcd_not_valid           = 8
              not_found                 = 9
              ktosl_not_found           = 10
              kalsm_not_found           = 11
              parameter_error           = 12
              knumh_not_found           = 13
              kschl_not_found           = 14
              unknown_error             = 15
              amounts_too_large_for_tax = 16
              OTHERS                    = 17.

          TRY.
*              IF &lt;ls_curramount&gt;-amt_doccur &gt; 0.
*                &lt;ls_curramount&gt;-amt_doccur = lt_mwdat[ 1 ]-kawrt.
*
*              ELSE.
*                &lt;ls_curramount&gt;-amt_doccur = lt_mwdat[ 1 ]-kawrt.
*                &lt;ls_curramount&gt;-amt_doccur = &lt;ls_curramount&gt;-amt_doccur * -1.
*              ENDIF.
*              ADD lv_fwste TO lv_tax_amount.


*              &lt;ls_curramount&gt;-tax_amt = lv_fwste * lv_dc_i.
*              &lt;ls_curramount&gt;-tax_amt_long = lv_fwste * lv_dc_i.

              &lt;ls_curramount&gt;-amt_doccur = &lt;ls_curramount&gt;-amt_doccur - ( lv_fwste * lv_dc_i ) + ( lv_fwnav * lv_dc_i ).
              &lt;ls_curramount&gt;-amt_doccur_long = &lt;ls_curramount&gt;-amt_doccur_long - ( lv_fwste * lv_dc_i ) + ( lv_fwnav * lv_dc_i ).


              &lt;ls_curramount&gt;-tax_amt = lv_fwnav * lv_dc_i.
              &lt;ls_curramount&gt;-tax_amt_long = lv_fwnav * lv_dc_i.


              READ TABLE lt_tax_data ASSIGNING &lt;ls_tax_data&gt; WITH KEY tax_code = ls_data-mwskz dc_i = lv_dc_i.
              IF sy-subrc = 0.
                ADD lv_fwste TO &lt;ls_tax_data&gt;-amount.
*                DATA(lv_round) = ( ls_data-amount_document - lv_fwste ) dec = 0 ) .
*                &lt;ls_tax_data&gt;-base_amount = &lt;ls_tax_data&gt;-base_amount + ( ls_data-amount_document - lv_fwste ).
                &lt;ls_tax_data&gt;-base_amount = &lt;ls_tax_data&gt;-base_amount + round( val = ( ls_data-amount_document - lv_fwste ) dec = 0 ).
              ELSE.
                APPEND INITIAL LINE TO lt_tax_data ASSIGNING &lt;ls_tax_data&gt;.
                &lt;ls_tax_data&gt;-tax_code = ls_data-mwskz.
                &lt;ls_tax_data&gt;-amount = lv_fwste.
                &lt;ls_tax_data&gt;-dc_i = lv_dc_i.
                &lt;ls_tax_data&gt;-base_amount = round( val = ( ls_data-amount_document - lv_fwste ) dec = 0 ). &quot;ls_data-amount_document - lv_fwste.
                &lt;ls_tax_data&gt;-company_code = ls_data-company_code.
                &lt;ls_tax_data&gt;-currency = ls_data-currency.
              ENDIF.



            CATCH cx_sy_itab_line_not_found.
              &lt;ls_curramount&gt;-amt_doccur = SWITCH #( ls_data-debit_credit
                                    WHEN &apos;C&apos; THEN ls_data-amount_document * -1
                                    ELSE ls_data-amount_document ).
          ENDTRY.
        ENDIF.

      ELSEIF ls_data-mwskz IS NOT INITIAL AND ls_data-gross_net = &apos;N&apos;.
        IF ls_data-tax_amount IS NOT INITIAL.

          ADD ls_data-tax_amount TO lv_tax_amount.
          CASE ls_data-debit_credit.
            WHEN &apos;D&apos;.
              ADD ls_data-tax_amount TO: &lt;ls_curramount&gt;-amt_doccur, &lt;ls_curramount&gt;-amt_doccur_long.
            WHEN &apos;C&apos;.
              SUBTRACT ls_data-tax_amount FROM: &lt;ls_curramount&gt;-amt_doccur, &lt;ls_curramount&gt;-amt_doccur_long.
          ENDCASE.

          &lt;ls_curramount&gt;-tax_amt = ls_data-tax_amount * lv_dc_i.
          &lt;ls_curramount&gt;-tax_amt_long = ls_data-tax_amount * lv_dc_i.

          READ TABLE lt_tax_data ASSIGNING &lt;ls_tax_data&gt; WITH KEY tax_code = ls_data-mwskz  dc_i = lv_dc_i.
          IF sy-subrc = 0.
            ADD ls_data-tax_amount TO &lt;ls_tax_data&gt;-amount.
            ADD ls_data-amount_document TO &lt;ls_tax_data&gt;-base_amount.
          ELSE.
            APPEND INITIAL LINE TO lt_tax_data ASSIGNING &lt;ls_tax_data&gt;.
            &lt;ls_tax_data&gt;-tax_code = ls_data-mwskz.
            &lt;ls_tax_data&gt;-amount = ls_data-tax_amount.
            &lt;ls_tax_data&gt;-dc_i = lv_dc_i.
            &lt;ls_tax_data&gt;-base_amount = ls_data-amount_document.
            &lt;ls_tax_data&gt;-company_code = ls_data-company_code.
            &lt;ls_tax_data&gt;-currency = ls_data-currency.
          ENDIF.

          &quot; Calculate base amount
        ELSE.

          CALL FUNCTION &apos;CALCULATE_TAX_FROM_NET_AMOUNT&apos;
            EXPORTING
              i_bukrs                   = ls_data-company_code
              i_mwskz                   = ls_data-mwskz
*             i_txjcd                   = space
              i_waers                   = ls_data-currency
              i_wrbtr                   = ls_data-amount_document
*             i_zbd1p                   = 0
*             i_prsdt                   =
*             i_protokoll               =
*             i_taxps                   =
*             i_accnt_ext               =
*             i_accdata                 =
*             is_enhancement            =
*             i_pricing_refresh_tx      = space
            IMPORTING
              e_fwnav                   = lv_fwnav  &quot; add
*             e_fwnvv                   = lv_fwnvv
              e_fwste                   = lv_fwste  &quot; do nothing with NET
*             e_fwast                   = lv_fwast
            TABLES
              t_mwdat                   = lt_mwdat
            EXCEPTIONS
              bukrs_not_found           = 1
              country_not_found         = 2
              mwskz_not_defined         = 3
              mwskz_not_valid           = 4
              account_not_found         = 5
              different_discount_base   = 6
              different_tax_base        = 7
              txjcd_not_valid           = 8
              not_found                 = 9
              ktosl_not_found           = 10
              kalsm_not_found           = 11
              parameter_error           = 12
              knumh_not_found           = 13
              kschl_not_found           = 14
              unknown_error             = 15
              amounts_too_large_for_tax = 16
              OTHERS                    = 17.

*          ADD lv_fwste TO lv_tax_amount.

          &lt;ls_curramount&gt;-tax_amt = lv_fwnav * lv_dc_i.
          &lt;ls_curramount&gt;-tax_amt_long = lv_fwnav * lv_dc_i.

*          CASE ls_data-debit_credit.
*            WHEN &apos;D&apos;.
*              ADD lv_fwste TO: &lt;ls_curramount&gt;-amt_doccur, &lt;ls_curramount&gt;-amt_doccur_long.
*            WHEN &apos;C&apos;.
*              SUBTRACT lv_fwste FROM: &lt;ls_curramount&gt;-amt_doccur, &lt;ls_curramount&gt;-amt_doccur_long.
*          ENDCASE.

          &lt;ls_curramount&gt;-amt_doccur = &lt;ls_curramount&gt;-amt_doccur + ( lv_fwnav * lv_dc_i ).
          &lt;ls_curramount&gt;-amt_doccur_long = &lt;ls_curramount&gt;-amt_doccur_long + ( lv_fwnav * lv_dc_i ).

          READ TABLE lt_tax_data ASSIGNING &lt;ls_tax_data&gt; WITH KEY tax_code = ls_data-mwskz  dc_i = lv_dc_i.
          IF sy-subrc = 0.
            ADD lv_fwste TO &lt;ls_tax_data&gt;-amount.
            ADD ls_data-amount_document TO &lt;ls_tax_data&gt;-base_amount.
          ELSE.
            APPEND INITIAL LINE TO lt_tax_data ASSIGNING &lt;ls_tax_data&gt;.
            &lt;ls_tax_data&gt;-tax_code = ls_data-mwskz.
            &lt;ls_tax_data&gt;-amount = lv_fwste.
            &lt;ls_tax_data&gt;-dc_i = lv_dc_i.
            &lt;ls_tax_data&gt;-base_amount = ls_data-amount_document.
            &lt;ls_tax_data&gt;-company_code = ls_data-company_code.
            &lt;ls_tax_data&gt;-currency = ls_data-currency.
          ENDIF.

        ENDIF.



      ENDIF.

      IF ls_data-mwskz IS NOT INITIAL AND ls_data-tax_amount IS NOT INITIAL.
        CALL FUNCTION &apos;CALCULATE_TAX_FROM_NET_AMOUNT&apos;
          EXPORTING
            i_bukrs           = ls_data-company_code
            i_mwskz           = ls_data-mwskz
            i_waers           = ls_data-currency
            i_wrbtr           = 0
          TABLES
            t_mwdat           = lt_mwdat
          EXCEPTIONS
            bukrs_not_found   = 1
            country_not_found = 2
            mwskz_not_defined = 3
            mwskz_not_valid   = 4
            ktosl_not_found   = 5
            kalsm_not_found   = 6
            parameter_error   = 7
            knumh_not_found   = 8
            kschl_not_found   = 9
            unknown_error     = 10
            account_not_found = 11
            txjcd_not_valid   = 12
            OTHERS            = 13.

        DATA lv_coeficient_max TYPE p.
        LOOP AT lt_mwdat INTO DATA(ls_mwdat).
          IF lv_coeficient_max &lt; abs( ls_mwdat-kbetr ).
            lv_coeficient_max = abs( ls_mwdat-kbetr ).
          ENDIF.
        ENDLOOP.
        lv_coeficient_max = lv_coeficient_max / 100.
        IF lv_coeficient_max &gt; 1.
          &lt;ls_curramount&gt;-amt_doccur = &lt;ls_curramount&gt;-amt_doccur + ( &lt;ls_curramount&gt;-tax_amt * ( lv_coeficient_max - 1 ) ).
          &lt;ls_curramount&gt;-amt_doccur_long = &lt;ls_curramount&gt;-amt_doccur_long + ( &lt;ls_curramount&gt;-tax_amt * ( lv_coeficient_max - 1 ) ).
          &lt;ls_curramount&gt;-tax_amt = &lt;ls_curramount&gt;-tax_amt * lv_coeficient_max.
          &lt;ls_curramount&gt;-tax_amt_long = &lt;ls_curramount&gt;-tax_amt_long * lv_coeficient_max.
        ENDIF.


      ENDIF.

**********************************************************************

      IF ls_data-amount_local IS NOT INITIAL.
        APPEND INITIAL LINE TO et_curramount ASSIGNING &lt;ls_curramount&gt;.
        &lt;ls_curramount&gt;-itemno_acc = ls_data-line_item.
        &lt;ls_curramount&gt;-currency = &apos;VND&apos;.
        &lt;ls_curramount&gt;-amt_doccur = SWITCH #( ls_data-debit_credit WHEN &apos;C&apos; THEN
                                  ls_data-amount_local * -1 ELSE ls_data-amount_local ).
        &lt;ls_curramount&gt;-curr_type = &apos;10&apos;.
      ENDIF.
**********************************************************************
      &quot; Vendor data
      IF ls_data-vendor IS NOT INITIAL.

        IF ls_data-cust_vend = c_vendor_indicator OR ls_data-cust_vend IS INITIAL.

          SELECT SINGLE xcpdk
          FROM lfa1
          INTO @DATA(lv_one_time)
          WHERE lifnr = @ls_data-vendor.

          IF sy-subrc &lt;&gt; 0.
            &quot; Vendor not found! will endup in error
          ENDIF.

          APPEND INITIAL LINE TO  et_accountpayable ASSIGNING FIELD-SYMBOL(&lt;ls_account_payable&gt;).
          &lt;ls_account_payable&gt;-itemno_acc = ls_data-line_item.
          &lt;ls_account_payable&gt;-vendor_no = ls_data-vendor.
          &lt;ls_account_payable&gt;-gl_account = ls_data-gl_account.
          &lt;ls_account_payable&gt;-item_text = ls_data-item_text.
          &lt;ls_account_payable&gt;-profit_ctr = ls_data-profit_center.
          &lt;ls_account_payable&gt;-ref_key_1 = ls_data-reference1.
          &lt;ls_account_payable&gt;-ref_key_2 = ls_data-reference2.
          &lt;ls_account_payable&gt;-ref_key_3 = ls_data-reference3.
          &lt;ls_account_payable&gt;-alloc_nmbr = ls_data-assigment.

          IF lv_one_time = abap_true.
            es_customercpd-name = ls_data-name.
            es_customercpd-tax_no_1 = ls_data-tax_no_1.
            es_customercpd-street = ls_data-street.
            es_customercpd-city = ls_data-city.
            es_customercpd-country = &apos;VN&apos;.
          ENDIF.

        ELSEIF ls_data-cust_vend = c_customer_indicator.

          SELECT SINGLE xcpdk
          FROM kna1
          INTO @lv_one_time
          WHERE kunnr = @ls_data-vendor.

          APPEND INITIAL LINE TO  et_accountreceivable ASSIGNING FIELD-SYMBOL(&lt;ls_account_receivable&gt;).
          &lt;ls_account_receivable&gt;-itemno_acc = ls_data-line_item.
          &lt;ls_account_receivable&gt;-customer = CONV kunnr( ls_data-vendor ).
          &lt;ls_account_receivable&gt;-gl_account = ls_data-gl_account.
          &lt;ls_account_receivable&gt;-item_text = ls_data-item_text.
          &lt;ls_account_receivable&gt;-profit_ctr = ls_data-profit_center.
          &lt;ls_account_receivable&gt;-ref_key_1 = ls_data-reference1.
          &lt;ls_account_receivable&gt;-ref_key_2 = ls_data-reference2.
          &lt;ls_account_receivable&gt;-ref_key_3 = ls_data-reference3.
          &lt;ls_account_receivable&gt;-alloc_nmbr = ls_data-assigment.

          IF lv_one_time = abap_true.
            es_customercpd-name = ls_data-name.
            es_customercpd-tax_no_1 = ls_data-tax_no_1.
            es_customercpd-street = ls_data-street.
            es_customercpd-city = ls_data-city.
            es_customercpd-country = &apos;VN&apos;.
          ENDIF.


        ELSE.

          WRITE / |*****************************************************|.
          WRITE / |Message: { iv_mess_id }, line item: { ls_data-line_item }|.
          WRITE / |WRONG CUSTOMER/VENDOR INDICATOR. Probably parsing data error. Check commas in data|.
          WRITE / |*****************************************************|.
          RETURN. &quot; in rare cases it happenes that document would be created but without vendor lines
        ENDIF.

**********************************************************************
        &quot; Other data
      ELSE.

        APPEND INITIAL LINE TO et_accountgl ASSIGNING FIELD-SYMBOL(&lt;ls_gl_account&gt;).

        &lt;ls_gl_account&gt;-itemno_acc = ls_data-line_item.
        &lt;ls_gl_account&gt;-gl_account = ls_data-gl_account.
        &lt;ls_gl_account&gt;-segment = ls_data-segment.
        &lt;ls_gl_account&gt;-item_text = ls_data-item_text.
        &lt;ls_gl_account&gt;-costcenter = ls_data-cost_center.
        &lt;ls_gl_account&gt;-profit_ctr = ls_data-profit_center.
        &lt;ls_gl_account&gt;-ref_key_1 = ls_data-reference1.
        &lt;ls_gl_account&gt;-ref_key_2 = ls_data-reference2.
        &lt;ls_gl_account&gt;-ref_key_3 = ls_data-reference3.
        &lt;ls_gl_account&gt;-orderid = ls_data-order_number.
        &lt;ls_gl_account&gt;-alloc_nmbr = ls_data-assigment.
        &lt;ls_gl_account&gt;-value_date = ls_data-value_date.
        &lt;ls_gl_account&gt;-tax_code = ls_data-mwskz.
        &lt;ls_gl_account&gt;-trade_id = ls_data-vbund.

        IF ls_data-zfbdt IS NOT INITIAL.
          APPEND INITIAL LINE TO et_extension2 ASSIGNING &lt;ls_extension2&gt;.
          &lt;ls_extension2&gt;-structure = &apos;ACCOUNTGL&apos;.
          &lt;ls_extension2&gt;-valuepart1 = ls_data-line_item.
          &lt;ls_extension2&gt;-valuepart2 = &apos;C_ACCIT&apos;.
          &lt;ls_extension2&gt;-valuepart3 = &apos;ZFBDT&apos;.
          &lt;ls_extension2&gt;-valuepart4 = ls_data-zfbdt.
        ENDIF.


      ENDIF.


*      IF ls_data-mwskz IS NOT INITIAL AND ls_data-gross_net IS NOT INITIAL.
*
*        READ TABLE lt_tax_data ASSIGNING &lt;ls_tax_data&gt; WITH KEY tax_code = ls_data-mwskz.
*        IF sy-subrc = 0.
*          ADD ls_data-tax_amount TO &lt;ls_tax_data&gt;-amount.
*        ELSE.
*          APPEND INITIAL LINE TO lt_tax_data ASSIGNING &lt;ls_tax_data&gt;.
*          &lt;ls_tax_data&gt;-tax_code = ls_data-mwskz.
*          &lt;ls_tax_data&gt;-amount = ls_data-tax_amount.
*        ENDIF.
*
*      ENDIF.

    ENDLOOP.

*    LOOP AT lt_tax_data INTO DATA(ls_tax_data).
*
*      CLEAR: lv_fwnav, lv_fwnvv, lv_fwste, lv_fwast, lt_mwdat.
*
*      CASE ls_tax_data-gross_net.
*
*        WHEN &apos;G&apos;.
*          CALL FUNCTION &apos;CALCULATE_TAX_FROM_GROSSAMOUNT&apos;
*            EXPORTING
*              i_bukrs                   = ls_tax_data-company_code
*              i_mwskz                   = ls_tax_data-mwskz
**             i_txjcd                   = space
*              i_waers                   = ls_tax_data-currency
*              i_wrbtr                   = ls_tax_data-amount_document
**             i_zbd1p                   = 0
**             i_prsdt                   =
**             i_protokoll               =
**             i_taxps                   =
**             i_accnt_ext               =
**             i_accdata                 =
**             is_enhancement            =
**             i_pricing_refresh_tx      = space
*            IMPORTING
*              e_fwnav                   = lv_fwnav
*              e_fwnvv                   = lv_fwnvv
*              e_fwste                   = lv_fwste
*              e_fwast                   = lv_fwast
*            TABLES
*              t_mwdat                   = lt_mwdat
*            EXCEPTIONS
*              bukrs_not_found           = 1
*              country_not_found         = 2
*              mwskz_not_defined         = 3
*              mwskz_not_valid           = 4
*              account_not_found         = 5
*              different_discount_base   = 6
*              different_tax_base        = 7
*              txjcd_not_valid           = 8
*              not_found                 = 9
*              ktosl_not_found           = 10
*              kalsm_not_found           = 11
*              parameter_error           = 12
*              knumh_not_found           = 13
*              kschl_not_found           = 14
*              unknown_error             = 15
*              amounts_too_large_for_tax = 16
*              OTHERS                    = 17.
*
*        WHEN &apos;N&apos;.
*
*          CALL FUNCTION &apos;CALCULATE_TAX_FROM_NET_AMOUNT&apos;
*            EXPORTING
*              i_bukrs           = ls_tax_data-company_code
*              i_mwskz           = ls_tax_data-mwskz
**             i_txjcd           = space
*              i_waers           = ls_tax_data-currency
*              i_wrbtr           = ls_tax_data-amount_document
**             i_zbd1p           = 0
**             i_prsdt           =
**             i_protokoll       =
**             i_taxps           =
**             i_accnt_ext       =
**             i_accdata         =
**             i_pricing_refresh_tx = space
*            IMPORTING
*              e_fwnav           = lv_fwnav
*              e_fwnvv           = lv_fwnvv
*              e_fwste           = lv_fwste
*              e_fwast           = lv_fwast
*            TABLES
*              t_mwdat           = lt_mwdat
*            EXCEPTIONS
*              bukrs_not_found   = 1
*              country_not_found = 2
*              mwskz_not_defined = 3
*              mwskz_not_valid   = 4
*              ktosl_not_found   = 5
*              kalsm_not_found   = 6
*              parameter_error   = 7
*              knumh_not_found   = 8
*              kschl_not_found   = 9
*              unknown_error     = 10
*              account_not_found = 11
*              txjcd_not_valid   = 12
*              OTHERS            = 13.
*
*      ENDCASE.
*
*
*      LOOP AT lt_mwdat INTO DATA(ls_mwdat) WHERE wmwst IS NOT INITIAL.
*
*        DATA(lv_line) = sy-tabix.
*
**        IF ls_mwdat-hkont IS NOT INITIAL.
**
**          APPEND INITIAL LINE TO et_accountgl ASSIGNING &lt;ls_gl_account&gt;.
**
**          &lt;ls_gl_account&gt;-itemno_acc = lv_line + lv_last_item..
**          &lt;ls_gl_account&gt;-gl_account = ls_mwdat-hkont.
***            &lt;ls_gl_account&gt;-segment = ls_data-segment.
***            &lt;ls_gl_account&gt;-item_text = ls_data-item_text.
***            &lt;ls_gl_account&gt;-costcenter = ls_data-cost_center.
***            &lt;ls_gl_account&gt;-profit_ctr = ls_data-profit_center.
***            &lt;ls_gl_account&gt;-ref_key_1 = ls_data-reference1.
***            &lt;ls_gl_account&gt;-ref_key_2 = ls_data-reference2.
***            &lt;ls_gl_account&gt;-ref_key_3 = ls_data-reference3.
***            &lt;ls_gl_account&gt;-orderid = ls_data-order_number.
***            &lt;ls_gl_account&gt;-alloc_nmbr = ls_data-assigment.
***            &lt;ls_gl_account&gt;-value_date = ls_data-value_date.
***            &lt;ls_gl_account&gt;-tax_code = ls_data-mwskz.
**
**
**        ELSE.
*
*          APPEND INITIAL LINE TO et_accounttax ASSIGNING FIELD-SYMBOL(&lt;ls_accounttax&gt;).
*
*          &lt;ls_accounttax&gt;-itemno_acc = lv_line + lv_last_item.
*          &lt;ls_accounttax&gt;-tax_code = ls_tax_data-mwskz.
*          &lt;ls_accounttax&gt;-gl_account = ls_mwdat-hkont.
*          &lt;ls_accounttax&gt;-acct_key = ls_mwdat-ktosl.
*
*          &lt;ls_accounttax&gt;-cond_key   = ls_mwdat-kschl.
*          &lt;ls_accounttax&gt;-taxjurcode = ls_mwdat-txjcd .
*          &lt;ls_accounttax&gt;-taxjurcode_deep  = ls_mwdat-txjcd_deep.
*          &lt;ls_accounttax&gt;-taxjurcode_level = ls_mwdat-txjlv .
**          &lt;ls_accounttax&gt;-itemno_tax = ls_tax_data-line_item.
*
*
**        ENDIF.
*
*        APPEND INITIAL LINE TO et_curramount ASSIGNING &lt;ls_curramount&gt;.
*
*        &lt;ls_curramount&gt;-itemno_acc = lv_line + lv_last_item.
*        &lt;ls_curramount&gt;-currency = ls_tax_data-currency.
*        &lt;ls_curramount&gt;-curr_type = &apos;00&apos;.
*
*        CASE ls_tax_data-gross_net.
*          WHEN &apos;G&apos;.
*            IF ls_tax_data-tax_amount IS NOT INITIAL.
*
*            ELSE.
*
*
*            ENDIF.
*          WHEN &apos;N&apos;.
*
*            IF ls_tax_data-tax_amount IS NOT INITIAL.
*
*              &lt;ls_curramount&gt;-amt_doccur = ls_tax_data-tax_amount.
*              IF ls_mwdat-wmwst &lt; 0.
*                &lt;ls_curramount&gt;-amt_doccur = &lt;ls_curramount&gt;-amt_doccur  * -1.
*              ENDIF.
*
**              &lt;ls_curramount&gt;-amt_doccur = ls_tax_data-tax_amount + ls_tax_data-amount_document.
**              &lt;ls_curramount&gt;-tax_amt = ls_tax_data-tax_amount.
*              &lt;ls_curramount&gt;-amt_base = ls_mwdat-kawrt.
**              IF ls_tax_data-debit_credit = &apos;C&apos;.
**                &lt;ls_curramount&gt;-amt_doccur = &lt;ls_curramount&gt;-amt_doccur * -1.
**                &lt;ls_curramount&gt;-amt_base = &lt;ls_curramount&gt;-amt_base * -1.
**              ENDIF.
*            ELSE.
*              &lt;ls_curramount&gt;-amt_doccur = SWITCH #( ls_tax_data-debit_credit
*                                          WHEN &apos;C&apos; THEN ( ls_mwdat-wmwst + ls_tax_data-amount_document ) * -1
*                                          ELSE ls_mwdat-wmwst + ls_tax_data-amount_document ).
*              &lt;ls_curramount&gt;-tax_amt = ls_mwdat-wmwst.
*              &lt;ls_curramount&gt;-amt_base = SWITCH #( ls_data-debit_credit WHEN &apos;C&apos; THEN
*                      ls_mwdat-kawrt * -1 ELSE ls_mwdat-kawrt ).
*
*            ENDIF.
*
*        ENDCASE.
*
*
*
*      ENDLOOP.
*
*
*
*    ENDLOOP.

**********************************************************************


    check_balance(
        EXPORTING it_curramount = et_curramount
        CHANGING ct_extension = et_extension2
    ).


**********************************************************************


    DATA(lv_sum) = REDUCE decfloat34(
            INIT sum TYPE decfloat34
            FOR ls_curram IN et_curramount
            NEXT sum = sum + round( val = ls_curram-amt_doccur dec = 0 )
     ).

    DATA(lv_sum_tax) = REDUCE decfloat34(
           INIT sum TYPE decfloat34
           FOR ls_tax IN lt_tax_data
           NEXT sum = sum + round( val = ls_tax-amount * ls_tax-dc_i dec = 0 )
        ).

    DATA(lv_tax_input) = REDUCE decfloat34(
            INIT sum TYPE decfloat34
            FOR ls_curram IN et_curramount
            NEXT sum = sum + round( val = ls_curram-tax_amt dec = 0 )
     ).

    IF lv_sum &lt;&gt; 0.

      IF lv_tax_input = lv_sum_tax.

      ELSE.

        DATA(lv_tax_diff) = lv_sum + lv_sum_tax.

        IF lv_tax_diff &lt;&gt; 0.

          IF lv_tax_diff &gt; 10 OR lv_tax_diff &lt; -10.
            &quot; well problem
            WRITE / |Difference in amount and Tax is more than 10!!|.
            CLEAR et_curramount.
          ELSE.
            READ TABLE lt_tax_data REFERENCE INTO DATA(ls_tax_a3) WITH KEY tax_code = &apos;A3&apos;.
            IF sy-subrc = 0.
              ADD lv_tax_diff TO ls_tax_a3-&gt;amount.
              CLEAR lv_tax_diff.
            ENDIF.
          ENDIF.

        ENDIF.

      ENDIF.

    ENDIF.


    LOOP AT lt_tax_data INTO DATA(ls_tax_data).
      CLEAR: lt_mwdat.

      IF lv_tax_diff IS NOT INITIAL.
        ADD lv_tax_amount TO ls_tax_data-amount.
        CLEAR lv_tax_amount.
      ENDIF.

      CALL FUNCTION &apos;CALCULATE_TAX_FROM_NET_AMOUNT&apos;
        EXPORTING
          i_bukrs           = ls_tax_data-company_code
          i_mwskz           = ls_tax_data-tax_code
*         i_txjcd           = space
          i_waers           = ls_tax_data-currency
          i_wrbtr           = ls_tax_data-base_amount
*         i_zbd1p           = 0
*         i_prsdt           =
*         i_protokoll       =
*         i_taxps           =
*         i_accnt_ext       =
*         i_accdata         =
*         i_pricing_refresh_tx = space
*          IMPORTING
*         e_fwnav           =
*         e_fwnvv           =
*         e_fwste           =
*         e_fwast           =
        TABLES
          t_mwdat           = lt_mwdat
        EXCEPTIONS
          bukrs_not_found   = 1
          country_not_found = 2
          mwskz_not_defined = 3
          mwskz_not_valid   = 4
          ktosl_not_found   = 5
          kalsm_not_found   = 6
          parameter_error   = 7
          knumh_not_found   = 8
          kschl_not_found   = 9
          unknown_error     = 10
          account_not_found = 11
          txjcd_not_valid   = 12
          OTHERS            = 13.


      LOOP AT lt_mwdat INTO ls_mwdat.

        ADD 1 TO lv_last_item.

        DATA(lv_coeficient) = abs( ls_mwdat-kbetr ) / 100.


        APPEND INITIAL LINE TO et_curramount ASSIGNING &lt;ls_curramount&gt;.
        &lt;ls_curramount&gt;-itemno_acc = lv_last_item.
        &lt;ls_curramount&gt;-curr_type = &apos;00&apos;.
        &lt;ls_curramount&gt;-currency = &apos;VND&apos;.
        IF ls_mwdat-msatz &gt; 0.
          &lt;ls_curramount&gt;-amt_doccur = ls_tax_data-amount * ls_tax_data-dc_i * lv_coeficient.
          &lt;ls_curramount&gt;-amt_doccur_long = ls_tax_data-amount * ls_tax_data-dc_i * lv_coeficient.
          &lt;ls_curramount&gt;-amt_base = ls_tax_data-base_amount * ls_tax_data-dc_i.
          &lt;ls_curramount&gt;-amt_base_long = ls_tax_data-base_amount * ls_tax_data-dc_i.
        ELSE.
          &lt;ls_curramount&gt;-amt_doccur = ls_tax_data-amount * ls_tax_data-dc_i * -1 * lv_coeficient.
          &lt;ls_curramount&gt;-amt_doccur_long = ls_tax_data-amount * ls_tax_data-dc_i * -1 * lv_coeficient.
          &lt;ls_curramount&gt;-amt_base = ls_tax_data-base_amount * ls_tax_data-dc_i * -1.
          &lt;ls_curramount&gt;-amt_base_long = ls_tax_data-base_amount * ls_tax_data-dc_i * -1.
        ENDIF.

        APPEND INITIAL LINE TO et_accounttax ASSIGNING FIELD-SYMBOL(&lt;ls_accounttax&gt;).

        &lt;ls_accounttax&gt;-itemno_acc = lv_last_item.
        &lt;ls_accounttax&gt;-tax_code = ls_tax_data-tax_code.
        &lt;ls_accounttax&gt;-gl_account = ls_mwdat-hkont.
        &lt;ls_accounttax&gt;-acct_key = ls_mwdat-ktosl.

        &lt;ls_accounttax&gt;-cond_key   = ls_mwdat-kschl.
        &lt;ls_accounttax&gt;-taxjurcode = ls_mwdat-txjcd .
        &lt;ls_accounttax&gt;-taxjurcode_deep  = ls_mwdat-txjcd_deep.
        &lt;ls_accounttax&gt;-taxjurcode_level = ls_mwdat-txjlv .
        &lt;ls_accounttax&gt;-tax_rate = ls_mwdat-msatz.


      ENDLOOP.



    ENDLOOP.

*

**
*    DATA(lt_curramount) = et_curramount.
*    DATA(lt_accountgl) = et_accountgl.
*    DATA(lt_accounttax) = et_accounttax.
*
*    CALL FUNCTION &apos;FI_TAX_SERVICES_CALCULATE&apos;
*      EXPORTING
*        documentheader = es_doc_header
*        customercpd    = es_customercpd
*        accountpayable = et_accountpayable
**       accountreceivable       =
**       difference_is_tax       = abap_true
**       distribution_method     = &apos;X&apos;
**       taxamount      = lv_tax_amount
**       itemno_acc_zero_balance =
**       criteria       =
**       extension1     =
**       extension2     =
**       currencyamount_input    =
**       accounttax_input        =
**       accountwt      =
**       realestate     =
*      IMPORTING
*        return_code    = lv_return
*      CHANGING
*        currencyamount = lt_curramount
*        accountgl      = lt_accountgl
*        accounttax     = lt_accounttax
*        return         = lt_return.
*
*
*    LOOP AT lt_accounttax INTO DATA(ls_accounttax).
*
*      READ TABLE lt_tax_data INTO ls_tax_data WITH KEY tax_code = ls_accounttax-tax_code.
*      IF sy-subrc &lt;&gt; 0.
*        CONTINUE.
*      ENDIF.
*
*      APPEND INITIAL LINE TO et_curramount ASSIGNING &lt;ls_curramount&gt;.
*      &lt;ls_curramount&gt;-itemno_acc = ls_accounttax-itemno_acc.
*      &lt;ls_curramount&gt;-curr_type = &apos;00&apos;.
*      &lt;ls_curramount&gt;-currency = &apos;VND&apos;.
*      IF ls_accounttax-tax_rate &gt; 0.
*        &lt;ls_curramount&gt;-amt_doccur = ls_tax_data-amount * ls_tax_data-dc_i.
*        &lt;ls_curramount&gt;-amt_doccur_long = ls_tax_data-amount * ls_tax_data-dc_i.
*        &lt;ls_curramount&gt;-amt_base = ls_tax_data-base_amount * ls_tax_data-dc_i.
*        &lt;ls_curramount&gt;-amt_base_long = ls_tax_data-base_amount * ls_tax_data-dc_i.
*      ELSE.
*        &lt;ls_curramount&gt;-amt_doccur = ls_tax_data-amount * ls_tax_data-dc_i * -1.
*        &lt;ls_curramount&gt;-amt_doccur_long = ls_tax_data-amount * ls_tax_data-dc_i * -1.
*        &lt;ls_curramount&gt;-amt_base = ls_tax_data-base_amount * ls_tax_data-dc_i * -1.
*        &lt;ls_curramount&gt;-amt_base_long = ls_tax_data-base_amount * ls_tax_data-dc_i * -1.
*      ENDIF.
*
*    ENDLOOP.
*
*    et_accounttax = lt_accounttax.





  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERPROCESSOR" CMPNAME="PROCESS" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD process.

    DATA: lt_batch_stat_update TYPE          zglif_batch_stat_tt.

    log_add_text( iv_text = |Getting batches to process| iv_detlevel = &apos;3&apos; ).

    &quot; Get the batch numbers to be processed
    SELECT *
    FROM zglif_batch_stat
    INTO TABLE @DATA(lt_batch_stat)
    WHERE interface_name    = @gs_proccust-interface_name
       AND ( batch_status      = @zglif_dispatcher=&gt;gc_10_converted
       OR batch_status      = @zglif_dispatcher=&gt;gc_20_test_processing_ok
       OR batch_status      = @zglif_dispatcher=&gt;gc_50_corrected )
       AND batch_changed_by IN @mtr_uname
      AND batch_id IN @mtr_batch_id.


    IF lt_batch_stat IS NOT INITIAL.

      LOOP AT lt_batch_stat REFERENCE INTO DATA(ls_batch).
        ls_batch-&gt;batch_status = SWITCH #( ls_batch-&gt;batch_status WHEN zglif_dispatcher=&gt;gc_10_converted THEN zglif_dispatcher=&gt;gc_15_test_processing_run
                                                                  WHEN zglif_dispatcher=&gt;gc_20_test_processing_ok THEN zglif_dispatcher=&gt;gc_25_processing_run
                                                                  WHEN zglif_dispatcher=&gt;gc_50_corrected THEN zglif_dispatcher=&gt;gc_15_test_processing_run
                                                                  ELSE zglif_dispatcher=&gt;gc_15_test_processing_run ).
        log_add_text( iv_text = |Updating batch { ls_batch-&gt;batch_id } to status: { ls_batch-&gt;batch_status }| iv_detlevel = &apos;4&apos; ).
      ENDLOOP.
      MODIFY zglif_batch_stat FROM TABLE lt_batch_stat.
      COMMIT WORK. &quot; To prevent other jobs from processing same data.

      LOOP AT lt_batch_stat INTO DATA(ls_batch_stat).


        log_add_text( iv_text = |Run Processing for batch { ls_batch_stat-batch_id }| iv_detlevel = &apos;5&apos; ).

        CASE ls_batch_stat-batch_status.
          WHEN zglif_dispatcher=&gt;gc_10_converted OR zglif_dispatcher=&gt;gc_50_corrected OR zglif_dispatcher=&gt;gc_15_test_processing_run.
            test_run( is_batch = ls_batch_stat ).
          WHEN zglif_dispatcher=&gt;gc_20_test_processing_ok OR zglif_dispatcher=&gt;gc_25_processing_run.
            real_run( is_batch = ls_batch_stat ).
          WHEN OTHERS.
        ENDCASE.

      ENDLOOP.

      log_add_text( iv_text = |Updating status for all batches| iv_detlevel = &apos;4&apos; ).
      &quot; Update batch statuses - take just this one batch
      lt_batch_stat_update = lt_batch_stat.
      zglif_utility_storage=&gt;update_batch_status( CHANGING pct_batch = lt_batch_stat_update ).
      MODIFY zglif_batch_stat FROM TABLE lt_batch_stat_update.
      COMMIT WORK AND WAIT.

      &quot; Log the new statuses of Batches
      DATA: lt_status_texts TYPE TABLE OF dd07v.
      &quot; get text of the status
      CALL FUNCTION &apos;DD_DOMVALUES_GET&apos;
        EXPORTING
          domname        = &apos;ZGLIF_BATCH_STATUS_DOM&apos;
          text           = abap_true
          langu          = sy-langu
*         bypass_buffer  = SPACE
*        IMPORTING
*         rc             =
        TABLES
          dd07v_tab      = lt_status_texts
        EXCEPTIONS
          wrong_textflag = 1
          OTHERS         = 2.
      IF sy-subrc &lt;&gt; 0.
        log_add_text( iv_text = |Error when getting the status texts from domain ZGLIF_BATCH_STATUS_DOM.| iv_type = &apos;E&apos; iv_detlevel = &apos;4&apos; ).
*        WRITE: / |Error when getting the status texts from domain ZGLIF_BATCH_STATUS_DOM.|. &quot; #TODO: application log
*       MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*                  WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.

      IF mv_path_interface IS NOT INITIAL.
        SELECT SINGLE *
        FROM zglif_convcust
        WHERE interface_name = @gs_proccust-interface_name
        INTO @DATA(ls_convcust).
      ENDIF.

      log_add_text( iv_text = |Batch statuses of { lines( lt_batch_stat_update )  } batchID:| iv_detlevel = &apos;5&apos; ).
      LOOP AT lt_batch_stat_update INTO DATA(ls_batch_stat_update).
        TRY .
            log_add_text( iv_text = |Processing of Batch { ls_batch_stat_update-batch_id } ended with status: { lt_status_texts[ domvalue_l = ls_batch_stat_update-batch_status ]-ddtext } | iv_detlevel = &apos;6&apos; ).
*            WRITE: / |Processing of Batch { ls_batch_stat_update-batch_id } | &amp;
*                     |ended with status: { lt_status_texts[ domvalue_l = ls_batch_stat_update-batch_status ]-ddtext } |. &quot; #TODO: application log
          CATCH cx_sy_itab_line_not_found.
            log_add_text( iv_text = |Processing of Batch { ls_batch_stat_update-batch_id } ended with status: { ls_batch_stat_update-batch_status }| iv_detlevel = &apos;6&apos; ).
*            WRITE: / |Processing of Batch { ls_batch_stat_update-batch_id } | &amp;
*                     |ended with status: { ls_batch_stat_update-batch_status } |. &quot; #TODO: application log
        ENDTRY.


        IF ls_batch_stat_update-batch_status &lt;&gt; zglif_dispatcher=&gt;gc_20_test_processing_ok AND ls_batch_stat_update-batch_status &lt;&gt; zglif_dispatcher=&gt;gc_30_processing_ok AND mv_path_interface IS NOT INITIAL.

          SELECT SINGLE filename
          FROM zglif_mess_stat
          WHERE interface_name = @gs_proccust-interface_name
          AND batch_id = @ls_batch_stat_update-batch_id
          INTO @DATA(lv_filename).
          IF sy-subrc = 0.
            IF lv_filename CS &apos;/&apos;.
              SPLIT lv_filename AT &apos;/&apos; INTO DATA(lv_path_interface) lv_filename.
            ENDIF.
            DATA(lv_path_errors)        = get_physical_path( iv_logical = ls_convcust-sap_folder_errors iv_filename = lv_filename ).
            DATA(lv_path_processed)     = get_physical_path( iv_logical = ls_convcust-sap_folder_processed iv_filename = lv_filename ).

            TRY.
                zglif_utility_storage=&gt;copy_file_on_server(
                  EXPORTING
                    iv_source_path = lv_path_processed
                    iv_target_path = lv_path_errors
                ).
                log_add_text( iv_text = |File { lv_filename } was copied into folder { ls_convcust-sap_folder_errors } | iv_detlevel = &apos;7&apos; ).
              CATCH zcx_generic_exception INTO DATA(lo_exception).
                log_add_text( iv_text = lo_exception-&gt;get_message( ) iv_detlevel = &apos;7&apos; ).
                log_add_text( iv_text = |Error when copying { lv_filename } into folder { ls_convcust-sap_folder_processed } | iv_detlevel = &apos;7&apos; ).
            ENDTRY.
          ENDIF.
        ENDIF.

      ENDLOOP.
    ELSE.
      log_add_text( iv_text = |No Batches for processing found in zglif_batch_stat| iv_type = &apos;E&apos; iv_detlevel = &apos;4&apos; ).
*      WRITE: / |No IDocs for processing found in zglif_batch_stat |. &quot; #TODO: application log
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="REAL_RUN" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="REAL_RUN" SCONAME="IS_BATCH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_BATCH_STAT"/>
   <source>METHOD real_run.

    DATA: ls_doc_header        TYPE bapiache09,
          lt_curramount        TYPE bapiaccr09_tab,
          lt_accountgl         TYPE bapiacgl09_tab,
          lt_extension2        TYPE bapiparex2_tab,
          lt_return            TYPE bapiret2_tab,
          ls_customercpd       TYPE bapiacpa09,
          lt_accountpayable    TYPE bapiacap09_tab,
          lt_accounttax        TYPE bapiactx09_tab,
          lt_accountreceivable TYPE bapiacar09_tab.

    SELECT * FROM zglif_mess_stat
    INTO TABLE @DATA(lt_mess)
    WHERE interface_name    = @gs_proccust-interface_name
    AND batch_id = @is_batch-batch_id
    AND message_status &lt;&gt; @zglif_dispatcher=&gt;gc_98_canceled_zero_values.

    LOOP AT lt_mess REFERENCE INTO DATA(ls_mess).

      CLEAR: ls_doc_header, ls_customercpd, lt_curramount, lt_accountgl, lt_accountreceivable, lt_accountpayable, lt_accounttax, lt_extension2, lt_return.

      CASE gs_proccust-interface_name.
        WHEN zcl_bookng_tools=&gt;mc_csv_interface.
          get_prepared_data(
            EXPORTING
              iv_batch      = is_batch-batch_id
              iv_mess_id    = ls_mess-&gt;message_id
            IMPORTING
              es_doc_header = ls_doc_header
              et_curramount = lt_curramount
              et_accountgl  = lt_accountgl
              et_extension2 = lt_extension2
              et_return     = lt_return
          ).

        WHEN zcl_bookng_tools=&gt;mc_csv_tax_interface OR zcl_bookng_tools=&gt;mc_csv_auto OR zcl_bookng_tools=&gt;mc_interface_name.

          get_prepared_tax_data(
            EXPORTING
              iv_batch      = ls_mess-&gt;batch_id
              iv_mess_id    = ls_mess-&gt;message_id
            IMPORTING
              es_doc_header = ls_doc_header
              es_customercpd = ls_customercpd
              et_curramount = lt_curramount
              et_accountgl  = lt_accountgl
              et_accountreceivable = lt_accountreceivable
              et_accountpayable = lt_accountpayable
              et_accounttax = lt_accounttax
              et_extension2 = lt_extension2
              et_return     = lt_return
          ).

      ENDCASE.

      &quot; park or post
      ls_doc_header-doc_status = mv_document_status.

      CALL FUNCTION &apos;BAPI_ACC_DOCUMENT_POST&apos;
        EXPORTING
          documentheader    = ls_doc_header
          customercpd       = ls_customercpd
*         contractheader    =
*        IMPORTING
*         obj_type          =
*         obj_key           =
*         obj_sys           =
        TABLES
          accountgl         = lt_accountgl
          accountreceivable = lt_accountreceivable
          accountpayable    = lt_accountpayable
          accounttax        = lt_accounttax
          currencyamount    = lt_curramount
*         criteria          =
*         valuefield        =
*         extension1        =
          return            = lt_return
*         paymentcard       =
*         contractitem      =
          extension2        = lt_extension2
*         realestate        =
*         accountwt         =
        .

      READ TABLE lt_return INTO DATA(ls_return) WITH KEY type = &apos;S&apos; id = &apos;RW&apos; number = SWITCH #( mv_document_status WHEN &apos;2&apos; THEN 638 WHEN &apos;3&apos; THEN 638 ELSE 605 ).
      IF sy-subrc = 0.

        ls_mess-&gt;message_status = zglif_dispatcher=&gt;gc_30_processing_ok.

        ls_mess-&gt;msgid = ls_return-id.
        ls_mess-&gt;msgno = ls_return-number.
        ls_mess-&gt;msgty = ls_return-type.
        ls_mess-&gt;msgv1 = ls_return-message_v1.
        ls_mess-&gt;msgv2 = ls_return-message_v2.
        ls_mess-&gt;msgv3 = ls_return-message_v3.
        ls_mess-&gt;msgv4 = ls_return-message_v4.


      ELSE.
        LOOP AT lt_return INTO ls_return WHERE type = &apos;E&apos; AND NOT ( number = 609 AND id = &apos;RW&apos; ).
          ls_mess-&gt;message_status = zglif_dispatcher=&gt;gc_31_processing_fail.

          ls_mess-&gt;msgid = ls_return-id.
          ls_mess-&gt;msgno = ls_return-number.
          ls_mess-&gt;msgty = ls_return-type.
          ls_mess-&gt;msgv1 = ls_return-message_v1.
          ls_mess-&gt;msgv2 = ls_return-message_v2.
          ls_mess-&gt;msgv3 = ls_return-message_v3.
          ls_mess-&gt;msgv4 = ls_return-message_v4.
          EXIT.
        ENDLOOP.
        IF sy-subrc &lt;&gt; 0.
          READ TABLE lt_return INTO ls_return INDEX 1.
          ls_mess-&gt;message_status = zglif_dispatcher=&gt;gc_31_processing_fail.

          ls_mess-&gt;msgid = ls_return-id.
          ls_mess-&gt;msgno = ls_return-number.
          ls_mess-&gt;msgty = ls_return-type.
          ls_mess-&gt;msgv1 = ls_return-message_v1.
          ls_mess-&gt;msgv2 = ls_return-message_v2.
          ls_mess-&gt;msgv3 = ls_return-message_v3.
          ls_mess-&gt;msgv4 = ls_return-message_v4.

        ENDIF.
      ENDIF.

    ENDLOOP.

    MODIFY zglif_mess_stat FROM TABLE lt_mess.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="TEST_RUN" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_PROCESSOR_BOOK_BAPI" CMPNAME="TEST_RUN" SCONAME="IS_BATCH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_BATCH_STAT"/>
   <source>METHOD test_run.

    DATA: ls_doc_header        TYPE bapiache09,
          lt_curramount        TYPE bapiaccr09_tab,
          lt_accountgl         TYPE bapiacgl09_tab,
          lt_extension2        TYPE bapiparex2_tab,
          lt_return            TYPE bapiret2_tab,
          ls_customercpd       TYPE bapiacpa09,
          lt_accountpayable    TYPE bapiacap09_tab,
          lt_accounttax        TYPE bapiactx09_tab,
          lt_accountreceivable TYPE bapiacar09_tab.

    SELECT * FROM zglif_mess_stat
    INTO TABLE @DATA(lt_mess_stat)
    WHERE interface_name    = @gs_proccust-interface_name
    AND batch_id = @is_batch-batch_id
    AND message_status &lt;&gt; @zglif_dispatcher=&gt;gc_98_canceled_zero_values.

    LOOP AT lt_mess_stat REFERENCE INTO DATA(ls_mess).

      CLEAR: ls_doc_header, ls_customercpd, lt_curramount, lt_accountgl, lt_accountreceivable, lt_accountpayable, lt_accounttax, lt_extension2, lt_return.

      CASE gs_proccust-interface_name.
        WHEN zcl_bookng_tools=&gt;mc_csv_interface.
          get_prepared_data(
            EXPORTING
              iv_batch      = is_batch-batch_id
              iv_mess_id    = ls_mess-&gt;message_id
            IMPORTING
              es_doc_header = ls_doc_header
              et_curramount = lt_curramount
              et_accountgl  = lt_accountgl
              et_extension2 = lt_extension2
              et_return     = lt_return
          ).

        WHEN zcl_bookng_tools=&gt;mc_csv_tax_interface OR zcl_bookng_tools=&gt;mc_csv_auto OR zcl_bookng_tools=&gt;mc_interface_name.

          get_prepared_tax_data(
            EXPORTING
              iv_batch      = ls_mess-&gt;batch_id
              iv_mess_id    = ls_mess-&gt;message_id
            IMPORTING
              es_doc_header = ls_doc_header
              es_customercpd = ls_customercpd
              et_curramount = lt_curramount
              et_accountgl  = lt_accountgl
              et_accountreceivable = lt_accountreceivable
              et_accountpayable = lt_accountpayable
              et_accounttax = lt_accounttax
              et_extension2 = lt_extension2
              et_return     = lt_return
          ).

      ENDCASE.


      CALL FUNCTION &apos;BAPI_ACC_DOCUMENT_CHECK&apos;
        EXPORTING
          documentheader    = ls_doc_header
          customercpd       = ls_customercpd
*         contractheader    =
        TABLES
          accountgl         = lt_accountgl
          accountreceivable = lt_accountreceivable
          accountpayable    = lt_accountpayable
          accounttax        = lt_accounttax
          currencyamount    = lt_curramount
*         criteria          =
*         valuefield        =
*         extension1        =
          return            = lt_return
*         paymentcard       =
*         contractitem      =
          extension2        = lt_extension2
*         realestate        =
*         accountwt         =
        .

      READ TABLE lt_return INTO DATA(ls_return) WITH KEY type = &apos;S&apos; id = &apos;RW&apos; number = 614.
      IF sy-subrc = 0.

        ls_mess-&gt;message_status = zglif_dispatcher=&gt;gc_20_test_processing_ok.

        ls_mess-&gt;msgid = ls_return-id.
        ls_mess-&gt;msgno = ls_return-number.
        ls_mess-&gt;msgty = ls_return-type.
        ls_mess-&gt;msgv1 = ls_return-message_v1.
        ls_mess-&gt;msgv2 = ls_return-message_v2.
        ls_mess-&gt;msgv3 = ls_return-message_v3.
        ls_mess-&gt;msgv4 = ls_return-message_v4.


      ELSE.
        LOOP AT lt_return INTO ls_return WHERE type = &apos;E&apos; AND NOT ( number = 609 AND id = &apos;RW&apos; ).

          ls_mess-&gt;message_status = zglif_dispatcher=&gt;gc_21_test_processing_fail.

          ls_mess-&gt;msgid = ls_return-id.
          ls_mess-&gt;msgno = ls_return-number.
          ls_mess-&gt;msgty = ls_return-type.
          ls_mess-&gt;msgv1 = ls_return-message_v1.
          ls_mess-&gt;msgv2 = ls_return-message_v2.
          ls_mess-&gt;msgv3 = ls_return-message_v3.
          ls_mess-&gt;msgv4 = ls_return-message_v4.
          EXIT.
        ENDLOOP.
        IF sy-subrc &lt;&gt; 0.
          READ TABLE lt_return INTO ls_return INDEX 1.
          ls_mess-&gt;message_status = zglif_dispatcher=&gt;gc_21_test_processing_fail.

          ls_mess-&gt;msgid = ls_return-id.
          ls_mess-&gt;msgno = ls_return-number.
          ls_mess-&gt;msgty = ls_return-type.
          ls_mess-&gt;msgv1 = ls_return-message_v1.
          ls_mess-&gt;msgv2 = ls_return-message_v2.
          ls_mess-&gt;msgv3 = ls_return-message_v3.
          ls_mess-&gt;msgv4 = ls_return-message_v4.

        ENDIF.
      ENDIF.

    ENDLOOP.

    MODIFY zglif_mess_stat FROM TABLE lt_mess_stat.


  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_FEEDER_SAMBA" VERSION="1" LANGU="E" DESCRIPT="Feeder for Samba mounted folders" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZGLIF_SUPERFEEDER">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <attribute CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="GS_FEEDCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Feeder Customization table" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_FEEDCUST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="GT_MESS_STAT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="6 " SRCROW2="6 " SRCCOLUMN2="49 " TYPESRC_LENG="46 " TYPESRC="gt_mess_stat TYPE TABLE OF   zglif_mess_stat
"/>
  <attribute CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="MC_WORKING" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="2" ATTVALUE="&apos;/Working&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="MV_PATH_INTERFACE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZBOOKNG_CSV_AUTO_FOLDER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZGLIF_FEEDER_SAMBA" REFCLSNAME="ZGLIF_SUPERFEEDER" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZGLIF_FEEDER_SAMBA" REFCLSNAME="ZGLIF_SUPERFEEDER" VERSION="1" MTDNAME="FEED" EXPOSURE="2"/>
  </inheritance>
  <method CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="CONSTRUCTOR" SCONAME="PIS_FEEDCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Feeder&apos;s customization tabler" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_FEEDCUST"/>
   <source>METHOD constructor.
    &quot; Call the constructor of the Superclass: zglif_superfeeder
    super-&gt;constructor( ).
    &quot; take over the Feeder customization structure
    gs_feedcust = pis_feedcust.

    DATA(lv_calling_report) = sy-cprog.
    DATA(lv_fieldname) = |({ lv_calling_report })P_INTERF|.
    ASSIGN (lv_fieldname) TO FIELD-SYMBOL(&lt;lv_interface&gt;).
    IF sy-subrc = 0.
      mv_path_interface = &lt;lv_interface&gt;.
    ENDIF.

    log_add_text( iv_text = |Initializing Feeder| iv_detlevel = &apos;3&apos; ).

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERFEEDER" CMPNAME="FEED" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD feed.
    &quot;Perform parent implementation
    CALL METHOD super-&gt;feed( ).


      TRY.
        log_add_text( iv_text = |Getting working folder| iv_detlevel = &apos;3&apos; ).
        DATA(lv_working_path) = get_path( mc_working ).
        log_add_text( iv_text = |Folder { lv_working_path } will be processed| iv_detlevel = &apos;3&apos; ).

        DATA(lt_files) = get_files( lv_working_path ).

        log_add_text( iv_text = |Number of files in folder { lines( lt_files ) }| iv_detlevel = &apos;3&apos; ).

        LOOP AT lt_files REFERENCE INTO DATA(ls_file).

        log_add_text( iv_text = |Processing file { ls_file-&gt;name }| iv_detlevel = &apos;4&apos; ).

**********************************************************************
          &quot; Check for existing batchID
          TRY.
              SELECT SINGLE COUNT( * )
              FROM zglif_batch_stat
              WHERE interface_name = gs_feedcust-interface_name
              AND batch_id = ls_file-&gt;name+4(10)
              AND batch_status &lt;&gt; zglif_dispatcher=&gt;gc_00_downloaded
              AND batch_status &lt;&gt; zglif_dispatcher=&gt;gc_50_corrected.

              IF sy-subrc = 0.
                log_add_text( iv_text = |This file { ls_file-&gt;name } was already processed. Use different batch| iv_detlevel = &apos;4&apos; ).
                CONTINUE.
              ENDIF.

            CATCH cx_root.
              log_add_text( iv_text = |Invalid file. Ending process...| iv_detlevel = &apos;4&apos; ).
              EXIT.
          ENDTRY.

**********************************************************************
          zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                                      pev_time = DATA(lv_time) ).

          DATA(ls_mess_stat) = VALUE zglif_mess_stat(
                                  interface_name = gs_feedcust-interface_name
                                  filename = |{ mv_path_interface }/{ ls_file-&gt;name }|
                                  batch_id = ls_file-&gt;name+4(10)
*                    message_id = lv_filename+14(10)
                                  message_status = zglif_dispatcher=&gt;gc_00_downloaded
                                  message_changed_on = lv_date
                                  message_changed_at = lv_time
                                  message_changed_by = sy-uname
                                  ).

          MODIFY zglif_mess_stat FROM ls_mess_stat.

          DATA(ls_batch_stat) = VALUE zglif_batch_stat(
                               interface_name = gs_feedcust-interface_name
                               batch_id = ls_file-&gt;name+4(10)
                               batch_status = zglif_dispatcher=&gt;gc_00_downloaded
                               batch_changed_on = lv_date
                               batch_changed_at = lv_time
                               batch_changed_by = sy-uname
                               ).

          MODIFY zglif_batch_stat FROM ls_batch_stat.

          log_add_text( iv_text = |Tables ZGLIF_MESS_STAT and ZGLIF_BATCH_STAT updated| iv_detlevel = &apos;4&apos; ).

          CLEAR: ls_batch_stat, ls_mess_stat.

        ENDLOOP.


        COMMIT WORK AND WAIT.


      CATCH zcx_generic_exception INTO DATA(lo_exception).
        log_add_text( iv_text = lo_exception-&gt;get_message( ) iv_detlevel = &apos;3&apos; ).
    ENDTRY.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="GET_FILES" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="GET_FILES" SCONAME="IV_DIRNAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EPS2FILNAM"/>
   <parameter CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="GET_FILES" SCONAME="RT_ALL_FILES" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="EPS2FILIS"/>
   <exception CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="GET_FILES" SCONAME="ZCX_GENERIC_EXCEPTION" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD get_files.

    CALL FUNCTION &apos;EPS2_GET_DIRECTORY_LISTING&apos;
      EXPORTING
        iv_dir_name            = iv_dirname
      TABLES
        dir_list               = rt_all_files
      EXCEPTIONS
        invalid_eps_subdir     = 1
        sapgparam_failed       = 2
        build_directory_failed = 3
        no_authorization       = 4
        read_directory_failed  = 5
        too_many_read_errors   = 6
        empty_directory_list   = 7
        OTHERS                 = 8.
    IF sy-subrc &lt;&gt; 0.
      zcx_generic_exception=&gt;raise( |No files found in folder| ).
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="GET_PATH" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="GET_PATH" SCONAME="IV_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="GET_PATH" SCONAME="RV_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="EPS2FILNAM"/>
   <exception CLSNAME="ZGLIF_FEEDER_SAMBA" CMPNAME="GET_PATH" SCONAME="ZCX_GENERIC_EXCEPTION" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD get_path.
    CALL FUNCTION &apos;FILE_GET_NAME_USING_PATH&apos;
      EXPORTING
        logical_path               = gs_feedcust-sap_folder_source
        file_name                  = |{ mv_path_interface }{ iv_path }|
        eleminate_blanks           = abap_false
      IMPORTING
        file_name_with_path        = rv_path
      EXCEPTIONS
        path_not_found             = 1
        missing_parameter          = 2
        operating_system_not_found = 3
        file_system_not_found      = 4
        OTHERS                     = 5.
    IF sy-subrc &lt;&gt; 0.
      zcx_generic_exception=&gt;raise_symsg( ).
    ENDIF.
  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_CONVERTOR_XLS" VERSION="1" LANGU="E" DESCRIPT="Convertor for xls file to SAP database" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZGLIF_SUPERCONVERTOR">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <attribute CLSNAME="ZGLIF_CONVERTOR_XLS" CMPNAME="GS_CONVCUST" VERSION="1" LANGU="1" DESCRIPT="GLIF: Convertor Customization table" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_CONVCUST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_XLS" CMPNAME="GS_FILE" VERSION="1" LANGU="1" DESCRIPT="Filename of currently processed file" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EPS2FILI" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_XLS" CMPNAME="GT_MESS_STAT" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="6 " SRCROW2="6 " SRCCOLUMN2="49 " TYPESRC_LENG="46 " TYPESRC="gt_mess_stat TYPE TABLE OF   zglif_mess_stat
"/>
  <inheritance CLSNAME="ZGLIF_CONVERTOR_XLS" REFCLSNAME="ZGLIF_SUPERCONVERTOR" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZGLIF_CONVERTOR_XLS" REFCLSNAME="ZGLIF_SUPERCONVERTOR" VERSION="1" MTDNAME="CONVERT" EXPOSURE="2"/>
  </inheritance>
  <method CLSNAME="ZGLIF_CONVERTOR_XLS" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_XLS" CMPNAME="CONSTRUCTOR" SCONAME="PIS_CONVCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Convertor&apos;s customization table" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_CONVCUST"/>
   <source>METHOD constructor.
    &quot; Call the constructor of the Superclass: zglif_superconvertor
    super-&gt;constructor( ).
    &quot; take over the Convertor customization structure
    gs_convcust = pis_convcust.

    &quot; WRITE: / |FTP Convertor has been created. Rejoice!|. &quot; #TODO: application log
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="CONVERT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD convert.
**********************************************************************
* Insert the conversion to this method
**********************************************************************
* Please take inspiration in class zglif_convertor_idoc~convert
* and develop this conversion in the same manner
*
* Thank you.
**********************************************************************
*{(ADD)/Equine/EG-ABAP/EQ_FAOK/07092017/Cause:
    DATA: lt_all_files     TYPE TABLE OF eps2fili,
          lt_file_list     TYPE TABLE OF eps2fili,
          lv_batch_id      TYPE zglif_batch_id,
          lv_prev_batch_id TYPE zglif_batch_id,
          lt_batch_stat    TYPE TABLE OF zglif_batch_stat,
          ls_batch_stat    TYPE zglif_batch_stat.

    FIELD-SYMBOLS:
          &lt;ls_mess_stat&gt; TYPE zglif_mess_stat.

    &quot;Perform parent implementation
    CALL METHOD super-&gt;convert.

    BREAK eq_faok.

    &quot; Get file list for conversion
    CALL FUNCTION &apos;EPS2_GET_DIRECTORY_LISTING&apos;
      EXPORTING
        iv_dir_name            = gs_convcust-sap_folder_source
      TABLES
        dir_list               = lt_all_files
      EXCEPTIONS
        invalid_eps_subdir     = 1
        sapgparam_failed       = 2
        build_directory_failed = 3
        no_authorization       = 4
        read_directory_failed  = 5
        too_many_read_errors   = 6
        empty_directory_list   = 7
        OTHERS                 = 8.
    IF sy-subrc = 0.
      &quot; Get only the entries that are ready for Conversion
      SELECT * &quot;filename, batch_id, message_id, idoc_number, message_status
      FROM zglif_mess_stat
      INTO TABLE @DATA(lt_files_for_processing)
      FOR ALL ENTRIES IN @lt_all_files
      WHERE filename          = @lt_all_files-name
        AND message_status    = @zglif_dispatcher=&gt;gc_00_downloaded.

      TRY.
          lt_file_list  = VALUE #( FOR ls_file_for_processing IN lt_files_for_processing (
              name      = ls_file_for_processing-filename
              size      = lt_all_files[ name = ls_file_for_processing-filename ]-size
              rc        = lt_all_files[ name = ls_file_for_processing-filename ]-rc ) ).
        CATCH cx_sy_itab_line_not_found.
          &quot; #TODO: own error class
      ENDTRY.

      &quot; Do we have any entries to convert?
      DESCRIBE TABLE lt_file_list LINES DATA(lv_lines).
      IF lv_lines = 0.
        WRITE: / |No files for conversion present in folder { gs_convcust-sap_folder_source }|. &quot; #TODO: application log
      ELSE.
        &quot; Start conversion and Save the Message into FTP Feeders Message status table
        REFRESH gt_mess_stat.
        zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                                pev_time = DATA(lv_time) ).
        gt_mess_stat = VALUE #( FOR ls_file IN lt_file_list (
            interface_name      = gs_convcust-interface_name
            filename            = ls_file-name
            batch_id            = ls_file-name+3(5)
            message_id          = ls_file-name+9(7)
            message_changed_on  = lv_date
            message_changed_at  = lv_time
            message_changed_by  = sy-uname ) ).

        &quot; Delete the old status entries (unable to update as key is modified)
        DELETE zglif_mess_stat FROM TABLE gt_mess_stat.
        COMMIT WORK AND WAIT.

        &quot; Get the batch number for comparison later
        lv_batch_id = lv_prev_batch_id = lt_file_list[ 1 ]-name+3(5). &quot; No need for try-endtry, we are sure that the lines exist

        CLEAR: lv_date,
               lv_time.
        &quot; Convert the respective files
        LOOP AT lt_file_list INTO gs_file.
          zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = lv_date
                                                  pev_time = lv_time ).
          convert_single_file( ).

          &quot; Check whether a new batch has started. If so, mark down the old batch number
          lv_batch_id = gs_file+3(5).
          IF lv_batch_id &lt;&gt; lv_prev_batch_id.
            ls_batch_stat = VALUE #(
                interface_name      = gs_convcust-interface_name
                batch_id            = lv_prev_batch_id
                batch_changed_on    = lv_date
                batch_changed_at    = lv_time
                batch_changed_by    = sy-uname ).
            APPEND ls_batch_stat TO lt_batch_stat.

            lv_prev_batch_id = lv_batch_id.
          ENDIF.
        ENDLOOP.

        ls_batch_stat = VALUE #(
            interface_name      = gs_convcust-interface_name
            batch_id            = lv_prev_batch_id
            batch_changed_on    = lv_date
            batch_changed_at    = lv_time
            batch_changed_by    = sy-uname ).
        APPEND ls_batch_stat TO lt_batch_stat.

        &quot; Save the modified DB entries
        DELETE zglif_mess_stat FROM TABLE gt_mess_stat.
        INSERT zglif_mess_stat FROM TABLE gt_mess_stat.
        COMMIT WORK AND WAIT.

        &quot; Update batch statuses
        zglif_utility_storage=&gt;update_batch_status( CHANGING pct_batch = lt_batch_stat ).
        MODIFY zglif_batch_stat FROM TABLE lt_batch_stat.
        COMMIT WORK AND WAIT.
      ENDIF.
    ELSEIF sy-subrc = 7.
      WRITE: / |No files ready for conversion in folder { gs_convcust-sap_folder_source } |. &quot; #TODO: application log
    ELSE.
      &quot; #TODO: application log
    ENDIF.
*}(END OF ADD)/Equine/EG-ABAP/EQ_FAOK/07092017
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_XLS" CMPNAME="CONVERT_ORGSTRUC" VERSION="1" LANGU="E" DESCRIPT="Convert File Organization Structure" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_XLS" CMPNAME="CONVERT_ORGSTRUC" SCONAME="PE_SUBRC" VERSION="1" LANGU="E" DESCRIPT="Subroutines for return code" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="SUBRC"/>
   <source>METHOD convert_orgstruc.
*    DATA: ls_os   TYPE yglifid_orgstruc, lt_os TYPE TABLE OF yglifid_orgstruc,
*          lv_msg  TYPE string, lv_path TYPE string, lt_data TYPE TABLE OF text4096, ls_data TYPE text4096,
*          lv_ctr  TYPE sy-tabix.
*
*    DATA: lt_data_conv TYPE TABLE OF yglifid_os_s, ls_data_conv TYPE yglifid_os_s, lv_xstring TYPE xstring,
*          lv_prefix(2) TYPE c, lv_batch_id TYPE yglifid_orgstruc-batch_id, lv_msgid TYPE zglif_mess_stat-message_id.
*
*    DATA: lv_file_separator TYPE c, lt_xls TYPE TABLE OF alsmex_tabline, ls_xls TYPE alsmex_tabline,
*          lv_codepage       TYPE cpcodepage.
*
*    DATA: lv_len          TYPE sy-tabix, lv_len_i TYPE i,
*          ls_tab          TYPE cps_x255, lt_tab TYPE cpt_x255, ls_xtab TYPE cps_x255, lt_xtab TYPE cpt_x255,
*          lv_file_size    TYPE drao-orln, lv_file_content TYPE xstring,
*          lv_lines        TYPE sy-tabix, lv_fname TYPE filename-fileintern.
*
*    DATA: lo_xml_part     TYPE REF TO cl_openxml_part,
*          lo_xml_part_uri TYPE REF TO cl_openxml_parturi,
*          lx_root         TYPE REF TO cx_root,
*          l_uri           TYPE string.
*    DATA lo_package TYPE REF TO cl_openxml_package.
*    DATA lo_parts TYPE REF TO cl_openxml_partcollection.
*
*    DATA: ch_sheet_data  TYPE xstring, ch_shared_data TYPE xstring, lv_buffer TYPE xstring.
*    DATA: lt_str    TYPE TABLE OF string, ls_string TYPE string.
*
*    CONSTANTS:
*      c_codepage       TYPE abap_encod VALUE &apos;1160&apos;,
*      c_sheet_xml      TYPE i VALUE 2,
*      c_shared_str_xml TYPE i VALUE 3,
*      c_filefmt_binary TYPE rlgrap-filetype VALUE &apos;BIN&apos;.
*
*    lv_file_separator = cl_abap_char_utilities=&gt;horizontal_tab.
*
*    BREAK eq_faok.
*
*    CLEAR: lv_path, lv_ctr, lt_data, lt_data[].
*    CONCATENATE gs_convcust-sap_folder_source gs_file-name INTO lv_path.
*
*    OPEN DATASET lv_path FOR INPUT IN BINARY MODE MESSAGE lv_msg.
*    IF sy-subrc EQ 0.
*      DO.
*        CLEAR: ls_tab, lv_len.
*        READ DATASET lv_path INTO ls_tab ACTUAL LENGTH lv_len.
*        IF sy-subrc NE 0.
*          IF lv_len GT 0.
*            ADD lv_len TO lv_file_size.
*            APPEND ls_tab TO lt_tab.
*          ENDIF.
*          EXIT.
*        ENDIF.
*        CONCATENATE lv_file_content ls_tab INTO lv_file_content IN BYTE MODE.
*        ADD lv_len TO lv_file_size.
*        APPEND ls_tab TO lt_tab.
*      ENDDO.
*    ELSE.
*      WRITE:/ lv_msg.
*    ENDIF.
*
*    DESCRIBE TABLE lt_tab LINES lv_lines.
*
*    CLOSE DATASET lv_path.
*
*    IF lt_tab[] IS NOT INITIAL.
*      lt_xtab[] = lt_tab[].
*Convert data to xstring
*      cl_scp_change_db=&gt;xtab_to_xstr(
*      EXPORTING
*        im_xtab = lt_xtab
*        im_size    = lv_lines
*      IMPORTING
*        ex_xstring = lv_xstring
*        ).
*    ENDIF.
*
*ENDTRY.
*
**Local data declaration
*    DATA lo_shared_str_dom TYPE REF TO if_ixml_document.
*    DATA lo_shared_str_nodeset TYPE REF TO if_ixml_node.
*    DATA l_shared_str_xml TYPE xstring.
**Converting XML into internal table
*    TRY.
*        CALL TRANSFORMATION yglifid_transform_excel
*        SOURCE XML g_shared_data
*        RESULT XML l_shared_str_xml.
**XML to ABAP
*        CALL FUNCTION &apos;SDIXML_XML_TO_DOM&apos;
*          EXPORTING
*            xml           = l_shared_str_xml
*          IMPORTING
*            document      = lo_shared_str_dom
*          EXCEPTIONS
*            invalid_input = 1
*            OTHERS        = 2.
*        IF sy-subrc = 0.
*          lo_shared_str_nodeset = lo_shared_str_dom-&gt;clone( ).
*        ENDIF.
**Import data
*        CALL TRANSFORMATION yglifid_excel_orgstruc
*         PARAMETERS
*         p_shared_string = lo_shared_str_nodeset
*         SOURCE XML g_sheet_data
*         RESULT lt_data = i_data1.
*      CATCH cx_xslt_exception.
*    ENDTRY.
*
***    IF lt_data[] IS NOT INITIAL.
***      READ TABLE lt_data INTO ls_data INDEX 1.
***      TRANSLATE ls_data TO UPPER CASE.
***      IF ls_data+0(15) EQ &apos;NO RECORD FOUND&apos;.
***        pe_subrc = 4.
***        EXIT.
***      ENDIF.
***    ELSE.
***      pe_subrc = 4.
***      EXIT.
***    ENDIF.
***
***    CHECK pe_subrc IS INITIAL.
***
***    LOOP AT lt_xls INTO ls_xls.
***      WRITE:/ ls_xls.
***    ENDLOOP.
***
***    CALL FUNCTION &apos;TEXT_CONVERT_TEX_TO_SAP&apos;
***      EXPORTING
***        i_field_seperator    = lv_file_separator
***        i_tab_raw_data       = lt_xls
***      TABLES
***        i_tab_converted_data = lt_data_conv
***      EXCEPTIONS
***        conversion_failed    = 1
***        OTHERS               = 2.
***
***    IF sy-subrc NE 0.
***      pe_subrc = 4.
***      EXIT.
***    ENDIF.
***
***    SPLIT gs_file-name AT &apos;_&apos; INTO lv_prefix lv_batch_id lv_msgid.
***
***    CHECK pe_subrc IS INITIAL.
***
***    CLEAR: lv_ctr.
***    LOOP AT lt_data_conv INTO ls_data_conv.
***      ADD 1 TO lv_ctr.
***
***      CLEAR: ls_os.
***      ls_os-interface_name = gs_convcust-interface_name.
***      ls_os-batch_id = lv_batch_id.
***      ls_os-file_line = lv_ctr.
***      ls_os-os_code = ls_data_conv-os_code.
***      ls_os-os_desc = ls_data_conv-os_desc.
***      ls_os-belngto = ls_data_conv-belngto.
***      ls_os-action = ls_data_conv-action.
***      ls_os-erdat = sy-datum.
***      ls_os-ernam = sy-uname.
***      ls_os-erzet = sy-uzeit.
***      APPEND ls_os TO lt_os.
***    ENDLOOP.
***
***    IF lt_os[] IS NOT INITIAL.
***      INSERT yglifid_orgstruc FROM TABLE lt_os[].
***      IF sy-subrc EQ 0.
***        COMMIT WORK.
***      ELSE.
***        pe_subrc = 4.
***        ROLLBACK WORK.
***      ENDIF.
***    ENDIF.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_XLS" CMPNAME="CONVERT_SINGLE_FILE" VERSION="1" LANGU="E" DESCRIPT="Convert single file from the batch" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD convert_single_file.
**********************************************************************
* Insert the conversion to this method
**********************************************************************
* Please take inspiration in class zglif_convertor_idoc~convert_single_file
* and develop this conversion in the same manner
*
* Thank you.
**********************************************************************
*{(ADD)/Equine/EG-ABAP/EQ_FAOK/07092017/Cause:
    DATA: lv_conv_error TYPE boolean_flg VALUE abap_false.

    &quot; Prepare path variables
    DATA(lv_path_source)        = CONV sapb-sappfad( gs_convcust-sap_folder_source &amp;&amp; gs_file-name ).
    DATA(lv_path_errors)        = CONV sapb-sappfad( gs_convcust-sap_folder_errors &amp;&amp; gs_file-name ).
    DATA(lv_path_processed)     = CONV sapb-sappfad( gs_convcust-sap_folder_processed &amp;&amp; gs_file-name ).

    DATA: lv_dir_name  TYPE epsf-epsdirnam, lt_dir_list TYPE TABLE OF epsfili, ls_dir_list TYPE epsfili,
          lv_subrc     TYPE subrc, lv_prefix(2) TYPE c.

    &quot; Copy files to the Processed folder (if processed successfully, file is deleted)
    CALL FUNCTION &apos;ARCHIVFILE_SERVER_TO_SERVER&apos;
      EXPORTING
        sourcepath       = lv_path_source
        targetpath       = lv_path_processed
*            IMPORTING
*       length           =
      EXCEPTIONS
        error_file       = 1
        no_authorization = 2
        OTHERS           = 3.
    IF sy-subrc = 0.
      WRITE: / |File { gs_file-name } successfully copied into folder { gs_convcust-sap_folder_processed } |. &quot; #TODO: application log
      WRITE: / |If the processing is successful, it will stay there. In case of error, it will be moved to { gs_convcust-sap_folder_errors } |. &quot; #TODO: application log
    ELSE.
      WRITE: / |Error when copying { gs_file-name } into folder { gs_convcust-sap_folder_processed } |. &quot; #TODO: application log
    ENDIF.

    &quot;Start Conversions save into temporary table
    CONDENSE gs_file-name.
    lv_prefix = gs_file-name+0(2).
    TRANSLATE lv_prefix TO UPPER CASE.

    CASE lv_prefix.
      WHEN &apos;OS&apos;.
        convert_orgstruc(
          IMPORTING
            pe_subrc = lv_subrc ).
      WHEN OTHERS.
    ENDCASE.
*}(END OF ADD)/Equine/EG-ABAP/EQ_FAOK/09072017
  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" VERSION="1" LANGU="E" DESCRIPT="Convertor for WS data from ZBOOKNG_WS_DOCUMENT to SAP IDoc" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSCCINCL="X" FIXPT="X" UNICODE="X" RSTAT="K" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZGLIF_SUPERCONVERTOR">
  <types CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="TY_BATCH_R" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="4 " SRCCOLUMN1="6 " SRCROW2="4 " SRCCOLUMN2="44 " TYPESRC_LENG="0 " TYPESRC="ty_batch_r TYPE RANGE OF zglif_batch_id
"/>
  <types CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="TY_DOWN_MESS_S" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="6 " SRCROW2="11 " SRCCOLUMN2="26 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_down_mess_s,
        batch_id       TYPE zglif_batch_stat-batch_id,
        message_id     TYPE zglif_mess_stat-message_id,
        idoc_number    TYPE zglif_mess_stat-idoc_number,
        message_status TYPE zglif_mess_stat-message_status,
      END OF ty_down_mess_s
"/>
  <types CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="TY_DOWN_MESS_T" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="13 " SRCCOLUMN1="6 " SRCROW2="13 " SRCCOLUMN2="48 " TYPESRC_LENG="0 " TYPESRC="ty_down_mess_t TYPE TABLE OF ty_down_mess_s
"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="GS_CONVCUST" VERSION="1" LANGU="1" DESCRIPT="GLIF: Convertor Customization table" EXPOSURE="2" STATE="1" EDITORDER="8 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_CONVCUST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="GS_IDOC_CONTROL" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDI_DC40" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="GT_BATCH_STAT" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="13 " SRCCOLUMN1="6 " SRCROW2="13 " SRCCOLUMN2="53 " TYPESRC_LENG="50 " TYPESRC="gt_batch_stat   TYPE TABLE OF   zglif_batch_stat
"/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="GT_IDOC_DATA" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="4 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="16 " SRCCOLUMN1="6 " SRCROW2="16 " SRCCOLUMN2="43 " TYPESRC_LENG="40 " TYPESRC="gt_idoc_data    TYPE TABLE OF edi_dd40
"/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="GT_MESS_STAT" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="11 " SRCCOLUMN1="6 " SRCROW2="11 " SRCCOLUMN2="52 " TYPESRC_LENG="49 " TYPESRC="gt_mess_stat    TYPE TABLE OF   zglif_mess_stat
"/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="GT_WS_DATA" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="7 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="20 " SRCCOLUMN1="6 " SRCROW2="20 " SRCCOLUMN2="50 " TYPESRC_LENG="47 " TYPESRC="gt_ws_data      TYPE TABLE OF zglif_bookng_ws
"/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="GV_ERROR" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="6 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDI_ERRFLG" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="GV_IDOC_NUMBER" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="5 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EDI_DOCNUM" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MC_COMPANY_CODE" VERSION="1" LANGU="E" DESCRIPT="Company Code" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTVALUE="&apos;BUKRS&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MC_ITEM_TEXT" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="7 " ATTDECLTYP="0" ATTVALUE="&apos;ITEM_TEXT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MC_LEDGER_GROUP" VERSION="1" LANGU="E" DESCRIPT="Ledger Group" EXPOSURE="0" STATE="1" EDITORDER="5 " ATTDECLTYP="0" ATTVALUE="&apos;LEDGER&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MC_PROFIT_CENTER" VERSION="1" LANGU="E" DESCRIPT="Profit Center" EXPOSURE="0" STATE="1" EDITORDER="6 " ATTDECLTYP="0" ATTVALUE="&apos;PROFIT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MC_SEGMENT" VERSION="1" LANGU="E" DESCRIPT="Segment" EXPOSURE="0" STATE="1" EDITORDER="4 " ATTDECLTYP="0" ATTVALUE="&apos;SEGMENT&apos;" ATTEXPVIRT="0" TYPTYPE="1" TYPE="STRING" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MTR_BATCH_ID" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_BATCH_R" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MT_DOWNLOADED_MESSAGES" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="TY_DOWN_MESS_T" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MV_BUKRS" VERSION="1" LANGU="E" DESCRIPT="Company Code" EXPOSURE="0" STATE="1" EDITORDER="8 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="BUKRS" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" REFCLSNAME="ZGLIF_SUPERCONVERTOR" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" REFCLSNAME="ZGLIF_SUPERCONVERTOR" VERSION="1" MTDNAME="CONVERT" EXPOSURE="2"/>
  </inheritance>
  <method CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="CANCEL_IDOC" VERSION="1" LANGU="E" DESCRIPT="Cancel already created iDoc" EXPOSURE="0" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="CANCEL_IDOC" SCONAME="IV_IDOC_NUMBER" VERSION="1" LANGU="E" DESCRIPT="IDoc number" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EDIDC-DOCNUM"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="CANCEL_IDOC" SCONAME="IV_ZERO_ITEMS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BOOLEAN" PAROPTIONL="X"/>
   <source>METHOD cancel_idoc.

    &quot; cancel iDoc. Put it into status 68. No further processing.
    DATA(lt_idoc_status) = VALUE t_idoc_status( ( docnum = iv_idoc_number status = &apos;68&apos; msgid = &apos;ZGLIF_MESSAGES&apos; msgno = SWITCH #( iv_zero_items WHEN abap_true THEN 003 ELSE 002 ) msgty = &apos;S&apos; msgv1 = iv_idoc_number ) ).

    CALL FUNCTION &apos;IDOC_STATUS_WRITE_TO_DATABASE&apos;
      EXPORTING
        idoc_number               = iv_idoc_number
*       idoc_opened_flag          = space
*       no_dequeue_flag           = &apos;X&apos;
*      IMPORTING
*       idoc_control              =
      TABLES
        idoc_status               = lt_idoc_status
      EXCEPTIONS
        idoc_foreign_lock         = 1
        idoc_not_found            = 2
        idoc_status_records_empty = 3
        idoc_status_invalid       = 4
        db_error                  = 5
        OTHERS                    = 6.

    IF sy-subrc = 0.
      log_add_text( iv_text = |iDoc { iv_idoc_number } canceled| iv_detlevel = &apos;5&apos; ).
    ELSE.
      log_add_text( iv_text = |iDoc { iv_idoc_number } could not be canceled| iv_type = &apos;E&apos; iv_detlevel = &apos;5&apos; ).
    ENDIF.


  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="CONSTRUCTOR" SCONAME="PIS_CONVCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Convertor&apos;s customization table" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_CONVCUST"/>
   <source>METHOD constructor.

    &quot; Call the constructor of the Superclass: zglif_superconvertor
    super-&gt;constructor( ).
    &quot; take over the Convertor customization structure
    gs_convcust = pis_convcust.

    log_add_text( iv_text = |Convertor WS to iDoc created| iv_detlevel = &apos;3&apos; ).

    DATA: lv_fieldname TYPE string VALUE &apos;(ZGLIF_ACTIVATE)S_BATCH[]&apos;.
    ASSIGN (lv_fieldname) TO FIELD-SYMBOL(&lt;ltr_batch&gt;).
    IF sy-subrc = 0.
      log_add_text( iv_text = |Batch Assigned from (ZGLIF_ACTIVATE)S_BATCH[]| iv_detlevel = &apos;3&apos; ).
      mtr_batch_id = &lt;ltr_batch&gt;.
    ELSE.
      lv_fieldname = &apos;(ZBOOKNG_PROCESSING)P_BATCH&apos;.
      ASSIGN (lv_fieldname) TO FIELD-SYMBOL(&lt;lv_batch&gt;).
      IF sy-subrc = 0.
        log_add_text( iv_text = |Batch Assigned from (ZBOOKNG_PROCESSING)P_BATCH| iv_detlevel = &apos;3&apos; ).
        mtr_batch_id = VALUE #( ( sign = &apos;I&apos; option = &apos;EQ&apos; low = &lt;lv_batch&gt; ) ).
      ENDIF.
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="CONVERT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD convert.
    &quot;Perform parent implementation
    CALL METHOD super-&gt;convert.

    &quot; Do we have any data for conversion?
    get_webservice_data( ).

    IF gt_ws_data IS NOT INITIAL.

      &quot; Prepare idoc control structure
      prepare_idoc_control_entry( ).

      log_add_text( iv_text = |Begin of generating iDocs| iv_detlevel = &apos;3&apos; ).

      &quot; Prepare idoc data - loop over all payloads that require conversion
      &quot; Main loop = group by single document = batch id + message id -&gt; list of items (key field &quot;item&quot;)
      LOOP AT gt_ws_data    INTO DATA(ls_ws_data)
                            GROUP BY (  batch_id    = ls_ws_data-batch_id
                                        message_id  = ls_ws_data-message_id )
                                        &quot; size        = GROUP SIZE      cannot be compiled due to unfinished upgrade from 750 to 753
                                        &quot; index       = GROUP INDEX )   cannot be compiled due to unfinished upgrade from 750 to 753
                            INTO DATA(ls_single_document_key).

        TRY .
            DATA(lv_idoc_number) = mt_downloaded_messages[ batch_id    = ls_single_document_key-batch_id
                                                            message_id  = ls_single_document_key-message_id ]-idoc_number.
            IF lv_idoc_number IS NOT INITIAL.
              log_add_text( iv_text = |Old iDoc exists for batch: { ls_single_document_key-batch_id } messsage: { ls_single_document_key-message_id }, canceling iDoc: { lv_idoc_number }|
                                          iv_detlevel = &apos;4&apos; ).
              cancel_idoc( lv_idoc_number ).
            ENDIF.
          CATCH cx_sy_itab_line_not_found.

        ENDTRY.



        &quot; Prepare the header for the IDoc to be created
        prepare_idoc_header_data( gt_ws_data[ batch_id    = ls_single_document_key-batch_id
                                              message_id  = ls_single_document_key-message_id ] ).


        &quot; Prepare the items for the IDoc to be created
        LOOP AT GROUP ls_single_document_key INTO DATA(ls_single_document).
          prepare_idoc_item_data(  pis_ws_data     = ls_single_document            &quot; Webservice payload - single line
                                   piv_item_number = CONV buzei( sy-tabix ) ).     &quot; Number of the item for idoc creation
        ENDLOOP.

        &quot; Create single IDoc based on the prepared data
        create_single_idoc(   piv_batch_id   = ls_single_document-batch_id        &quot; Batch ID
                              piv_message_id = ls_single_document-message_id ).   &quot; Message ID

        &quot; Clear the IDoc Header and Items data
        CLEAR gt_idoc_data.
      ENDLOOP.
      &quot; Conversion finished, update GLIF status tables
      update_status_tables( ).
    ELSE.
      log_add_text( iv_text = |No WS data found ready for conversion in table ZGLIF_BOOKNG_WS | iv_detlevel = &apos;3&apos; ).
*      WRITE: / |No WS data found ready for conversion in table ZGLIF_BOOKNG_WS |. &quot; #TODO: application log
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="CREATE_SINGLE_IDOC" VERSION="1" LANGU="E" DESCRIPT="Create single idoc based on the prepared data" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="CREATE_SINGLE_IDOC" SCONAME="PIV_BATCH_ID" VERSION="1" LANGU="E" DESCRIPT="Batch ID" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_BATCH_ID"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="CREATE_SINGLE_IDOC" SCONAME="PIV_MESSAGE_ID" VERSION="1" LANGU="E" DESCRIPT="Message ID" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_MESSAGE_ID"/>
   <source>METHOD create_single_idoc.
    DATA: lv_error TYPE edi_help-error_flag.
    zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                            pev_time = DATA(lv_time) ).
    &quot; Use this FM to create idoc based on the provided data (webservice + customization + constants)
    &quot; Check the created idoc in TC BD87 - has status 64 - ready for processing
    CALL FUNCTION &apos;IDOC_INBOUND_SINGLE&apos;
      EXPORTING
        pi_idoc_control_rec_40        = gs_idoc_control
*       pi_do_commit                  = &apos;X&apos;
      IMPORTING
        pe_idoc_number                = gv_idoc_number
        pe_error_prior_to_application = lv_error
      TABLES
        pt_idoc_data_records_40       = gt_idoc_data
      EXCEPTIONS
        idoc_not_saved                = 1
        OTHERS                        = 2.

    &quot; Was the creation of idoc successful? Save the resulting status to the status tables
    IF sy-subrc = 0 AND gv_idoc_number IS NOT INITIAL.
      log_add_text( iv_text = |Batch { piv_batch_id }, Message { piv_message_id } converted into IDoc { gv_idoc_number }| iv_detlevel = &apos;4&apos; ).
*      WRITE: / |Batch { piv_batch_id }, Message { piv_message_id } converted into IDoc { gv_idoc_number } |. &quot; #TODO: application log

      LOOP AT gt_ws_data TRANSPORTING NO FIELDS WHERE batch_id = piv_batch_id AND message_id = piv_message_id AND ( amount &gt;= &apos;0.5&apos; OR amount &lt; &apos;-0.5&apos; ).
        EXIT.
      ENDLOOP.
      IF sy-subrc = 0.  &quot; that&apos;s good. At least one non zero item is there
        DATA(lv_message_status) = zglif_dispatcher=&gt;gc_10_converted.
      ELSE. &quot; This is not good. All Items are zero value. Cancel iDoc!!!
        lv_message_status = zglif_dispatcher=&gt;gc_98_canceled_zero_values.
        log_add_text( iv_text = |Batch { piv_batch_id }, Message { piv_message_id } IDoc { gv_idoc_number } canceled. Zero items | iv_type = &apos;W&apos; iv_detlevel = &apos;5&apos; ).
        cancel_idoc( iv_idoc_number = gv_idoc_number iv_zero_items = abap_true ).
*        WRITE: / |Batch { piv_batch_id }, Message { piv_message_id } IDoc { gv_idoc_number } canceled. Zero items |.
      ENDIF.

      gt_mess_stat = VALUE #( BASE gt_mess_stat
        (
          interface_name      = gs_convcust-interface_name
          &quot; filename            = no filename for webservice payload
          batch_id            = piv_batch_id
          message_id          = piv_message_id
          message_status      = lv_message_status
          idoc_number         = gv_idoc_number
          message_changed_on  = lv_date
          message_changed_at  = lv_time
          message_changed_by  = sy-uname
        )
      ).

    ELSE.
      gt_mess_stat = VALUE #( BASE gt_mess_stat
        (
          interface_name      = gs_convcust-interface_name
          &quot; filename            = no filename for webservice payload
          batch_id            = piv_batch_id
          message_id          = piv_message_id
          message_status      = zglif_dispatcher=&gt;gc_11_conversion_error
          message_changed_on  = lv_date
          message_changed_at  = lv_time
          message_changed_by  = sy-uname
        )
      ).
      log_add_text( iv_text = |Batch { piv_batch_id }, Message { piv_message_id } not converted into IDoc or with Error | iv_type = &apos;E&apos; iv_detlevel = &apos;4&apos; ).
*      WRITE: / |Batch { piv_batch_id }, Message { piv_message_id } not converted into IDoc |. &quot; #TODO: application log
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="GET_WEBSERVICE_DATA" VERSION="1" LANGU="E" DESCRIPT="get webservice data for conversion into idoc" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD get_webservice_data.
    &quot; Any data ready for conversion in the WS table?
    &quot; this class is currently bind to table ZGLIF_BOOKNG_WS ( and interface HCCN_BOOKNG )


    &quot; we don&apos;t want to process partialy downloaded data. Therefore we check batch_stat and message_stat tables

    log_add_text( iv_text = |Getting WS data from tables| iv_detlevel = &apos;3&apos; ).

    SELECT DISTINCT b~batch_id, m~message_id, m~idoc_number, m~message_status
      FROM zglif_batch_stat AS b
      JOIN zglif_mess_stat AS m  ON b~batch_id = m~batch_id AND b~interface_name = m~interface_name
      WHERE b~interface_name = @gs_convcust-interface_name
      AND ( b~batch_status = @zglif_dispatcher=&gt;gc_00_downloaded OR b~batch_status = @zglif_dispatcher=&gt;gc_50_corrected )
      AND ( m~message_status = @zglif_dispatcher=&gt;gc_00_downloaded OR m~message_status = @zglif_dispatcher=&gt;gc_50_corrected )
      AND b~batch_id IN @mtr_batch_id
      INTO CORRESPONDING FIELDS OF TABLE @mt_downloaded_messages.

    IF mt_downloaded_messages IS NOT INITIAL.
      SELECT *
        FROM zglif_bookng_ws
        INTO TABLE gt_ws_data
        FOR ALL ENTRIES IN mt_downloaded_messages
        WHERE batch_id = mt_downloaded_messages-batch_id
        AND message_id = mt_downloaded_messages-message_id
*        AND ( message_status = zglif_dispatcher=&gt;gc_00_downloaded OR message_status = zglif_dispatcher=&gt;gc_10_converted )
        ORDER BY PRIMARY KEY.

      log_add_text( iv_text = |Found { lines( mt_downloaded_messages ) } messages| iv_detlevel = &apos;3&apos; ).

    ENDIF.


  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MAP_FIELD" VERSION="1" LANGU="E" DESCRIPT="Map Field by Mapping Tables" EXPOSURE="0" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MAP_FIELD" SCONAME="IV_FIELD" VERSION="1" LANGU="E" DESCRIPT="Field to map" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MAP_FIELD" SCONAME="IV_VALUE" VERSION="1" LANGU="E" DESCRIPT="Value In" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MAP_FIELD" SCONAME="IV_ADDITIONAL_VALUE1" VERSION="1" LANGU="E" DESCRIPT="Additional Value" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING" PAROPTIONL="X"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MAP_FIELD" SCONAME="EV_MAPPED_ADDITIONAL_VALUE" VERSION="1" LANGU="E" DESCRIPT="Additional Value Out" CMPTYPE="1" MTDTYPE="0" EDITORDER="4 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="STRING"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="MAP_FIELD" SCONAME="RV_MAPPED_VALUE" VERSION="1" LANGU="E" DESCRIPT="Value Out" CMPTYPE="1" MTDTYPE="0" EDITORDER="5 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD map_field.

    CASE iv_field.
      WHEN mc_company_code.

        SELECT SINGLE bukrs_target t001~waers
          FROM zbookng_bukrs
          JOIN t001 ON t001~bukrs = zbookng_bukrs~bukrs_target
          INTO (rv_mapped_value, ev_mapped_additional_value)
          WHERE bukrs_source = iv_value
          AND valid_from &lt;= sy-datum
          AND valid_to &gt;= sy-datum.
        IF sy-subrc &lt;&gt; 0.
          rv_mapped_value = iv_value.
          SELECT SINGLE waers
          FROM t001
          INTO @ev_mapped_additional_value
          WHERE bukrs = @iv_value.
        ENDIF.

      WHEN mc_ledger_group.

        SELECT SINGLE ledger_group_target
           FROM zbookng_led_grp
           INTO rv_mapped_value
           WHERE ledger_group_source = iv_value
           AND valid_from &lt;= sy-datum
           AND valid_to &gt;= sy-datum.
        IF sy-subrc &lt;&gt; 0.
          rv_mapped_value = iv_value.
        ENDIF.

      WHEN mc_profit_center.

        SELECT SINGLE prctr_target
           FROM zglif_prctrcust
           INTO rv_mapped_value
           WHERE interface_name = zcl_bookng_tools=&gt;mc_interface_name
           AND prctr_source = iv_value
           AND bukrs = iv_additional_value1
           AND valid_from &lt;= sy-datum
           AND valid_to &gt;= sy-datum.
        IF sy-subrc &lt;&gt; 0.
          rv_mapped_value = iv_value.
        ENDIF.

      WHEN mc_segment.

        SELECT SINGLE segment_target gsber
           FROM zbookng_segment
           INTO (rv_mapped_value, ev_mapped_additional_value)
           WHERE segment_source = iv_value
           AND valid_from &lt;= sy-datum
           AND valid_to &gt;= sy-datum.
        IF sy-subrc &lt;&gt; 0.
          rv_mapped_value = iv_value.
        ENDIF.

      WHEN mc_item_text.

        SELECT SINGLE item_text_target
        FROM zbookng_item_tx
        INTO rv_mapped_value
        WHERE item_text_source = iv_value
        AND valid_from &lt;= sy-datum
        AND valid_to &gt;= sy-datum.
        IF sy-subrc &lt;&gt; 0.
          rv_mapped_value = iv_value.
        ENDIF.

      WHEN OTHERS.
        rv_mapped_value = iv_value.
    ENDCASE.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="PREPARE_IDOC_CONTROL_ENTRY" VERSION="1" LANGU="E" DESCRIPT="Create control entry for idoc" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD prepare_idoc_control_entry.

    gs_idoc_control = VALUE #(
     tabnam  = &apos;EDI_DC40&apos;
*    mandt   =
*    docnum  =
*    docrel  =
     status  = 64
     direct  = 2     &quot; Idoc direction - outbout idoc 2, inbound idoc 1
*    outmod  =
*    exprss  =
*    test    =
     idoctyp = &apos;FIDCCP02&apos;
*     cimtyp  = &apos;YFIDCCP02&apos;
     mestyp  = &apos;FIDCC2&apos;
*    mescod  =
*    mesfct  =
*    std     =
*    stdvrs  =
*    stdmes  =
     sndpor  = COND #( WHEN gs_convcust-edi_sndpor IS NOT INITIAL THEN gs_convcust-edi_sndpor ELSE &apos;SAP&apos; ) &quot;&apos;SAP&apos;
     sndprt  = COND #( WHEN gs_convcust-edi_sndprt IS NOT INITIAL THEN gs_convcust-edi_sndprt ELSE &apos;LS&apos; ) &quot;&apos;LS&apos;
*    sndpfc  =
     sndprn  = COND #( WHEN gs_convcust-edi_sndprn IS NOT INITIAL THEN gs_convcust-edi_sndprn ELSE &apos;BOOKNG&apos; ) &quot;&apos;BOOKNG&apos;
*    sndsad  =
*    sndlad  =
     rcvpor  = COND #( WHEN gs_convcust-edi_rcvpor IS NOT INITIAL THEN gs_convcust-edi_rcvpor ELSE |SAP{ sy-sysid }| ) &quot; |SAP{ sy-sysid }|
     rcvprt  = COND #( WHEN gs_convcust-edi_rcvprt IS NOT INITIAL THEN gs_convcust-edi_rcvprt ELSE &apos;LS&apos; ) &quot;&apos;LS&apos;
*   rcvpfc  =
     rcvprn  = COND #( WHEN gs_convcust-edi_rcvprn IS NOT INITIAL THEN gs_convcust-edi_rcvprn ELSE |{ sy-sysid }CLNT{ sy-mandt }| ) &quot;|{ sy-sysid }CLNT{ sy-mandt }|
*    rcvsad  =
*    rcvlad  =
*    credat  =
*    cretim  =
*    refint  =
*    refgrp  =
*    refmes  =
*    arckey  =
*    serial  =
   ).

    log_add_text( iv_text = |iDoc control entry created| iv_detlevel = &apos;3&apos; ).


*    &quot; Consider customization table for convertor of type webservice and insert those values
*    gs_idoc_control = VALUE #(
*     tabnam  = &apos;EDI_DC40&apos;
**    mandt   =
**    docnum  =
**    docrel  =
*     status  = 64
*     direct  = 2     &quot; Idoc direction - outbout idoc 2, inbound idoc 1
**    outmod  =
**    exprss  =
**    test    =
*     idoctyp = &apos;FIDCCP02&apos;
*     cimtyp  = &apos;YFIDCCP02&apos;
*     mestyp  = &apos;FIDCC2&apos;
**    mescod  =
**    mesfct  =
**    std     =
**    stdvrs  =
**    stdmes  =
*     sndpor  = &apos;ZXML&apos;
*     sndprt  = &apos;LS&apos;
**    sndpfc  =
*     sndprn  = &apos;BOOKDEV&apos;
**    sndsad  =
**    sndlad  =
*     rcvpor  = &apos;SAPSDC&apos;
*     rcvprt  = &apos;LS&apos;
**   rcvpfc  =
*     rcvprn  = &apos;SDCCLNT100&apos;
**    rcvsad  =
**    rcvlad  =
**    credat  =
**    cretim  =
**    refint  =
**    refgrp  =
**    refmes  =
**    arckey  =
**    serial  =
*   ).

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="PREPARE_IDOC_HEADER_DATA" VERSION="1" LANGU="E" DESCRIPT="Create header data entry for idoc" EXPOSURE="1" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="PREPARE_IDOC_HEADER_DATA" SCONAME="PIS_WS_DATA" VERSION="1" LANGU="E" DESCRIPT="Webservice payload - single line" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_BOOKNG_WS"/>
   <source>METHOD prepare_idoc_header_data.
    DATA: lv_xblnr TYPE xblnr,
          lv_waers TYPE string.

    lv_xblnr = |{ pis_ws_data-batch_id ALPHA = OUT }_{ pis_ws_data-message_id ALPHA = OUT }|.
    CONDENSE lv_xblnr NO-GAPS.

    mv_bukrs = map_field(
            EXPORTING
              iv_field = mc_company_code iv_value = CONV #( pis_ws_data-company_code )
            IMPORTING
              ev_mapped_additional_value = lv_waers ).

    &quot; Example implementation for IDOC message type FIDCC2:
    DATA(ls_idoc_e1fikpf) = VALUE e1fikpf(
      bukrs         = mv_bukrs &quot;&apos;ID01&apos;
*     belnr         =
      gjahr         = pis_ws_data-posting_date+0(4) &quot; &apos;2019&apos; check with consultant from which date field this field is to be filled
      blart         = &apos;BK&apos;
      bldat         = pis_ws_data-document_date             &quot;&apos;20190413&apos;
      budat         = pis_ws_data-posting_date &quot; &apos;20190414&apos;
      monat         = pis_ws_data-posting_date+4(2) &quot; &apos;04&apos;
      wwert         = pis_ws_data-posting_date              &quot;&apos;20190414&apos;
*     usnam         =
*     tcode         =
*     bvorg         =
      xblnr         = lv_xblnr &quot; &apos;bk_90004_0000001&apos;
      bktxt         = pis_ws_data-header_text &quot;|BK_{ pis_ws_data-batch_id }_{ pis_ws_data-message_id }|
      waers         = lv_waers &quot;&apos;IDR&apos;
*     kursf         =
      glvor         = &apos;RFBU&apos;
*     awtyp         =
*     awref         =
*     aworg         =
*     fikrs         =
*     hwaer         =
*     hwae2         =
*     hwae3         =
*     kurs2         =
*     kurs3         =
*     basw2         =
*     basw3         =
*     umrd2         =
*     umrd3         =
*     curt2         =
*     curt3         =
*     ausbk         =
*     awsys         =
*     lotkz         =
*     bukrs_snd     =
*     FILTER        =
*     kursf_m       =
*     kurs2_m       =
*     kurs3_m       =
*     bstat         =
*     brnch         =
*     numpg         =
*     adisc         =
*     stblg         =
*     stjah         =
*     awtyp_rev     =
*     awref_rev     =
*     aworg_rev     =
*     reserve       =
*     xref1_hd      =
*     xref2_hd      =
*     xblnr_long    =
*     rldnr         =
     ldgrp         = map_field( iv_field = mc_ledger_group iv_value = CONV #( pis_ws_data-ledger_group ) )  &quot;SWITCH #( pis_ws_data-ledger_group WHEN &apos;IFRS&apos; THEN &apos;L1&apos; WHEN &apos;LOCAL&apos; THEN &apos;0L&apos; )
*     vatdate       =
*     tcode_long    =
*     subset        =
*     reserve02     =
*     reserve03     =
    ).

    &quot; Update the idoc data table with header entry
    gt_idoc_data = VALUE #( BASE gt_idoc_data
     (   &quot; Header
       segnam  = &apos;E1FIKPF&apos;
*      mandt   =
*      docnum  =
*      segnum  =
*      psgnum  =
*      hlevel  =
       sdata   = ls_idoc_e1fikpf
     )
   ).
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="PREPARE_IDOC_ITEM_DATA" VERSION="1" LANGU="E" DESCRIPT="Create item data entries for idoc" EXPOSURE="1" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="PREPARE_IDOC_ITEM_DATA" SCONAME="PIS_WS_DATA" VERSION="1" LANGU="E" DESCRIPT="Webservice payload - single line" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_BOOKNG_WS"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="PREPARE_IDOC_ITEM_DATA" SCONAME="PIV_ITEM_NUMBER" VERSION="1" LANGU="E" DESCRIPT="Number of the item for idoc creation" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="BUZEI"/>
   <source>METHOD prepare_idoc_item_data.
    &quot; Prepare values for usage - conditionals

    IF pis_ws_data-amount &gt;= 0.
      &quot; Debit/Credit indicator
      DATA(lv_shkzg) = SWITCH shkzg( pis_ws_data-debit_credit
                          WHEN &apos;DEBIT&apos; THEN &apos;S&apos;
                          WHEN &apos;CREDIT&apos; THEN &apos;H&apos;).

      &quot; Posting key
      DATA(lv_bschl) = SWITCH bschl( pis_ws_data-debit_credit
                          WHEN &apos;DEBIT&apos; THEN &apos;40&apos;
                          WHEN &apos;CREDIT&apos; THEN &apos;50&apos;).

    ELSE.
      &quot; reverse for negative values
      &quot; JUST FOR TEST NOW!!!!

      &quot; Debit/Credit indicator
      lv_shkzg = SWITCH shkzg( pis_ws_data-debit_credit
                          WHEN &apos;DEBIT&apos; THEN &apos;H&apos;
                          WHEN &apos;CREDIT&apos; THEN &apos;S&apos;).

      &quot; Posting key
      lv_bschl = SWITCH bschl( pis_ws_data-debit_credit
                          WHEN &apos;DEBIT&apos; THEN &apos;50&apos;
                          WHEN &apos;CREDIT&apos; THEN &apos;40&apos;).


    ENDIF.

    DATA: lv_gsber TYPE string.
    DATA(lv_segmet) = map_field(
                        EXPORTING
                          iv_field                   = mc_segment                 &quot; Field to map
                          iv_value                   = CONV #( pis_ws_data-segment )                 &quot; Value In
*                          iv_additional_value1       =                  &quot; Additional Value
                        IMPORTING
                          ev_mapped_additional_value = lv_gsber                 &quot; Additional Value Out
                      ).
*    IF lv_gsber IS INITIAL.
*      lv_gsber = &apos;1000&apos;.    &quot; for China
*    ENDIF.



    &quot; Create segments per IDOC type + do not forget extensions!
    DATA(ls_idoc_e1fiseg) = VALUE e1fiseg(
      buzei       = CONV buzei( pis_ws_data-item ) &quot; 1
*  buzid          =
*  augdt          =
*  augcp          =
*  augbl          =
      bschl       = lv_bschl &quot; &apos;40&apos;
*  koart          =
      shkzg       = lv_shkzg &quot; &apos;S&apos;
      gsber       = CONV #( lv_gsber ) &quot;&apos;1000&apos;
*  pargb          =
      mwskz       = pis_ws_data-tax_code
      dmbtr       = abs( pis_ws_data-amount ) &quot; &apos;15.00&apos;
*  dmbe2          =
*  dmbe3          =
      wrbtr       = abs( pis_ws_data-amount ) &quot; &apos;15.00&apos;
*  kzbtr          =
*  pswbt          =
*  pswsl          =
*  hwbas          =
*  fwbas          =
*  mwart          =
*  ktosl          =
      valut       = pis_ws_data-value_date
*  zuonr          =
      sgtxt       = map_field( iv_field = mc_item_text iv_value = CONV #( pis_ws_data-item_text ) )
*  vbund          =
*  bewar          =
*  vorgn          =
*  fdlev          =
*  fdgrp          =
*  fdtag          =
*  kokrs          =
*  txgrp          =
*  kostl          =
*  aufnr          =
*  vbeln          =
*  vbel2          =
*  posn2          =
*  anln1          =
*  anln2          =
*  anbwa          =
*  bzdat          =
*  pernr          =
*  xumsw          =
*  xskrl          =
*  xauto          =
*  saknr          =
      hkont       = pis_ws_data-gl_account &quot; &apos;0601030701&apos;
*  abper          =
*  matnr          =
*  werks          =
*  menge          =
*  meins          =
*  erfmg          =
*  erfme          =
*  bpmng          =
*  bprme          =
*  ebeln          =
*  ebelp          =
*  zekkn          =
*  bwkey          =
*  bwtar          =
*  bustw          =
*  bualt          =
*  tbtkz          =
*  stceg          =
      rstgr       = SWITCH rstgr( pis_ws_data-gl_account WHEN &apos;01010500X9&apos; THEN &apos;R99&apos; ELSE &apos;&apos; )
      prctr       = map_field( iv_field = mc_profit_center iv_value = CONV #( pis_ws_data-profit_center ) iv_additional_value1 = CONV #( mv_bukrs ) ) &quot; &apos;CN00000000&apos;
*  vname          =
*  recid          =
*  egrup          =
*  vptnr          =
*  vertt          =
*  vertn          =
*  vbewa          =
*  txjcd          =
*  imkey          =
*  dabrz          =
*  fipos          =
*  kstrg          =
*  nplnr          =
*  aufpl          =
*  aplzl          =
*  projk          =
*  paobjnr        =
*  btype          =
*  etype          =
*  xegdr          =
*  hrkft          =
*  lokkt          =
*  fistl          =
*  geber          =
*  stbuk          =
*  altkt          =
*  pprct          =
  xref1          = SWITCH #( pis_ws_data-reference1 WHEN &apos;FALSE&apos; THEN &apos;CREATE&apos; WHEN &apos;TRUE&apos; THEN &apos;CANCEL&apos; ELSE pis_ws_data-reference1 )
  xref2          = pis_ws_data-reference2
*  kblnr          =
*  kblpos         =
*  fkber          =
*  obzei          =
  xnegp          = COND #( WHEN pis_ws_data-amount &lt; 0 THEN &apos;X&apos; ELSE &apos;&apos; )
*  cacct          =
  xref3          = pis_ws_data-reference3
*  txdat          =
*  bupla          =
*  secco          =
*  lstar          =
*  prznr          =
*  kursr          =
*  kursr_m        =
*  gbetr          =
*  reserve        =
*  xcpdd          =
*  taxps          =
*  qsznr          =
    ).

*    DATA(ls_idoc_y1acyy) = VALUE y1acyy(
*      yy001          = &apos;Z001&apos; &quot; some webservice field -&gt; pis_ws_data-xxx
**  YY002          =
**  YY003          =
**  YY004          =
**  YY005          =
**  YY006          =
**  YY007          =
**  YY008          =
**  YY009          =
**  YY010          =
*    ).

    DATA(ls_idoc_e1fise2) = VALUE e1fise2(
*  matnr_external    =
*  matnr_version     =
*  matnr_guid        =
*  reserve           =
*  fipex             =
*  fkber_long        =
*  grant_nbr         =
*  sctax             =
*  sttax             =
*  glupm             =
*  measure           =
      segment        = lv_segmet &quot; 1000&apos;
*  psegment          =
*  pfkber            =
*  kstar             =
*  reserve01         =
*  reserve02         =
*  matnr_long        =
    ).

    &quot; Insert the created data entries into idoc_data structure
    gt_idoc_data = VALUE #( BASE gt_idoc_data
      (   &quot; Item 1
        segnam  = &apos;E1FISEG&apos;
*    mandt   =
*    docnum  =
*    segnum  =
*    psgnum  =
*    hlevel  =
        sdata   = ls_idoc_e1fiseg
      )
*      (
*        segnam  = &apos;Y1ACYY&apos;
**    mandt   =
**    docnum  =
**    segnum  =
**    psgnum  =
**    hlevel  =
*        sdata   = ls_idoc_y1acyy
*      )
      (
        segnam  = &apos;E1FISE2&apos;
*    mandt   =
*    docnum  =
*    segnum  =
*    psgnum  =
*    hlevel  =
        sdata   = ls_idoc_e1fise2
      )
    ).
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_WS_TO_IDOC" CMPNAME="UPDATE_STATUS_TABLES" VERSION="1" LANGU="E" DESCRIPT="Update GLIF Batch and Message status tables" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD update_status_tables.
    &quot; Update the webservice data table statues so that they are not in status &quot;00 - Downloaded&quot; and tagged for conversion with the next run of interface
    LOOP AT gt_ws_data ASSIGNING FIELD-SYMBOL(&lt;lfs_ws_data&gt;).
      &lt;lfs_ws_data&gt;-message_status = gt_mess_stat[ batch_id = &lt;lfs_ws_data&gt;-batch_id message_id = &lt;lfs_ws_data&gt;-message_id ]-message_status.
    ENDLOOP.
    MODIFY zglif_bookng_ws FROM TABLE gt_ws_data.

    &quot; Delete the old GLIF Message status entries (unable to update as key is modified)
    DATA(lt_mess_stat_old) = VALUE zglif_mess_stat_tt( FOR ls_mess_stat_old IN mt_downloaded_messages
  (
    interface_name      = gs_convcust-interface_name
    batch_id            = ls_mess_stat_old-batch_id
    message_id          = ls_mess_stat_old-message_id
    idoc_number         = ls_mess_stat_old-idoc_number
  )
).
    &quot; CM&amp;W needed for proper Batch status decision
    DELETE zglif_mess_stat FROM TABLE lt_mess_stat_old.
    INSERT zglif_mess_stat FROM TABLE gt_mess_stat.
    COMMIT WORK AND WAIT.

    &quot; Get the message that was modified as last into the first line of the new batch
    SORT gt_mess_stat DESCENDING BY batch_id message_id.

    &quot; Update the GLIF Batch status
    LOOP AT gt_mess_stat    INTO DATA(ls_mess_stat)
                            GROUP BY ( batch_id = ls_mess_stat-batch_id )
                            &quot; size        = GROUP SIZE      cannot be compiled due to unfinished upgrade from 750 to 753
                            &quot; index       = GROUP INDEX )   cannot be compiled due to unfinished upgrade from 750 to 753
                            INTO DATA(ls_single_batch_key).

      gt_batch_stat = VALUE #( BASE gt_batch_stat
        (
          interface_name      = gs_convcust-interface_name
          batch_id            = ls_single_batch_key-batch_id
          batch_changed_on    = gt_mess_stat[ batch_id = ls_single_batch_key-batch_id ]-message_changed_on  &quot; due to sorted table we know that this is the newest entry
          batch_changed_at    = gt_mess_stat[ batch_id = ls_single_batch_key-batch_id ]-message_changed_at  &quot; due to sorted table we know that this is the newest entry
          batch_changed_by    = gt_mess_stat[ batch_id = ls_single_batch_key-batch_id ]-message_changed_by  &quot; due to sorted table we know that this is the last entry
        )
      ).
    ENDLOOP.

    &quot; Update batch statuses
    zglif_utility_storage=&gt;update_batch_status( CHANGING pct_batch = gt_batch_stat ).
    MODIFY zglif_batch_stat FROM TABLE gt_batch_stat.
    COMMIT WORK AND WAIT.

    IF sy-subrc = 0.
      log_add_text( iv_text = |Status of following Batches has been updated:| iv_detlevel = &apos;3&apos; ).
*      WRITE: / |Status of following Batches has been updated: |. &quot; #TODO: application log
    ELSE.
      log_add_text( iv_text = |Problem with updating the status of following Batches: | iv_type = &apos;E&apos; iv_detlevel = &apos;3&apos; ).
*      WRITE: / |Problem with updating the status of following Batches: |. &quot; #TODO: application log
    ENDIF.
    LOOP AT gt_batch_stat INTO DATA(ls_batch_stat).
      log_add_text( iv_text = |Batch ID: { ls_batch_stat-batch_id }| iv_detlevel = &apos;4&apos; ).
*      WRITE: / | { ls_batch_stat-batch_id } |. &quot; #TODO: application log
    ENDLOOP.

  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_CONVERTOR_IDOC" VERSION="1" LANGU="E" DESCRIPT="Convertor for xml file to SAP IDoc" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZGLIF_SUPERCONVERTOR">
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <attribute CLSNAME="ZGLIF_CONVERTOR_IDOC" CMPNAME="GS_CONVCUST" VERSION="1" LANGU="1" DESCRIPT="GLIF: Convertor Customization table" EXPOSURE="2" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_CONVCUST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_IDOC" CMPNAME="GS_FILE" VERSION="1" LANGU="1" DESCRIPT="Filename of currently processed file (needed for BAdI)" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EPS2FILI" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_IDOC" CMPNAME="GT_MESS_STAT" VERSION="1" LANGU="1" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="11 " SRCCOLUMN1="6 " SRCROW2="11 " SRCCOLUMN2="49 " TYPESRC_LENG="46 " TYPESRC="gt_mess_stat TYPE TABLE OF   zglif_mess_stat
"/>
  <inheritance CLSNAME="ZGLIF_CONVERTOR_IDOC" REFCLSNAME="ZGLIF_SUPERCONVERTOR" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZGLIF_CONVERTOR_IDOC" REFCLSNAME="ZGLIF_SUPERCONVERTOR" VERSION="1" MTDNAME="CONVERT" EXPOSURE="2"/>
  </inheritance>
  <method CLSNAME="ZGLIF_CONVERTOR_IDOC" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_IDOC" CMPNAME="CONSTRUCTOR" SCONAME="PIS_CONVCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Convertor&apos;s customization table" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_CONVCUST"/>
   <source>METHOD constructor.
    &quot; Call the constructor of the Superclass: zglif_superconvertor
    super-&gt;constructor( ).
    &quot; take over the Convertor customization structure
    gs_convcust = pis_convcust.

    &quot; WRITE: / |FTP Convertor has been created. Rejoice!|. &quot; #TODO: application log
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="CONVERT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD convert.
    DATA: lt_all_files     TYPE TABLE OF eps2fili,
          lt_file_list     TYPE TABLE OF eps2fili,
          lv_batch_id      TYPE zglif_batch_id,
          lv_prev_batch_id TYPE zglif_batch_id,
          lt_batch_stat    TYPE TABLE OF zglif_batch_stat,
          ls_batch_stat    TYPE zglif_batch_stat.

    FIELD-SYMBOLS:
          &lt;ls_mess_stat&gt; TYPE zglif_mess_stat.

    &quot;Perform parent implementation
    CALL METHOD super-&gt;convert.

    &quot; Get file list for conversion
    CALL FUNCTION &apos;EPS2_GET_DIRECTORY_LISTING&apos;
      EXPORTING
        iv_dir_name            = gs_convcust-sap_folder_source
      TABLES
        dir_list               = lt_all_files
      EXCEPTIONS
        invalid_eps_subdir     = 1
        sapgparam_failed       = 2
        build_directory_failed = 3
        no_authorization       = 4
        read_directory_failed  = 5
        too_many_read_errors   = 6
        empty_directory_list   = 7
        OTHERS                 = 8.
    IF sy-subrc = 0.
      &quot; Get only the entries that are ready for Conversion
      SELECT * &quot;filename, batch_id, message_id, idoc_number, message_status
      FROM zglif_mess_stat
      INTO TABLE @DATA(lt_files_for_processing)
      FOR ALL ENTRIES IN @lt_all_files
      WHERE filename          = @lt_all_files-name
        AND message_status    = @zglif_dispatcher=&gt;gc_00_downloaded.

      TRY.
          lt_file_list  = VALUE #( FOR ls_file_for_processing IN lt_files_for_processing (
              name      = ls_file_for_processing-filename
              size      = lt_all_files[ name = ls_file_for_processing-filename ]-size
              rc        = lt_all_files[ name = ls_file_for_processing-filename ]-rc ) ).
        CATCH cx_sy_itab_line_not_found.
          &quot; #TODO: own error class
      ENDTRY.

      &quot; Do we have any entries to convert?
      DESCRIBE TABLE lt_file_list LINES DATA(lv_lines).
      IF lv_lines = 0.
        WRITE: / |No files for conversion present in folder { gs_convcust-sap_folder_source }|. &quot; #TODO: application log
      ELSE.
        &quot; Start conversion and Save the Message into Message status table
        REFRESH gt_mess_stat.
        zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                                pev_time = DATA(lv_time) ).
        gt_mess_stat = VALUE #( FOR ls_file IN lt_file_list (
            interface_name      = gs_convcust-interface_name
            filename            = ls_file-name
            batch_id            = ls_file-name+3(5)
            message_id          = ls_file-name+9(7)
            message_changed_on  = lv_date
            message_changed_at  = lv_time
            message_changed_by  = sy-uname ) ).

        &quot; Delete the old status entries (unable to update as key is modified)
        DELETE zglif_mess_stat FROM TABLE gt_mess_stat.
        COMMIT WORK AND WAIT.

        &quot; Get the batch number for comparison later
        lv_batch_id = lv_prev_batch_id = lt_file_list[ 1 ]-name+3(5). &quot; No need for try-endtry, we are sure that the lines exist

        CLEAR: lv_date,
               lv_time.
        &quot; Convert the respective files
        LOOP AT lt_file_list INTO gs_file.
          zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = lv_date
                                                  pev_time = lv_time ).
          convert_single_file( ).

          &quot; Check whether a new batch has started. If so, mark down the old batch number
          lv_batch_id = gs_file+3(5).
          IF lv_batch_id &lt;&gt; lv_prev_batch_id.
            ls_batch_stat = VALUE #(
                interface_name      = gs_convcust-interface_name
                batch_id            = lv_prev_batch_id
                batch_changed_on    = lv_date
                batch_changed_at    = lv_time
                batch_changed_by    = sy-uname ).
            APPEND ls_batch_stat TO lt_batch_stat.

            lv_prev_batch_id = lv_batch_id.
          ENDIF.
        ENDLOOP.

        ls_batch_stat = VALUE #(
            interface_name      = gs_convcust-interface_name
            batch_id            = lv_prev_batch_id
            batch_changed_on    = lv_date
            batch_changed_at    = lv_time
            batch_changed_by    = sy-uname ).
        APPEND ls_batch_stat TO lt_batch_stat.

        &quot; Save the modified DB entries
        DELETE zglif_mess_stat FROM TABLE gt_mess_stat.
        INSERT zglif_mess_stat FROM TABLE gt_mess_stat.
        COMMIT WORK AND WAIT.

        &quot; Update batch statuses
        zglif_utility_storage=&gt;update_batch_status( CHANGING pct_batch = lt_batch_stat ).
        MODIFY zglif_batch_stat FROM TABLE lt_batch_stat.
        COMMIT WORK AND WAIT.
      ENDIF.
    ELSEIF sy-subrc = 7.
      WRITE: / |No files ready for conversion in folder { gs_convcust-sap_folder_source } |. &quot; #TODO: application log
    ELSE.
      &quot; #TODO: application log
    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_IDOC" CMPNAME="CONVERT_SINGLE_FILE" VERSION="1" LANGU="E" DESCRIPT="Convert single file from the batch" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD convert_single_file.
    DATA: lv_conv_error TYPE boolean_flg VALUE abap_false.

    &quot; Prepare path variables
    DATA(lv_path_source)        = CONV sapb-sappfad( gs_convcust-sap_folder_source &amp;&amp; gs_file-name ).
    DATA(lv_path_errors)        = CONV sapb-sappfad( gs_convcust-sap_folder_errors &amp;&amp; gs_file-name ).
    DATA(lv_path_processed)     = CONV sapb-sappfad( gs_convcust-sap_folder_processed &amp;&amp; gs_file-name ).

    &quot; Copy files to the Processed folder (if processed successfully, file is deleted)
    CALL FUNCTION &apos;ARCHIVFILE_SERVER_TO_SERVER&apos;
      EXPORTING
        sourcepath       = lv_path_source
        targetpath       = lv_path_processed
*            IMPORTING
*       length           =
      EXCEPTIONS
        error_file       = 1
        no_authorization = 2
        OTHERS           = 3.
    IF sy-subrc = 0.
      WRITE: / |File { gs_file-name } successfully copied into folder { gs_convcust-sap_folder_processed } |. &quot; #TODO: application log
      WRITE: / |If the processing is successful, it will stay there. In case of error, it will be moved to { gs_convcust-sap_folder_errors } |. &quot; #TODO: application log
    ELSE.
      WRITE: / |Error when copying { gs_file-name } into folder { gs_convcust-sap_folder_processed } |. &quot; #TODO: application log
    ENDIF.

    &quot; Start conversion into IDoc
    TRY.
        CALL FUNCTION &apos;EDI_DATA_INCOMING&apos;
          EXPORTING
            pathname = CONV edi_path-pthnam( lv_path_source )
            port     = gs_convcust-sap_port.
      CATCH cx_root. &quot; #TODO: application log and proper error class
        lv_conv_error = abap_true.
        WRITE: / |Error while converting file { gs_file-name } into SAP IDoc. Copying the file into Errors folder.|. &quot; #TODO: application log

        &quot; Copy to Errors folder
        CALL FUNCTION &apos;ARCHIVFILE_SERVER_TO_SERVER&apos;
          EXPORTING
            sourcepath       = lv_path_processed
            targetpath       = lv_path_errors
*            IMPORTING
*           length           =
          EXCEPTIONS
            error_file       = 1
            no_authorization = 2
            OTHERS           = 3.
        IF sy-subrc = 0.
          WRITE: / |File { gs_file-name } successfully copied into folder { gs_convcust-sap_folder_errors } |. &quot; #TODO: application log
        ELSE.
          WRITE: / |Error when copying { gs_file-name } into folder { gs_convcust-sap_folder_errors } |. &quot; #TODO: application log
        ENDIF.
    ENDTRY.

    &quot; Check whether there was any error when converting
    IF lv_conv_error = abap_false
    AND gt_mess_stat[ interface_name = gs_convcust-interface_name batch_id = gs_file+3(5) message_id = gs_file+9(7) ]-idoc_number IS NOT INITIAL.
      TRY.
          gt_mess_stat[ interface_name = gs_convcust-interface_name batch_id = gs_file+3(5) message_id = gs_file+9(7) ]-message_status = zglif_dispatcher=&gt;gc_10_converted.
*          gt_mess_stat[ batch_id = gs_file+3(5) message_id = gs_file+9(7) ]-ready_for_processing = abap_true.

          WRITE: /  |File { gs_file-name } successfully processed into SAP IDoc | &amp;
                    |  { gt_mess_stat[ batch_id = gs_file+3(5) message_id = gs_file+9(7) ]-idoc_number }. |. &quot; #TODO: application log #TODO: IDoc number
        CATCH cx_sy_itab_line_not_found.
      ENDTRY.
    ELSE.
      TRY.
          gt_mess_stat[ interface_name = gs_convcust-interface_name batch_id = gs_file+3(5) message_id = gs_file+9(7) ]-message_status = zglif_dispatcher=&gt;gc_11_conversion_error.
          WRITE: /  |File { gs_file-name } could not be processed into SAP IDoc | &amp;
                    |  { gt_mess_stat[ batch_id = gs_file+3(5) message_id = gs_file+9(7) ]-idoc_number }. |. &quot; #TODO: application log #TODO: IDoc number
        CATCH cx_sy_itab_line_not_found.
      ENDTRY.
    ENDIF.

    CLEAR lv_path_source.
    CLEAR lv_path_errors.
    CLEAR lv_path_processed.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_IDOC" CMPNAME="GET_BADI_DATA" VERSION="1" LANGU="E" DESCRIPT="Update data from BAdI" EXPOSURE="2" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_IDOC" CMPNAME="GET_BADI_DATA" SCONAME="PES_FILE" VERSION="1" LANGU="E" DESCRIPT="List of Files" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="EPS2FILI"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_IDOC" CMPNAME="GET_BADI_DATA" SCONAME="PET_MESS_STAT" VERSION="1" LANGU="E" DESCRIPT="GLIF: Message status table" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_MESS_STAT_TT"/>
   <source>METHOD get_badi_data.
    &quot; Provide data for BAdI implementation ZGLIF_IDOC_CREATION
    &quot; Method IF_EX_IDOC_DATA_INSERT~FILL
    pes_file      = gs_file.
    pet_mess_stat = gt_mess_stat.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_IDOC" CMPNAME="SET_BADI_DATA" VERSION="1" LANGU="E" DESCRIPT="Provide data needed for BAdI" EXPOSURE="2" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_IDOC" CMPNAME="SET_BADI_DATA" SCONAME="PIT_MESS_STAT" VERSION="1" LANGU="E" DESCRIPT="GLIF: Message status table" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_MESS_STAT_TT"/>
   <source>METHOD set_badi_data.
    &quot; Get updated data from BAdI implementation ZGLIF_IDOC_CREATION
    &quot; Method IF_EX_IDOC_DATA_INSERT~FILL
    gt_mess_stat = pit_mess_stat.
  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" VERSION="1" LANGU="E" DESCRIPT="Convertor for csv file to SAP database" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZGLIF_SUPERCONVERTOR">
  <types CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="TY_CONVERT_TO_MESS_S" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="3 " SRCCOLUMN1="11 " SRCROW2="8 " SRCCOLUMN2="37 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_convert_to_mess_s,
             batch_id        TYPE zglif_batch_id,
             message_id      TYPE zglif_message_id,
             amount_document TYPE wrbtr,
             currency        TYPE waers,
           END OF ty_convert_to_mess_s
"/>
  <types CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="TY_CONVERT_TO_MESS_T" VERSION="1" LANGU="E" EXPOSURE="1" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="9 " SRCCOLUMN1="11 " SRCROW2="9 " SRCCOLUMN2="82 " TYPESRC_LENG="0 " TYPESRC="ty_convert_to_mess_t TYPE TABLE OF ty_convert_to_mess_s WITH DEFAULT KEY
"/>
  <types CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="TY_BOOK_CSV_S" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="6 " SRCCOLUMN1="11 " SRCROW2="32 " SRCCOLUMN2="30 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_book_csv_s,
             batch_id        TYPE zglif_batch_id,
             message_id      TYPE zglif_message_id,
             line_item       TYPE zglif_item,
             company_code    TYPE bukrs,
             document_type   TYPE blart,
             document_date   TYPE dats,
             posting_date    TYPE dats,
             period          TYPE monat,
             ledger          TYPE fins_ledger,
             header_text     TYPE bktxt,
             debit_credit    TYPE shkzg,
             gl_account      TYPE hkont,
             currency        TYPE waers,
             amount_document TYPE e1fiseg-wrbtr,
             amount_local    TYPE e1fiseg-dmbtr,
             value_date      TYPE valut,
             segment         TYPE fb_segment,
             cost_center     TYPE kostl,
             order_number    TYPE aufnr,
             profit_center   TYPE prctr,
             item_text       TYPE sgtxt,
             assigment       TYPE dzuonr,
             reference1      TYPE xref1,
             reference2      TYPE xref2,
             reference3      TYPE xref3,
           END OF ty_book_csv_s
"/>
  <types CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="TY_BOOK_CSV_T" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="33 " SRCCOLUMN1="11 " SRCROW2="33 " SRCCOLUMN2="68 " TYPESRC_LENG="0 " TYPESRC="ty_book_csv_t TYPE TABLE OF ty_book_csv_s WITH DEFAULT KEY
"/>
  <types CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="TY_BOOK_CSV_TAX_S" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="3 " TYPTYPE="4" SRCROW1="35 " SRCCOLUMN1="11 " SRCROW2="72 " SRCCOLUMN2="34 " TYPESRC_LENG="0 " TYPESRC='BEGIN OF ty_book_csv_tax_s,
             batch_id        TYPE zglif_batch_id,
             message_id      TYPE zglif_message_id,
             line_item       TYPE zglif_item,
             company_code    TYPE bukrs,
             document_type   TYPE blart,
             document_date   TYPE n LENGTH 8,
             posting_date    TYPE n LENGTH 8, &quot;dats,
             period          TYPE monat,
             ledger          TYPE fins_ledger,
             header_text     TYPE bktxt,
             debit_credit    TYPE shkzg,
             gl_account      TYPE hkont,
             currency        TYPE waers,
             amount_document TYPE e1fiseg-wrbtr,
             amount_local    TYPE e1fiseg-dmbtr,
             value_date      TYPE n LENGTH 8, &quot;valut,
             segment         TYPE fb_segment,
             cost_center     TYPE kostl,
             order_number    TYPE aufnr,
             profit_center   TYPE prctr,
             item_text       TYPE sgtxt,
             assigment       TYPE dzuonr,
             reference1      TYPE xref1,
             reference2      TYPE xref2,
             reference3      TYPE xref3,
             vendor          TYPE lifnr,
             name            TYPE name1_gp,
             tax_no_1        TYPE stcd1,
             street          TYPE stras_gp,
             city            TYPE ort01_gp,
             mwskz           TYPE mwskz,
             gross_net       TYPE zglif_gross_net,
             tax_amount      TYPE e1fiseg-fwbas,
             cust_vend       TYPE zbookng_cust_vend,
             zfbdt           TYPE n LENGTH 8, &quot;zbookng_csv_tax-zfbdt,
             vbund           TYPE zbookng_csv_tax-vbund,
           END OF ty_book_csv_tax_s
'/>
  <types CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="TY_BOOK_CSV_TAX_T" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="4 " TYPTYPE="4" SRCROW1="73 " SRCCOLUMN1="11 " SRCROW2="73 " SRCCOLUMN2="76 " TYPESRC_LENG="0 " TYPESRC="ty_book_csv_tax_t TYPE TABLE OF ty_book_csv_tax_s WITH DEFAULT KEY
"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool>
   <language SPRAS="E">
    <textElement ID="I" KEY="001" ENTRY="No Content Available" LENGTH="40 "/>
    <textElement ID="I" KEY="002" ENTRY="File successfully converted" LENGTH="54 "/>
   </language>
  </textPool>
  <attribute CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="GS_CONVCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Convertor Customization table" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_CONVCUST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="GS_FILE" VERSION="1" LANGU="E" DESCRIPT="Filename of currently processed file" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EPS2FILI" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="GT_MESS_STAT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="77 " SRCCOLUMN1="6 " SRCROW2="77 " SRCCOLUMN2="49 " TYPESRC_LENG="46 " TYPESRC="gt_mess_stat TYPE TABLE OF   zglif_mess_stat
"/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="MV_PATH_INTERFACE" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZBOOKNG_CSV_AUTO_FOLDER" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <inheritance CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" REFCLSNAME="ZGLIF_SUPERCONVERTOR" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" REFCLSNAME="ZGLIF_SUPERCONVERTOR" VERSION="1" MTDNAME="CONVERT" EXPOSURE="2"/>
  </inheritance>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="CONSTRUCTOR" SCONAME="PIS_CONVCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Convertor&apos;s customization table" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_CONVCUST"/>
   <source>METHOD constructor.
    &quot; Call the constructor of the Superclass: zglif_superconvertor
    super-&gt;constructor( ).
    &quot; take over the Convertor customization structure
    gs_convcust = pis_convcust.

    DATA(lv_calling_report) = sy-cprog.
    DATA(lv_fieldname) = |({ lv_calling_report })P_INTERF|.
    ASSIGN (lv_fieldname) TO FIELD-SYMBOL(&lt;lv_interface&gt;).
    IF sy-subrc = 0.
      mv_path_interface = &lt;lv_interface&gt;.
    ENDIF.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="CONVERT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD convert.
**********************************************************************
* Insert the conversion to this method
**********************************************************************
* Please take inspiration in class zglif_convertor_idoc~convert
* and develop this conversion in the same manner
*
* Thank you.
**********************************************************************
*{(ADD)/Equine/EG-ABAP/EQ_FAOK/22092017/Cause:
    DATA: lt_all_files       TYPE TABLE OF eps2fili,
          lt_files_with_path TYPE TABLE OF eps2fili,
          lt_file_list       TYPE TABLE OF eps2fili,
          lv_batch_id        TYPE zglif_batch_id,
          lv_prev_batch_id   TYPE zglif_batch_id,
          lt_batch_stat      TYPE TABLE OF zglif_batch_stat,
          ls_batch_stat      TYPE zglif_batch_stat.

    DATA: lv_fname     TYPE eps2filnam, lv_flen TYPE i,
          lv_file_path TYPE string.

    FIELD-SYMBOLS:
          &lt;ls_mess_stat&gt; TYPE zglif_mess_stat.

    &quot;Perform parent implementation
    CALL METHOD super-&gt;convert.


    lv_file_path = get_physical_path( iv_logical = gs_convcust-sap_folder_source ).



    &quot; Get file list for conversion
    CALL FUNCTION &apos;EPS2_GET_DIRECTORY_LISTING&apos;
      EXPORTING
        iv_dir_name            = CONV eps2filnam( lv_file_path ) &quot;gs_convcust-sap_folder_source
      TABLES
        dir_list               = lt_all_files
      EXCEPTIONS
        invalid_eps_subdir     = 1
        sapgparam_failed       = 2
        build_directory_failed = 3
        no_authorization       = 4
        read_directory_failed  = 5
        too_many_read_errors   = 6
        empty_directory_list   = 7
        OTHERS                 = 8.
    IF sy-subrc = 0.
      &quot; Get only the entries that are ready for Conversion

      IF mv_path_interface IS NOT INITIAL.
        lt_files_with_path = VALUE #( FOR ls_files IN lt_all_files ( name = |{ mv_path_interface }/{ ls_files-name }| ) ).
      ELSE.
        lt_files_with_path = lt_all_files.
      ENDIF.

      SELECT filename &quot;* &quot;filename, batch_id, message_id, idoc_number, message_status
      FROM zglif_mess_stat
      JOIN zglif_batch_stat ON zglif_batch_stat~interface_name = zglif_mess_stat~interface_name AND zglif_batch_stat~batch_id = zglif_mess_stat~batch_id
      FOR ALL ENTRIES IN @lt_files_with_path
      WHERE zglif_batch_stat~interface_name    = @gs_convcust-interface_name
        AND zglif_batch_stat~batch_changed_by  = @sy-uname  &quot; convert only my users data
        AND zglif_mess_stat~filename          = @lt_files_with_path-name
        AND ( zglif_mess_stat~message_status = @zglif_dispatcher=&gt;gc_00_downloaded OR zglif_mess_stat~message_status = @zglif_dispatcher=&gt;gc_50_corrected )
        AND ( zglif_batch_stat~batch_status = @zglif_dispatcher=&gt;gc_00_downloaded OR zglif_batch_stat~batch_status = @zglif_dispatcher=&gt;gc_50_corrected )
        INTO TABLE @DATA(lt_files_for_processing).

      IF sy-subrc &lt;&gt; 0.
        WRITE / |No batch in correct status found|.
      ENDIF.

      LOOP AT lt_all_files REFERENCE INTO DATA(ls_all_files).

        LOOP AT lt_files_for_processing INTO DATA(ls_files_for_processing) WHERE filename CS ls_all_files-&gt;name.
          APPEND INITIAL LINE TO lt_file_list ASSIGNING FIELD-SYMBOL(&lt;ls_file_list&gt;).
          &lt;ls_file_list&gt;-name = ls_all_files-&gt;name.
          &lt;ls_file_list&gt;-size = ls_all_files-&gt;size.
          &lt;ls_file_list&gt;-rc = ls_all_files-&gt;rc.
          EXIT.
        ENDLOOP.

      ENDLOOP.

*      TRY.
*          lt_file_list  = VALUE #( FOR ls_file_for_processing IN lt_files_for_processing (
*              name      = ls_file_for_processing-filename
*              size      = lt_all_files[ name = ls_file_for_processing-filename ]-size
*              rc        = lt_all_files[ name = ls_file_for_processing-filename ]-rc ) ).
*        CATCH cx_sy_itab_line_not_found.
*          &quot; #TODO: own error class
*      ENDTRY.

      &quot;Only Convert .CSV
      LOOP AT lt_file_list INTO gs_file.
        lv_fname = gs_file-name.
        CONDENSE : lv_fname.
        TRANSLATE lv_fname TO UPPER CASE.
        lv_flen = strlen( lv_fname ).
        SUBTRACT 4 FROM lv_flen.

        IF lv_fname+lv_flen(4) NE &apos;.CSV&apos;.
          DELETE lt_file_list WHERE name EQ gs_file-name.
        ENDIF.
      ENDLOOP.

      &quot; Do we have any entries to convert?
      DESCRIBE TABLE lt_file_list LINES DATA(lv_lines).
      IF lv_lines = 0.
        WRITE: / |No files for conversion present in folder { gs_convcust-sap_folder_source }|. &quot; #TODO: application log
      ELSE.
        &quot; Start conversion and Save the Message into FTP Feeders Message status table
        REFRESH gt_mess_stat.
        zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                                pev_time = DATA(lv_time) ).
        gt_mess_stat = VALUE #( FOR ls_file IN lt_file_list (
            interface_name      = gs_convcust-interface_name
            filename            = COND #( when mv_path_interface IS NOT INITIAL THEN |{ mv_path_interface }/{ ls_file-name }| ELSE ls_file-name )
            batch_id            = ls_file-name+4(10)
*            message_id          = ls_file-name+14(10)
            message_changed_on  = lv_date
            message_changed_at  = lv_time
            message_changed_by  = sy-uname ) ).

        &quot; Delete the old status entries (unable to update as key is modified)
        DELETE zglif_mess_stat FROM TABLE gt_mess_stat.
        COMMIT WORK AND WAIT.
        CLEAR: gt_mess_stat. &quot; we need to clear this because here one file is whole batch so we did not have message_id at the beginning.

        &quot; Get the batch number for comparison later
*        lv_batch_id = lv_prev_batch_id = lt_file_list[ 1 ]-name+4(10). &quot; No need for try-endtry, we are sure that the lines exist

        CLEAR: lv_date,
               lv_time.
        &quot; Convert the respective files
        LOOP AT lt_file_list INTO gs_file.

          zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = lv_date
                                                  pev_time = lv_time ).

**********************************************************************
          convert_single_file( ). &quot; in this Vietnam screnario the one file is whole one batch containing several messages
**********************************************************************


          &quot; Check whether a new batch has started. If so, mark down the old batch number
          lv_batch_id = gs_file-name+4(10).
*          IF lv_batch_id &lt;&gt; lv_prev_batch_id.
          ls_batch_stat = VALUE #(
              interface_name      = gs_convcust-interface_name
              batch_id            = lv_batch_id
              batch_changed_on    = lv_date
              batch_changed_at    = lv_time
              batch_changed_by    = sy-uname ).
          APPEND ls_batch_stat TO lt_batch_stat.

          INSERT zglif_mess_stat FROM TABLE gt_mess_stat.
          COMMIT WORK AND WAIT.

          &quot; Update batch statuses
          zglif_utility_storage=&gt;update_batch_status( CHANGING pct_batch = lt_batch_stat ).
          MODIFY zglif_batch_stat FROM TABLE lt_batch_stat.
          COMMIT WORK AND WAIT.

          CLEAR: lt_batch_stat, gt_mess_stat.

*            lv_prev_batch_id = lv_batch_id.
*          ENDIF.
        ENDLOOP.

*        ls_batch_stat = VALUE #(
*            interface_name      = gs_convcust-interface_name
*            batch_id            = lv_prev_batch_id
*            batch_changed_on    = lv_date
*            batch_changed_at    = lv_time
*            batch_changed_by    = sy-uname ).
*        APPEND ls_batch_stat TO lt_batch_stat.

        &quot; Save the modified DB entries
*        DELETE zglif_mess_stat FROM TABLE gt_mess_stat.
*        INSERT zglif_mess_stat FROM TABLE gt_mess_stat.
*        COMMIT WORK AND WAIT.
*
*        &quot; Update batch statuses
*        zglif_utility_storage=&gt;update_batch_status( CHANGING pct_batch = lt_batch_stat ).
*        MODIFY zglif_batch_stat FROM TABLE lt_batch_stat.
*        COMMIT WORK AND WAIT.
      ENDIF.
    ELSEIF sy-subrc = 7.
      WRITE: / |No files ready for conversion in folder { gs_convcust-sap_folder_source } |. &quot; #TODO: application log
    ELSE.
      &quot; #TODO: application log
    ENDIF.

*}(END OF ADD)/Equine/EG-ABAP/EQ_FAOK/22092017
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="CONVERT_DATA_TO_MESSAGES" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="CONVERT_DATA_TO_MESSAGES" SCONAME="IT_PARSED_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_CONVERT_TO_MESS_T"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="CONVERT_DATA_TO_MESSAGES" SCONAME="RV_CONVERSION_FAILED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD convert_data_to_messages.

    DATA: lv_currency TYPE waers.


    &quot; Parsed data
    LOOP AT it_parsed_data  INTO DATA(ls_one_message)
                            GROUP BY ( batch_id = ls_one_message-batch_id
                                       message_id = ls_one_message-message_id
                             )  INTO DATA(lt_single_message).



      WRITE: / |Batch { lt_single_message-batch_id }, Message { lt_single_message-message_id } converted into table|. &quot; #TODO: application log

      LOOP AT it_parsed_data TRANSPORTING NO FIELDS WHERE batch_id = lt_single_message-batch_id
                                                       AND message_id = lt_single_message-message_id
                                                       AND amount_document &lt;&gt; 0.
        EXIT.
      ENDLOOP.
      IF sy-subrc = 0.
        DATA(lv_message_status) = zglif_dispatcher=&gt;gc_10_converted.
      ELSE.
        lv_message_status = zglif_dispatcher=&gt;gc_98_canceled_zero_values.
      ENDIF.

      CLEAR lv_currency.
      LOOP AT GROUP lt_single_message INTO ls_one_message.
        IF lv_currency IS INITIAL.
          lv_currency = ls_one_message-currency.
        ENDIF.
        IF lv_currency &lt;&gt; ls_one_message-currency.
          lv_message_status = zglif_dispatcher=&gt;gc_11_conversion_error. &quot; useless, but okay... will be deleted after
          rv_conversion_failed = abap_true.
          WRITE / |*************************************************|.
          WRITE / |Message { ls_one_message-message_id } contains error. Not unique currency.|.
          WRITE / |*************************************************|.
        ENDIF.

      ENDLOOP.



      zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                              pev_time = DATA(lv_time) ).

      APPEND VALUE zglif_mess_stat( interface_name = gs_convcust-interface_name
                                    batch_id = lt_single_message-batch_id
                                    message_id = lt_single_message-message_id
                                    filename = COND #( when mv_path_interface IS NOT INITIAL THEN |{ mv_path_interface }/{ gs_file-name }| ELSE gs_file-name )
*                                    idoc_number =
                                    message_status = lv_message_status
                                    message_changed_on = lv_date
                                    message_changed_at = lv_time
                                    message_changed_by = sy-uname
                                        ) TO gt_mess_stat.


    ENDLOOP.




  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="CONVERT_SINGLE_FILE" VERSION="1" LANGU="E" DESCRIPT="Convert single file from the batch" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD convert_single_file.
**********************************************************************
* Insert the conversion to this method
**********************************************************************
* Please take inspiration in class zglif_convertor_idoc~convert_single_file
* and develop this conversion in the same manner
*
* Thank you.
**********************************************************************
*{(ADD)/Equine/EG-ABAP/EQ_FAOK/22092017/Cause:
    DATA: lv_conv_error TYPE boolean_flg VALUE abap_false,
          lv_subrc      TYPE subrc, lv_message TYPE bapi_msg,
          ls_mess_stat  TYPE zglif_mess_stat,
          lv_string     TYPE string,
          lt_string     TYPE TABLE OF string.

    &quot; Prepare path variables

    DATA(lv_path_source)        = get_physical_path( iv_logical = gs_convcust-sap_folder_source iv_filename = gs_file-name ). &quot;CONV sapb-sappfad( gs_convcust-sap_folder_source &amp;&amp; gs_file-name ).
    DATA(lv_path_errors)        = get_physical_path( iv_logical = gs_convcust-sap_folder_errors iv_filename = gs_file-name ).
    DATA(lv_path_processed)     = get_physical_path( iv_logical = gs_convcust-sap_folder_processed iv_filename = gs_file-name ).


    &quot; Copy files to the Processed folder (if processed successfully, file is deleted)

    TRY.
        zglif_utility_storage=&gt;copy_file_on_server(
          EXPORTING
            iv_source_path = lv_path_source
            iv_target_path = lv_path_processed
        ).

        WRITE: / |File { gs_file-name } successfully copied into folder { gs_convcust-sap_folder_processed } |. &quot; #TODO: application log
        WRITE: / |If the processing is successful, it will stay there. In case of error, it will be moved to { gs_convcust-sap_folder_errors } |. &quot; #TODO: application log
      CATCH zcx_generic_exception INTO DATA(lo_exception).
        WRITE: / lo_exception-&gt;get_message( ).
        WRITE: / |Error when copying { gs_file-name } into folder { gs_convcust-sap_folder_processed } |. &quot; #TODO: application log
    ENDTRY.


    TRY .

        OPEN DATASET lv_path_source FOR INPUT IN TEXT MODE ENCODING DEFAULT WITH SMART LINEFEED IGNORING CONVERSION ERRORS MESSAGE lv_message.
        IF sy-subrc = 0.
          DO.
            READ DATASET lv_path_source INTO lv_string.
            IF sy-subrc = 0.
              APPEND lv_string TO lt_string.
            ELSE.
              EXIT.
            ENDIF.
          ENDDO.

          CLOSE DATASET lv_path_source.
          DELETE DATASET lv_path_source.
        ENDIF.

        DELETE lt_string WHERE table_line IS INITIAL.

        TRY.

            CASE gs_convcust-interface_name.
**********************************************************************
              WHEN zcl_bookng_tools=&gt;mc_csv_interface.

                DATA(lt_parsed_data) = parse_data( it_data = lt_string ).

                TYPES: ty_bookng_data_t TYPE TABLE OF zbookng_csv_data WITH DEFAULT KEY.
                zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                                        pev_time = DATA(lv_time) ).
                DATA(lt_zbookng_csv_data) = VALUE ty_bookng_data_t( FOR ls_parsed_data IN lt_parsed_data (
                                 VALUE #( BASE CORRESPONDING #( ls_parsed_data )
                                              message_status = zglif_dispatcher=&gt;gc_10_converted
                                              changed_on = lv_date
                                              changed_at = lv_time
                                              changed_by = sy-uname ) ) ).

                &quot; Need to have batchID, MessageID and Amount_document fields
                lv_conv_error = convert_data_to_messages( it_parsed_data = CORRESPONDING #( lt_parsed_data ) ).

                IF lv_conv_error = abap_false.
                  MODIFY zbookng_csv_data FROM TABLE lt_zbookng_csv_data.
                ENDIF.

**********************************************************************
              WHEN zcl_bookng_tools=&gt;mc_csv_tax_interface.
                &quot; new tax interface


                DATA(lt_parsed_data_tax) = parse_data_tax( it_data = lt_string ).

                TYPES: ty_tax_data_t TYPE TABLE OF zbookng_csv_tax WITH DEFAULT KEY.
                zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = lv_date
                                                        pev_time = lv_time ).
                DATA(lt_zbookng_tax_data) = VALUE ty_tax_data_t( FOR ls_parsed_data_tax IN lt_parsed_data_tax (
                                 VALUE #( BASE CORRESPONDING #( ls_parsed_data_tax )
                                              message_status = zglif_dispatcher=&gt;gc_10_converted
                                              changed_on = lv_date
                                              changed_at = lv_time
                                              changed_by = sy-uname ) ) ).

                &quot; Need to have batchID, MessageID and Amount_document fields
                lv_conv_error = convert_data_to_messages( it_parsed_data = CORRESPONDING #( lt_parsed_data_tax ) ).

                IF lv_conv_error = abap_false.
                  MODIFY zbookng_csv_tax FROM TABLE lt_zbookng_tax_data.
                ENDIF.
**********************************************************************
              WHEN zcl_bookng_tools=&gt;mc_csv_auto.

                DATA(lt_parsed_data_auto) = parse_data_tax( it_data = lt_string ).

                TYPES: ty_auto_data_t TYPE TABLE OF zbookng_csv_auto WITH DEFAULT KEY.
                zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = lv_date
                                                        pev_time = lv_time ).
                DATA(lt_zbookng_auto_data) = VALUE ty_auto_data_t( FOR ls_parsed_auto IN lt_parsed_data_auto (
                                 VALUE #( BASE CORRESPONDING #( ls_parsed_auto )
                                              folder = mv_path_interface
                                              message_status = zglif_dispatcher=&gt;gc_10_converted
                                              changed_on = lv_date
                                              changed_at = lv_time
                                              changed_by = sy-uname ) ) ).

                &quot; Need to have batchID, MessageID and Amount_document fields
                lv_conv_error = convert_data_to_messages( it_parsed_data = CORRESPONDING #( lt_zbookng_auto_data ) ).

                IF lv_conv_error = abap_false.
                  MODIFY zbookng_csv_auto FROM TABLE lt_zbookng_auto_data.
                ENDIF.
            ENDCASE.
**********************************************************************



          CATCH zcx_generic_exception.
            lv_conv_error = abap_true.
        ENDTRY.




      CATCH cx_root INTO DATA(lo_cx_root).
        WRITE / &apos;*****************************&apos;.
        WRITE / lo_cx_root-&gt;get_text( ).
        WRITE / &apos;*****************************&apos;.
        lv_conv_error = abap_true.

    ENDTRY.

    &quot; Check whether there was any error when converting
    IF lv_conv_error EQ abap_true.

      WRITE: / |Error while converting file { gs_file-name } into SAP table. Copying the file into Errors folder.|. &quot; #TODO: application log

      TRY.
          &quot; Copy to Errors folder
          zglif_utility_storage=&gt;copy_file_on_server(
            EXPORTING
              iv_source_path = lv_path_processed
              iv_target_path = lv_path_errors
          ).

          zglif_utility_storage=&gt;delete_file_on_server( lv_path_processed ).
          WRITE: / |File { gs_file-name } successfully copied into folder { gs_convcust-sap_folder_errors } |. &quot; #TODO: application log
        CATCH zcx_generic_exception INTO lo_exception.
          WRITE: / lo_exception-&gt;get_message( ).
          WRITE: / |Error when copying { gs_file-name } into folder { gs_convcust-sap_folder_errors } |. &quot; #TODO: application log
      ENDTRY.

      zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = lv_date
                                              pev_time = lv_time ).
      ls_mess_stat-message_status = zglif_dispatcher=&gt;gc_11_conversion_error.
      ls_mess_stat-batch_id = gs_file-name+4(10).
      ls_mess_stat-interface_name = gs_convcust-interface_name.
      ls_mess_stat-message_changed_on = lv_date.
      ls_mess_stat-message_changed_at = lv_time.
      ls_mess_stat-message_changed_by = sy-uname.
      MODIFY zglif_mess_stat FROM ls_mess_stat.
      COMMIT WORK.

      CLEAR gt_mess_stat. &quot; Whole file is wrong so do not put anything but one message in zglif_mess_stat


      WRITE: /  |File { gs_file-name } could not be converted |. &quot; &amp;
      &quot;|  { gt_mess_stat[ batch_id = gs_file+3(5) message_id = gs_file+9(7) ]-idoc_number }. |. &quot; #TODO: application log #TODO: IDoc number

    ELSE.
*      ls_mess_stat-message_status = zglif_dispatcher=&gt;gc_10_converted.
      WRITE: /  |File { gs_file-name } successfully converted |.&quot; &amp;
      &quot;|  { gt_mess_stat[ batch_id = gs_file+3(5) message_id = gs_file+9(7) ]-idoc_number }. |. &quot; #TODO: application log #TODO: IDoc number

    ENDIF.



  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="GET_PHYSICAL_PATH" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="GET_PHYSICAL_PATH" SCONAME="IV_LOGICAL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="PATHINTERN"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="GET_PHYSICAL_PATH" SCONAME="IV_FILENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EPS2FILNAM" PAROPTIONL="X"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="GET_PHYSICAL_PATH" SCONAME="RV_FILE_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD get_physical_path.

    DATA: lv_filename     TYPE eps2filnam,
          lv_logical_path TYPE pathintern.

    IF iv_logical CS &apos;/&apos;.
      SPLIT iv_logical AT &apos;/&apos; INTO TABLE DATA(lt_split).
      TRY.
          lv_logical_path = lt_split[ 1 ].
        CATCH cx_sy_itab_line_not_found.
      ENDTRY.
    ELSE.
      lv_logical_path = iv_logical.
    ENDIF.

    IF iv_filename IS NOT INITIAL.
      lv_filename = iv_filename.
    ELSE.
      lv_filename = &apos;X&apos;.
    ENDIF.

    IF lines( lt_split ) &gt; 1.
      lv_filename = |{ lt_split[ 2 ] }/{ lv_filename }|.
    ENDIF.


    IF mv_path_interface IS NOT INITIAL.
      lv_filename = |{ mv_path_interface }/{ lv_filename }|.
    ENDIF.


    CALL FUNCTION &apos;FILE_GET_NAME_USING_PATH&apos;
      EXPORTING
        logical_path               = lv_logical_path &quot;&apos;Z_GLIF_BOOKNG&apos; &quot;&quot;gs_convcust-sap_folder_source
        file_name                  = lv_filename
        eleminate_blanks           = abap_false
      IMPORTING
        file_name_with_path        = rv_file_path
      EXCEPTIONS
        path_not_found             = 1
        missing_parameter          = 2
        operating_system_not_found = 3
        file_system_not_found      = 4
        OTHERS                     = 5.
    IF sy-subrc = 1.
      &quot; path not found, probably used physical path, return it
      rv_file_path = iv_logical.
    ELSEIF sy-subrc &lt;&gt; 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 INTO DATA(lv_message).
      WRITE: / lv_message.
      RETURN.
    ENDIF.

    IF iv_filename IS INITIAL.

      DATA(lv_len) = strlen( rv_file_path ).
      SUBTRACT 1 FROM lv_len.
      rv_file_path = rv_file_path(lv_len).    &quot; get rid of X at the end

    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="PARSE_DATA" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="PARSE_DATA" SCONAME="IT_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRINGTAB"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="PARSE_DATA" SCONAME="RT_PARSED_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="TY_BOOK_CSV_T"/>
   <exception CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="PARSE_DATA" SCONAME="ZCX_GENERIC_EXCEPTION" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD parse_data.
    CONSTANTS: lc_delimit_comma   TYPE c VALUE &apos;,&apos;,
               lc_delimit_semicol TYPE c VALUE &apos;;&apos;.

    DATA: lv_delimit  TYPE c,
          lv_num6     TYPE n LENGTH 6,
          lv_batch_id TYPE zglif_batch_id.

    lv_batch_id = gs_file-name+4(10).
    lv_batch_id = |{ lv_batch_id ALPHA = IN }|.



    LOOP AT it_data REFERENCE INTO DATA(ls_data_string).
      APPEND INITIAL LINE TO rt_parsed_data ASSIGNING FIELD-SYMBOL(&lt;ls_parsed_data&gt;).

      IF ls_data_string-&gt;* CS &apos;;&apos;.
        lv_delimit = lc_delimit_semicol.
      ELSE.
        lv_delimit = lc_delimit_comma.
      ENDIF.

      SPLIT ls_data_string-&gt;* AT lv_delimit INTO
          &lt;ls_parsed_data&gt;-batch_id
          &lt;ls_parsed_data&gt;-message_id
          &lt;ls_parsed_data&gt;-line_item
          &lt;ls_parsed_data&gt;-company_code
          &lt;ls_parsed_data&gt;-document_type
          &lt;ls_parsed_data&gt;-document_date
          &lt;ls_parsed_data&gt;-posting_date
          &lt;ls_parsed_data&gt;-period
          &lt;ls_parsed_data&gt;-ledger
          &lt;ls_parsed_data&gt;-header_text
          &lt;ls_parsed_data&gt;-debit_credit
          &lt;ls_parsed_data&gt;-gl_account
          &lt;ls_parsed_data&gt;-currency
          &lt;ls_parsed_data&gt;-amount_document
          &lt;ls_parsed_data&gt;-amount_local
          &lt;ls_parsed_data&gt;-value_date
          &lt;ls_parsed_data&gt;-segment
          &lt;ls_parsed_data&gt;-cost_center
          &lt;ls_parsed_data&gt;-order_number
          &lt;ls_parsed_data&gt;-profit_center
          &lt;ls_parsed_data&gt;-item_text
          &lt;ls_parsed_data&gt;-assigment
          &lt;ls_parsed_data&gt;-reference1
          &lt;ls_parsed_data&gt;-reference2
          &lt;ls_parsed_data&gt;-reference3
          .

      &quot; to properly convert string to numc6.
      ADD &lt;ls_parsed_data&gt;-line_item TO lv_num6.
      &lt;ls_parsed_data&gt;-line_item = lv_num6.
      CLEAR lv_num6.

      ADD &lt;ls_parsed_data&gt;-period TO lv_num6.
      &lt;ls_parsed_data&gt;-period = lv_num6.
      CLEAR lv_num6.


      &lt;ls_parsed_data&gt;-batch_id = |{ &lt;ls_parsed_data&gt;-batch_id ALPHA = IN }|.
      &lt;ls_parsed_data&gt;-message_id = |{ &lt;ls_parsed_data&gt;-message_id ALPHA = IN }|.
      &lt;ls_parsed_data&gt;-gl_account = |{ &lt;ls_parsed_data&gt;-gl_account ALPHA = IN }|.


      IF &lt;ls_parsed_data&gt;-batch_id &lt;&gt; lv_batch_id.
        WRITE / |Data inconsistency. Batch ID in file data is different that in filename|.
        zcx_generic_exception=&gt;raise( |Data inconsistency. Batch ID in file data is different that in filename| ).
      ENDIF.

    ENDLOOP.

    SORT rt_parsed_data BY batch_id message_id line_item.


  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="PARSE_DATA_TAX" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="PARSE_DATA_TAX" SCONAME="IT_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRINGTAB"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="PARSE_DATA_TAX" SCONAME="RT_PARSED_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="TY_BOOK_CSV_TAX_T"/>
   <exception CLSNAME="ZGLIF_CONVERTOR_CSV_BAPI" CMPNAME="PARSE_DATA_TAX" SCONAME="ZCX_GENERIC_EXCEPTION" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD parse_data_tax.
    CONSTANTS: lc_delimit_comma   TYPE c VALUE &apos;,&apos;,
               lc_delimit_semicol TYPE c VALUE &apos;;&apos;.

    DATA: lv_delimit  TYPE c,
          lv_num6     TYPE n LENGTH 6,
          lv_batch_id TYPE zglif_batch_id,
          lt_data     TYPE truxs_t_text_data.

    DATA: lv_index TYPE i,
          lv_group TYPE abap_bool,
          lv_len   TYPE i.

    FIELD-SYMBOLS: &lt;lv_any&gt; TYPE any.

    lv_batch_id = gs_file-name+4(10).
    lv_batch_id = |{ lv_batch_id ALPHA = IN }|.

*    lt_data = it_data.
*
*    IF lt_data[ 1 ] CS lc_delimit_semicol.
*      lv_delimit = lc_delimit_semicol.
*    ELSE.
*      lv_delimit = lc_delimit_comma.
*    ENDIF.
*
*    CALL FUNCTION &apos;TEXT_CONVERT_TEX_TO_SAP&apos;
*      EXPORTING
*        i_field_seperator    = lv_delimit
**       i_line_header        =
*        i_tab_raw_data       = lt_data
**       i_filename           =
*      TABLES
*        i_tab_converted_data = rt_parsed_data
*      EXCEPTIONS
*        conversion_failed    = 1
*        OTHERS               = 2.
*    IF sy-subrc &lt;&gt; 0.
*      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
*    ENDIF.


**********************************************************************



    LOOP AT it_data REFERENCE INTO DATA(ls_data_string).
      APPEND INITIAL LINE TO rt_parsed_data ASSIGNING FIELD-SYMBOL(&lt;ls_parsed_data&gt;).

      IF ls_data_string-&gt;* CS &apos;;&apos;.
        lv_delimit = lc_delimit_semicol.
      ELSE.
        lv_delimit = lc_delimit_comma.
      ENDIF.

      SPLIT ls_data_string-&gt;* AT lv_delimit INTO TABLE DATA(lt_split).

      CLEAR lv_index.

      LOOP AT lt_split INTO DATA(lv_split).

        lv_len = strlen( lv_split ).

        IF lv_len = 0.
          ADD 1 TO lv_index.
          CONTINUE.
        ENDIF.


        IF lv_group = abap_true.
          &lt;lv_any&gt; = &lt;lv_any&gt; &amp;&amp; lv_delimit &amp;&amp; lv_split.
        ENDIF.


        IF lv_split(1) = &apos;&quot;&apos;.

          lv_group = abap_true.
          ADD 1 TO lv_index.
          ASSIGN COMPONENT lv_index OF STRUCTURE &lt;ls_parsed_data&gt; TO &lt;lv_any&gt;.
          IF sy-subrc = 0.
            &lt;lv_any&gt; = lv_split+1.
          ENDIF.
        ENDIF.


        IF lv_group = abap_false.
          ADD 1 TO lv_index.
          ASSIGN COMPONENT lv_index OF STRUCTURE &lt;ls_parsed_data&gt; TO &lt;lv_any&gt;.
          IF sy-subrc = 0.
            &lt;lv_any&gt; = lv_split.
          ENDIF.
        ENDIF.


        IF lv_len &gt; 1.
          SUBTRACT 1 FROM lv_len.
          IF lv_split+lv_len(1) = &apos;&quot;&apos;.
            lv_group = abap_false.

            lv_len = strlen( &lt;lv_any&gt; ).
            SUBTRACT 1 FROM lv_len.
            &lt;lv_any&gt; = &lt;lv_any&gt;(lv_len).

          ENDIF.
        ENDIF.



      ENDLOOP.



      &quot; to properly convert string to numc6.
      ADD &lt;ls_parsed_data&gt;-line_item TO lv_num6.
      &lt;ls_parsed_data&gt;-line_item = lv_num6.
      CLEAR lv_num6.

      ADD &lt;ls_parsed_data&gt;-period TO lv_num6.
      &lt;ls_parsed_data&gt;-period = lv_num6.
      CLEAR lv_num6.


      &lt;ls_parsed_data&gt;-batch_id = |{ &lt;ls_parsed_data&gt;-batch_id ALPHA = IN }|.
      &lt;ls_parsed_data&gt;-message_id = |{ &lt;ls_parsed_data&gt;-message_id ALPHA = IN }|.
      &lt;ls_parsed_data&gt;-gl_account = |{ &lt;ls_parsed_data&gt;-gl_account ALPHA = IN }|.
      &lt;ls_parsed_data&gt;-vendor = |{  &lt;ls_parsed_data&gt;-vendor ALPHA = IN }|.


      IF &lt;ls_parsed_data&gt;-batch_id &lt;&gt; lv_batch_id.
        WRITE / |Data inconsistency. Batch ID in file data is different that in filename|.
        zcx_generic_exception=&gt;raise( |Data inconsistency. Batch ID in file data is different that in filename| ).
      ENDIF.

    ENDLOOP.





**********************************************************************





*
*    LOOP AT it_data REFERENCE INTO DATA(ls_data_string).
*      APPEND INITIAL LINE TO rt_parsed_data ASSIGNING FIELD-SYMBOL(&lt;ls_parsed_data&gt;).
*
*      IF ls_data_string-&gt;* CS &apos;;&apos;.
*        lv_delimit = lc_delimit_semicol.
*      ELSE.
*        lv_delimit = lc_delimit_comma.
*      ENDIF.
*
*      SPLIT ls_data_string-&gt;* AT lv_delimit INTO
*          &lt;ls_parsed_data&gt;-batch_id
*          &lt;ls_parsed_data&gt;-message_id
*          &lt;ls_parsed_data&gt;-line_item
*          &lt;ls_parsed_data&gt;-company_code
*          &lt;ls_parsed_data&gt;-document_type
*          &lt;ls_parsed_data&gt;-document_date
*          &lt;ls_parsed_data&gt;-posting_date
*          &lt;ls_parsed_data&gt;-period
*          &lt;ls_parsed_data&gt;-ledger
*          &lt;ls_parsed_data&gt;-header_text
*          &lt;ls_parsed_data&gt;-debit_credit
*          &lt;ls_parsed_data&gt;-gl_account
*          &lt;ls_parsed_data&gt;-currency
*          &lt;ls_parsed_data&gt;-amount_document
*          &lt;ls_parsed_data&gt;-amount_local
*          &lt;ls_parsed_data&gt;-value_date
*          &lt;ls_parsed_data&gt;-segment
*          &lt;ls_parsed_data&gt;-cost_center
*          &lt;ls_parsed_data&gt;-order_number
*          &lt;ls_parsed_data&gt;-profit_center
*          &lt;ls_parsed_data&gt;-item_text
*          &lt;ls_parsed_data&gt;-assigment
*          &lt;ls_parsed_data&gt;-reference1
*          &lt;ls_parsed_data&gt;-reference2
*          &lt;ls_parsed_data&gt;-reference3
*          &lt;ls_parsed_data&gt;-vendor
*          &lt;ls_parsed_data&gt;-name
*          &lt;ls_parsed_data&gt;-tax_no_1
*          &lt;ls_parsed_data&gt;-street
*          &lt;ls_parsed_data&gt;-city
*          &lt;ls_parsed_data&gt;-mwskz
*          &lt;ls_parsed_data&gt;-gross_net
*          &lt;ls_parsed_data&gt;-tax_amount
*          &lt;ls_parsed_data&gt;-cust_vend
*          &lt;ls_parsed_data&gt;-zfbdt
*          &lt;ls_parsed_data&gt;-vbund
*          .
*
*      &quot; to properly convert string to numc6.
*      ADD &lt;ls_parsed_data&gt;-line_item TO lv_num6.
*      &lt;ls_parsed_data&gt;-line_item = lv_num6.
*      CLEAR lv_num6.
*
*      ADD &lt;ls_parsed_data&gt;-period TO lv_num6.
*      &lt;ls_parsed_data&gt;-period = lv_num6.
*      CLEAR lv_num6.
*
*
*      &lt;ls_parsed_data&gt;-batch_id = |{ &lt;ls_parsed_data&gt;-batch_id ALPHA = IN }|.
*      &lt;ls_parsed_data&gt;-message_id = |{ &lt;ls_parsed_data&gt;-message_id ALPHA = IN }|.
*      &lt;ls_parsed_data&gt;-gl_account = |{ &lt;ls_parsed_data&gt;-gl_account ALPHA = IN }|.
*      &lt;ls_parsed_data&gt;-vendor = |{  &lt;ls_parsed_data&gt;-vendor ALPHA = IN }|.
*
*
*      IF &lt;ls_parsed_data&gt;-batch_id &lt;&gt; lv_batch_id.
*        WRITE / |Data inconsistency. Batch ID in file data is different that in filename|.
*        zcx_generic_exception=&gt;raise( |Data inconsistency. Batch ID in file data is different that in filename| ).
*      ENDIF.
*
*    ENDLOOP.

*    LOOP AT rt_parsed_data REFERENCE INTO DATA(ls_parsed).
*      &quot; to properly convert string to numc6.
*      ADD ls_parsed-&gt;line_item TO lv_num6.
*      ls_parsed-&gt;line_item = lv_num6.
*      CLEAR lv_num6.
*
*      ADD ls_parsed-&gt;period TO lv_num6.
*      ls_parsed-&gt;period = lv_num6.
*      CLEAR lv_num6.
*
*
*      ls_parsed-&gt;batch_id = |{ ls_parsed-&gt;batch_id ALPHA = IN }|.
*      ls_parsed-&gt;message_id = |{ ls_parsed-&gt;message_id ALPHA = IN }|.
*      ls_parsed-&gt;gl_account = |{ ls_parsed-&gt;gl_account ALPHA = IN }|.
*      ls_parsed-&gt;vendor = |{  ls_parsed-&gt;vendor ALPHA = IN }|.
*
*
*      IF ls_parsed-&gt;batch_id &lt;&gt; lv_batch_id.
*        WRITE / |Data inconsistency. Batch ID in file data is different that in filename|.
*        zcx_generic_exception=&gt;raise( |Data inconsistency. Batch ID in file data is different that in filename| ).
*      ENDIF.
*
*    ENDLOOP.

    SORT rt_parsed_data BY batch_id message_id line_item.

  ENDMETHOD.</source>
  </method>
 </CLAS>
 <CLAS CLSNAME="ZGLIF_CONVERTOR_CSV" VERSION="1" LANGU="E" DESCRIPT="Convertor for csv file to SAP database" CATEGORY="00" EXPOSURE="2" STATE="1" RELEASE="0" CLSFINAL="X" CLSCCINCL="X" FIXPT="X" UNICODE="X" CLSBCCAT="00" WITH_UNIT_TESTS="X" DURATION_TYPE="0 " RISK_LEVEL="0 " ZSAPLINK_PLUGIN_MAJOR_VERSION="0 " ZSAPLINK_PLUGIN_MINOR_VERSION="1 " ZSAPLINK_PLUGIN_BUILD_VERSION="0 " ZSAPLINK_PLUGIN_INFO1="ZSAPLINK_CLASS is part of the main ZSAPLINK project --&gt; This plugin found there instead of ZSAPLINK_PLUGINS projects" ZSAPLINK_PLUGIN_INFO2="SAPLINK homepage: https://www.assembla.com/spaces/saplink/wiki" ZSAPLINK_PLUGIN_INFO3="Download from https://www.assembla.com/code/saplink/subversion/nodes" ZSAPLINK_PLUGIN_INFO4="and navigate to:  trunk -&gt; core -&gt; ZSAPLINK -&gt; CLAS -&gt; ZSAPLINK_CLASS.slnk" REFCLSNAME="ZGLIF_SUPERCONVERTOR">
  <types CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="TY_BOOK_CSV_S" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " TYPTYPE="4" SRCROW1="39 " SRCCOLUMN1="11 " SRCROW2="64 " SRCCOLUMN2="30 " TYPESRC_LENG="0 " TYPESRC="BEGIN OF ty_book_csv_s,
             batch_id        TYPE zglif_batch_id,
             message_id      TYPE zglif_message_id,
             line_item       TYPE zglif_item,
             company_code    TYPE bukrs,
             document_type   TYPE blart,
             document_date   TYPE dats,
             posting_date    TYPE dats,
             period          TYPE monat,
             ledger          TYPE fins_ledger,
             header_text     TYPE bktxt,
             debit_credit    TYPE shkzg,
             gl_account      TYPE hkont,
             currency        TYPE waers,
             amount_document TYPE e1fiseg-wrbtr,
             amount_local    TYPE e1fiseg-dmbtr,
             segment         TYPE fb_segment,
             cost_center     TYPE kostl,
             order_number    TYPE aufnr,
             profit_center   TYPE prctr,
             item_text       TYPE sgtxt,
             assigment       TYPE dzuonr,
             reference1      TYPE xref1,
             reference2      TYPE xref2,
             reference3      TYPE xref3,
           END OF ty_book_csv_s
"/>
  <types CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="TY_BOOK_CSV_T" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="2 " TYPTYPE="4" SRCROW1="65 " SRCCOLUMN1="11 " SRCROW2="65 " SRCCOLUMN2="68 " TYPESRC_LENG="0 " TYPESRC="ty_book_csv_t TYPE TABLE OF ty_book_csv_s WITH DEFAULT KEY
"/>
  <localImplementation>*&quot;* use this source file for the definition and implementation of
*&quot;* local helper classes, interface definitions and type
*&quot;* declarations</localImplementation>
  <localTypes>*&quot;* use this source file for any type of declarations (class
*&quot;* definitions, interfaces or type declarations) you need for
*&quot;* components in the private section</localTypes>
  <localMacros>*&quot;* use this source file for any macro definitions you need
*&quot;* in the implementation part of the class</localMacros>
  <localTestClasses>*&quot;* use this source file for your ABAP unit test classes</localTestClasses>
  <textPool>
   <language SPRAS="E">
    <textElement ID="I" KEY="001" ENTRY="No Content Available" LENGTH="40 "/>
    <textElement ID="I" KEY="002" ENTRY="File successfully converted" LENGTH="54 "/>
   </language>
  </textPool>
  <attribute CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="GS_CONVCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Convertor Customization table" EXPOSURE="0" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="ZGLIF_CONVCUST" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="GS_FILE" VERSION="1" LANGU="E" DESCRIPT="Filename of currently processed file" EXPOSURE="0" STATE="1" EDITORDER="2 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="1" TYPE="EPS2FILI" SRCROW1="0 " SRCCOLUMN1="0 " SRCROW2="0 " SRCCOLUMN2="0 " TYPESRC_LENG="0 "/>
  <attribute CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="GT_MESS_STAT" VERSION="1" LANGU="E" EXPOSURE="2" STATE="1" EDITORDER="1 " ATTDECLTYP="0" ATTEXPVIRT="0" TYPTYPE="4" SRCROW1="69 " SRCCOLUMN1="6 " SRCROW2="69 " SRCCOLUMN2="49 " TYPESRC_LENG="46 " TYPESRC="gt_mess_stat TYPE TABLE OF   zglif_mess_stat
"/>
  <inheritance CLSNAME="ZGLIF_CONVERTOR_CSV" REFCLSNAME="ZGLIF_SUPERCONVERTOR" VERSION="1" STATE="1">
   <redefinition CLSNAME="ZGLIF_CONVERTOR_CSV" REFCLSNAME="ZGLIF_SUPERCONVERTOR" VERSION="1" MTDNAME="CONVERT" EXPOSURE="2"/>
  </inheritance>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CANCEL_IDOC" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="8 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CANCEL_IDOC" SCONAME="IV_IDOC_NUMBER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EDI_DOCNUM"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CANCEL_IDOC" SCONAME="IV_ZERO_ITEMS" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ABAP_BOOL" PAROPTIONL="X"/>
   <source>METHOD cancel_idoc.
    DATA(lt_idoc_status) = VALUE t_idoc_status( ( docnum = iv_idoc_number status = &apos;68&apos; msgid = &apos;ZGLIF_MESSAGES&apos; msgno = SWITCH #( iv_zero_items WHEN abap_true THEN 003 ELSE 002 ) msgty = &apos;S&apos; msgv1 = iv_idoc_number ) ).

    CALL FUNCTION &apos;IDOC_STATUS_WRITE_TO_DATABASE&apos;
      EXPORTING
        idoc_number               = iv_idoc_number
*       idoc_opened_flag          = space
*       no_dequeue_flag           = &apos;X&apos;
*      IMPORTING
*       idoc_control              =
      TABLES
        idoc_status               = lt_idoc_status
      EXCEPTIONS
        idoc_foreign_lock         = 1
        idoc_not_found            = 2
        idoc_status_records_empty = 3
        idoc_status_invalid       = 4
        db_error                  = 5
        OTHERS                    = 6.

    IF sy-subrc = 0.
      WRITE / |iDoc { iv_idoc_number } canceled|.
*      log_add_text( iv_text = |iDoc { iv_idoc_number } canceled| iv_detlevel = &apos;5&apos; ).
    ELSE.
      WRITE / |iDoc { iv_idoc_number } could not be canceled|.
*      log_add_text( iv_text = |iDoc { iv_idoc_number } could not be canceled| iv_type = &apos;E&apos; iv_detlevel = &apos;5&apos; ).
    ENDIF.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CONSTRUCTOR" VERSION="1" LANGU="E" DESCRIPT="CONSTRUCTOR" EXPOSURE="2" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="2" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CONSTRUCTOR" SCONAME="PIS_CONVCUST" VERSION="1" LANGU="E" DESCRIPT="GLIF: Convertor&apos;s customization table" CMPTYPE="1" MTDTYPE="2" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_CONVCUST"/>
   <source>METHOD constructor.
    &quot; Call the constructor of the Superclass: zglif_superconvertor
    super-&gt;constructor( ).
    &quot; take over the Convertor customization structure
    gs_convcust = pis_convcust.

    &quot; WRITE: / |FTP Convertor has been created. Rejoice!|. &quot; #TODO: application log
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_SUPERCONVERTOR" CMPNAME="CONVERT" VERSION="0" EXPOSURE="0" STATE="0" EDITORDER="0 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD convert.
**********************************************************************
* Insert the conversion to this method
**********************************************************************
* Please take inspiration in class zglif_convertor_idoc~convert
* and develop this conversion in the same manner
*
* Thank you.
**********************************************************************
*{(ADD)/Equine/EG-ABAP/EQ_FAOK/22092017/Cause:
    DATA: lt_all_files     TYPE TABLE OF eps2fili,
          lt_file_list     TYPE TABLE OF eps2fili,
          lv_batch_id      TYPE zglif_batch_id,
          lv_prev_batch_id TYPE zglif_batch_id,
          lt_batch_stat    TYPE TABLE OF zglif_batch_stat,
          ls_batch_stat    TYPE zglif_batch_stat.

    DATA: lv_fname     TYPE epsfilnam, lv_flen TYPE i,
          lv_file_path TYPE string.

    FIELD-SYMBOLS:
          &lt;ls_mess_stat&gt; TYPE zglif_mess_stat.

    &quot;Perform parent implementation
    CALL METHOD super-&gt;convert.


    lv_file_path = get_physical_path( iv_logical = gs_convcust-sap_folder_source ).



    &quot; Get file list for conversion
    CALL FUNCTION &apos;EPS2_GET_DIRECTORY_LISTING&apos;
      EXPORTING
        iv_dir_name               = CONV eps2filnam( lv_file_path ) &quot;gs_convcust-sap_folder_source
      TABLES
        dir_list               = lt_all_files
      EXCEPTIONS
        invalid_eps_subdir     = 1
        sapgparam_failed       = 2
        build_directory_failed = 3
        no_authorization       = 4
        read_directory_failed  = 5
        too_many_read_errors   = 6
        empty_directory_list   = 7
        OTHERS                 = 8.
    IF sy-subrc = 0.
      &quot; Get only the entries that are ready for Conversion
      SELECT filename &quot;* &quot;filename, batch_id, message_id, idoc_number, message_status
      FROM zglif_mess_stat
      JOIN zglif_batch_stat ON zglif_batch_stat~interface_name = zglif_mess_stat~interface_name AND zglif_batch_stat~batch_id = zglif_mess_stat~batch_id
      INTO TABLE @DATA(lt_files_for_processing)
      FOR ALL ENTRIES IN @lt_all_files
      WHERE zglif_batch_stat~interface_name    = @gs_convcust-interface_name
        AND zglif_mess_stat~filename          = @lt_all_files-name
        AND ( zglif_mess_stat~message_status = @zglif_dispatcher=&gt;gc_00_downloaded OR zglif_mess_stat~message_status = @zglif_dispatcher=&gt;gc_50_corrected )
        AND ( zglif_batch_stat~batch_status = @zglif_dispatcher=&gt;gc_00_downloaded OR zglif_batch_stat~batch_status = @zglif_dispatcher=&gt;gc_50_corrected ).

      IF sy-subrc &lt;&gt; 0.
        WRITE / |No batch in correct status found|.
      ENDIF.


      TRY.
          lt_file_list  = VALUE #( FOR ls_file_for_processing IN lt_files_for_processing (
              name      = ls_file_for_processing-filename
              size      = lt_all_files[ name = ls_file_for_processing-filename ]-size
              rc        = lt_all_files[ name = ls_file_for_processing-filename ]-rc ) ).
        CATCH cx_sy_itab_line_not_found.
          &quot; #TODO: own error class
      ENDTRY.

      &quot;Only Convert .CSV
      LOOP AT lt_file_list INTO gs_file.
        lv_fname = gs_file-name.
        CONDENSE : lv_fname.
        TRANSLATE lv_fname TO UPPER CASE.
        lv_flen = strlen( lv_fname ).
        SUBTRACT 4 FROM lv_flen.

        IF lv_fname+lv_flen(4) NE &apos;.CSV&apos;.
          DELETE lt_file_list WHERE name EQ gs_file-name.
        ENDIF.
      ENDLOOP.

      &quot; Do we have any entries to convert?
      DESCRIBE TABLE lt_file_list LINES DATA(lv_lines).
      IF lv_lines = 0.
        WRITE: / |No files for conversion present in folder { gs_convcust-sap_folder_source }|. &quot; #TODO: application log
      ELSE.
        &quot; Start conversion and Save the Message into FTP Feeders Message status table
        REFRESH gt_mess_stat.
        zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                                pev_time = DATA(lv_time) ).
        gt_mess_stat = VALUE #( FOR ls_file IN lt_file_list (
            interface_name      = gs_convcust-interface_name
            filename            = ls_file-name
            batch_id            = ls_file-name+4(10)
*            message_id          = ls_file-name+14(10)
            message_changed_on  = lv_date
            message_changed_at  = lv_time
            message_changed_by  = sy-uname ) ).

        &quot; Delete the old status entries (unable to update as key is modified)
        DELETE zglif_mess_stat FROM TABLE gt_mess_stat.
        COMMIT WORK AND WAIT.
        CLEAR: gt_mess_stat. &quot; we need to clear this because here one file is whole batch so we did not have message_id at the beginning.

        &quot; Get the batch number for comparison later
*        lv_batch_id = lv_prev_batch_id = lt_file_list[ 1 ]-name+4(10). &quot; No need for try-endtry, we are sure that the lines exist

        CLEAR: lv_date,
               lv_time.
        &quot; Convert the respective files
        LOOP AT lt_file_list INTO gs_file.

          zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = lv_date
                                                  pev_time = lv_time ).

**********************************************************************
          convert_single_file( ). &quot; in this Vietnam screnario the one file is whole one batch containing several messages
**********************************************************************


          &quot; Check whether a new batch has started. If so, mark down the old batch number
          lv_batch_id = gs_file+4(10).
*          IF lv_batch_id &lt;&gt; lv_prev_batch_id.
          ls_batch_stat = VALUE #(
              interface_name      = gs_convcust-interface_name
              batch_id            = lv_batch_id
              batch_changed_on    = lv_date
              batch_changed_at    = lv_time
              batch_changed_by    = sy-uname ).
          APPEND ls_batch_stat TO lt_batch_stat.

          INSERT zglif_mess_stat FROM TABLE gt_mess_stat.
          COMMIT WORK AND WAIT.

          &quot; Update batch statuses
          zglif_utility_storage=&gt;update_batch_status( CHANGING pct_batch = lt_batch_stat ).
          MODIFY zglif_batch_stat FROM TABLE lt_batch_stat.
          COMMIT WORK AND WAIT.

          CLEAR: lt_batch_stat, gt_mess_stat.

*            lv_prev_batch_id = lv_batch_id.
*          ENDIF.
        ENDLOOP.

*        ls_batch_stat = VALUE #(
*            interface_name      = gs_convcust-interface_name
*            batch_id            = lv_prev_batch_id
*            batch_changed_on    = lv_date
*            batch_changed_at    = lv_time
*            batch_changed_by    = sy-uname ).
*        APPEND ls_batch_stat TO lt_batch_stat.

        &quot; Save the modified DB entries
*        DELETE zglif_mess_stat FROM TABLE gt_mess_stat.
*        INSERT zglif_mess_stat FROM TABLE gt_mess_stat.
*        COMMIT WORK AND WAIT.
*
*        &quot; Update batch statuses
*        zglif_utility_storage=&gt;update_batch_status( CHANGING pct_batch = lt_batch_stat ).
*        MODIFY zglif_batch_stat FROM TABLE lt_batch_stat.
*        COMMIT WORK AND WAIT.
      ENDIF.
    ELSEIF sy-subrc = 7.
      WRITE: / |No files ready for conversion in folder { gs_convcust-sap_folder_source } |. &quot; #TODO: application log
    ELSE.
      &quot; #TODO: application log
    ENDIF.

*}(END OF ADD)/Equine/EG-ABAP/EQ_FAOK/22092017
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CONVERT_DATA_TO_IDOCS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="9 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CONVERT_DATA_TO_IDOCS" SCONAME="IT_PARSED_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_BOOK_CSV_T"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CONVERT_DATA_TO_IDOCS" SCONAME="RV_CONVERSION_FAILED" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="ABAP_BOOL"/>
   <source>METHOD convert_data_to_idocs.

    DATA: lt_idoc_data   TYPE TABLE OF edi_dd40,
          lv_idoc_number TYPE edi_docnum,
          lv_error       TYPE edi_errflg.

    &quot; iDoc Control entry
    DATA(ls_idoc_control) = prepare_idoc_control_entry(  ).

    &quot; Parsed data
    LOOP AT it_parsed_data  INTO DATA(ls_one_message)
                            GROUP BY ( batch_id = ls_one_message-batch_id
                                       message_id = ls_one_message-message_id
                                       company_code = ls_one_message-company_code
                                       document_type = ls_one_message-document_type
                                       document_date = ls_one_message-document_date
                                       posting_date = ls_one_message-posting_date
                                       period = ls_one_message-period
                                       ledger = ls_one_message-ledger
                                       header_text = ls_one_message-header_text
                                       currency = ls_one_message-currency
                             )  INTO DATA(lt_single_message).

      CLEAR: lt_idoc_data.

      &quot; check if the old idoc exists.
      SELECT SINGLE idoc_number FROM zglif_mess_stat INTO @DATA(lv_idoc)
      WHERE interface_name = @gs_convcust-interface_name
      AND batch_id = @lt_single_message-batch_id
      AND message_id = @lt_single_message-message_id.

      IF lv_idoc IS NOT INITIAL.
        cancel_idoc( lv_idoc ).
        &quot; Need to delete, because idoc is primary key, so no way to modify...
        DELETE FROM zglif_mess_stat WHERE interface_name = gs_convcust-interface_name AND batch_id = lt_single_message-batch_id AND message_id = lt_single_message-message_id.
        CLEAR lv_idoc.
      ENDIF.


      DATA(ls_idoc_header) = create_idoc_header( CORRESPONDING #( lt_single_message ) ).

      APPEND VALUE edi_dd40( segnam = &apos;E1FIKPF&apos; sdata = ls_idoc_header ) TO lt_idoc_data.


      LOOP AT GROUP lt_single_message INTO DATA(ls_single_message).
        create_idoc_items( EXPORTING is_item_data = ls_single_message iv_currency = lt_single_message-currency CHANGING ct_idoc_data = lt_idoc_data ).
      ENDLOOP.

      &quot; Check the created idoc in TC BD87 - has status 64 - ready for processing
      CALL FUNCTION &apos;IDOC_INBOUND_SINGLE&apos;
        EXPORTING
          pi_idoc_control_rec_40        = ls_idoc_control
*         pi_do_commit                  = &apos;X&apos;
        IMPORTING
          pe_idoc_number                = lv_idoc_number
          pe_error_prior_to_application = lv_error
        TABLES
          pt_idoc_data_records_40       = lt_idoc_data
        EXCEPTIONS
          idoc_not_saved                = 1
          OTHERS                        = 2.



      IF sy-subrc = 0.
        WRITE: / |Batch { lt_single_message-batch_id }, Message { lt_single_message-message_id } converted into IDoc { lv_idoc_number } |. &quot; #TODO: application log

        LOOP AT it_parsed_data TRANSPORTING NO FIELDS WHERE batch_id = lt_single_message-batch_id
                                                         AND message_id = lt_single_message-message_id
                                                         AND amount_document &lt;&gt; 0.
          EXIT.
        ENDLOOP.
        IF sy-subrc = 0.
          DATA(lv_message_status) = zglif_dispatcher=&gt;gc_10_converted.
        ELSE.
          lv_message_status = zglif_dispatcher=&gt;gc_98_canceled_zero_values.
          cancel_idoc( iv_idoc_number = lv_idoc_number iv_zero_items = abap_true ).
        ENDIF.

      ELSE.
        lv_message_status = zglif_dispatcher=&gt;gc_11_conversion_error.
        rv_conversion_failed = abap_true.
      ENDIF.

      zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                              pev_time = DATA(lv_time) ).

      APPEND VALUE zglif_mess_stat( interface_name = gs_convcust-interface_name
                                    batch_id = lt_single_message-batch_id
                                    message_id = lt_single_message-message_id
                                    filename = gs_file
                                    idoc_number = lv_idoc_number
                                    message_status = lv_message_status
                                    message_changed_on = lv_date
                                    message_changed_at = lv_time
                                    message_changed_by = sy-uname
                                        ) TO gt_mess_stat.


    ENDLOOP.




  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CONVERT_ELOGISTICS_ID" VERSION="1" LANGU="E" DESCRIPT="Convert single E-logistic from the batch for Indonesia" EXPOSURE="0" STATE="1" EDITORDER="4 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CONVERT_ELOGISTICS_ID" SCONAME="PE_SUBRC" VERSION="1" LANGU="E" DESCRIPT="Subroutines for return code" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="SUBRC"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CONVERT_ELOGISTICS_ID" SCONAME="PE_MESSAGE" VERSION="1" LANGU="E" DESCRIPT="Message Text" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="1" PARPASSTYP="0" TYPTYPE="1" TYPE="BAPI_MSG"/>
   <source>METHOD convert_elogistics_id.
*    TYPES: BEGIN OF lty_raw,
*             teks(1000) TYPE c,
*           END OF lty_raw.
*
*    DATA: lt_raw_1 TYPE TABLE OF lty_raw, ls_raw_1 TYPE lty_raw, lv_str TYPE string,
*          ls_raw_2 TYPE ty_raw_s, lt_raw_2 TYPE TABLE OF ty_raw_s,
**          lt_data  TYPE TABLE OF yglifid_elogisti, ls_data TYPE yglifid_elogisti,
*          lv_ctr   TYPE sy-tabix.
*    DATA: lv_date TYPE sy-datum, lv_time TYPE sy-uzeit.
*    DATA: lv_batch_id   TYPE zglif_batch_id, lv_message_id TYPE zglif_message_id.
*
*    DATA(lv_path_source) = CONV sapb-sappfad( gs_convcust-sap_folder_source &amp;&amp; gs_file-name ).
*
*    CONSTANTS: lc_split(1) TYPE c VALUE &apos;;&apos;.
*
**    BREAK EQ_FAOK.
*
*    OPEN DATASET lv_path_source FOR INPUT IN TEXT MODE ENCODING DEFAULT WITH SMART LINEFEED IGNORING CONVERSION ERRORS MESSAGE pe_message.
*    IF sy-subrc EQ 0.
*      DO.
*        READ DATASET lv_path_source INTO lv_str.
*        IF sy-subrc EQ 0.
**          WRITE:/ lv_str.
*          ls_raw_1-teks = lv_str.
*          APPEND ls_raw_1 TO lt_raw_1.
*          CLEAR: ls_raw_1.
*          APPEND ls_raw_2 TO lt_raw_2.
*        ELSE.
*          EXIT.
*        ENDIF.
*      ENDDO.
*    ELSE.
*      pe_subrc = 4.
*      EXIT.
*    ENDIF.
*    CLOSE DATASET lv_path_source.
*
*    IF lt_raw_1[] IS INITIAL.
*      pe_subrc = 4.
*      pe_message = &apos;No Content Available&apos;.
*      EXIT.
*    ENDIF.
*
*    CHECK pe_subrc IS INITIAL.
*
*    lv_batch_id = gs_file-name+3(5).
*    lv_message_id = gs_file-name+9(7).
*
*    CLEAR: lv_ctr.
*    LOOP AT lt_raw_1 INTO ls_raw_1.
*      ADD 1 TO lv_ctr.
*      IF lv_ctr EQ 1. &quot;File is with header
*        CONTINUE.
*      ENDIF.
*
*      CLEAR: ls_raw_2.
*      SPLIT ls_raw_1-teks AT lc_split INTO
*        ls_raw_2-field01 ls_raw_2-field02 ls_raw_2-field03 ls_raw_2-field04 ls_raw_2-field05
*        ls_raw_2-field06 ls_raw_2-field07 ls_raw_2-field08 ls_raw_2-field09 ls_raw_2-field10
*        ls_raw_2-field11 ls_raw_2-field12 ls_raw_2-field13 ls_raw_2-field14 ls_raw_2-field15
*        ls_raw_2-field16 ls_raw_2-field17 ls_raw_2-field18 ls_raw_2-field19 ls_raw_2-field20
*        ls_raw_2-field21 ls_raw_2-field22 ls_raw_2-field23 ls_raw_2-field24 ls_raw_2-field25
*        ls_raw_2-field26 ls_raw_2-field27 ls_raw_2-field28.
*
*      CONDENSE:
*        ls_raw_2-field01, ls_raw_2-field02, ls_raw_2-field03, ls_raw_2-field04, ls_raw_2-field05,
*        ls_raw_2-field06, ls_raw_2-field07, ls_raw_2-field08, ls_raw_2-field09, ls_raw_2-field10,
*        ls_raw_2-field11, ls_raw_2-field12, ls_raw_2-field13, ls_raw_2-field14, ls_raw_2-field15,
*        ls_raw_2-field16, ls_raw_2-field17, ls_raw_2-field18, ls_raw_2-field19, ls_raw_2-field20,
*        ls_raw_2-field21, ls_raw_2-field22, ls_raw_2-field23, ls_raw_2-field24, ls_raw_2-field25,
*        ls_raw_2-field26, ls_raw_2-field27, ls_raw_2-field28.
*
**      ls_data-interface_name = gs_convcust-interface_name.
**      ls_data-batch_id = lv_batch_id.
**      ls_data-message_id = lv_message_id.
**      ls_data-filename = gs_file-name.
**      ls_data-file_line = lv_ctr.
**      ls_data-line_status = zglif_dispatcher=&gt;gc_10_converted.
**
**      CALL FUNCTION &apos;YGLIFID_TIMESTAMP_SQL_TO_SAP&apos;
**        EXPORTING
**          pi_sql_timestamp = ls_raw_2-field01
**        IMPORTING
**          pe_date          = ls_data-dbdat
**          pe_time          = ls_data-dbtim.
**
**      ls_data-belnr = ls_raw_2-field02.
**      ls_data-item_id = ls_raw_2-field03.
**      ls_data-matnr = ls_raw_2-field04.
**      ls_data-menge = ls_raw_2-field05.
**
**      CALL FUNCTION &apos;YGLIFID_TIMESTAMP_SQL_TO_SAP&apos;
**        EXPORTING
**          pi_sql_timestamp = ls_raw_2-field06
**        IMPORTING
**          pe_date          = ls_data-req_date
**          pe_time          = ls_data-req_time.
**
**      ls_data-type = ls_raw_2-field07.
**      ls_data-ordtypid = ls_raw_2-field08.
**      ls_data-ordstaid = ls_raw_2-field09.
**      ls_data-stna = ls_raw_2-field10.
**      ls_data-delfrm = ls_raw_2-field11.
**      ls_data-desto = ls_raw_2-field12.
**      ls_data-bwart = ls_raw_2-field13.
**      ls_data-whid = ls_raw_2-field14.
**      ls_data-whname = ls_raw_2-field15.
**      ls_data-wrcode = ls_raw_2-field16.
**      ls_data-pos_id = ls_raw_2-field17.
**      ls_data-pos_nm = ls_raw_2-field18.
**      ls_data-pos_ad = ls_raw_2-field19.
**      ls_data-dest_wh_id = ls_raw_2-field20.
**      ls_data-whds = ls_raw_2-field21.
**      ls_data-whad = ls_raw_2-field22.
***      ls_data-inou = ls_raw_2-field23.
**      CONDENSE: ls_raw_2-field23.
**      SPLIT ls_raw_2-field23 AT space INTO ls_data-inou ls_raw_2-field50.
***      ls_data-inda = ls_raw_2-field24.
**      ls_data-inda+0(4) = ls_raw_2-field24+6(4).
**      ls_data-inda+4(2) = ls_raw_2-field24+3(2).
**      ls_data-inda+6(2) = ls_raw_2-field24+0(2).
**
**      ls_data-date_whpo+0(4) = ls_raw_2-field25+6(4).
**      ls_data-date_whpo+4(2) = ls_raw_2-field25+3(2).
**      ls_data-date_whpo+6(2) = ls_raw_2-field25+0(2).
**
**      ls_data-note = ls_raw_2-field26.
**      ls_data-itca = ls_raw_2-field27.
**
**      ls_data-erdat = sy-datum.
**      ls_data-ernam = sy-uname.
**      ls_data-erzet = sy-uzeit.
**
**      APPEND ls_data TO lt_data.
*    ENDLOOP.
**
**    IF lt_data[] IS NOT INITIAL.
**      MODIFY yglifid_elogisti FROM TABLE lt_data.
**      COMMIT WORK AND WAIT.
**
**      CLEAR: pe_subrc.
**      pe_message = &apos;File successfully converted&apos;.
**    ENDIF.
  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CONVERT_SINGLE_FILE" VERSION="1" LANGU="E" DESCRIPT="Convert single file from the batch" EXPOSURE="0" STATE="1" EDITORDER="3 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <source>METHOD convert_single_file.
**********************************************************************
* Insert the conversion to this method
**********************************************************************
* Please take inspiration in class zglif_convertor_idoc~convert_single_file
* and develop this conversion in the same manner
*
* Thank you.
**********************************************************************
*{(ADD)/Equine/EG-ABAP/EQ_FAOK/22092017/Cause:
    DATA: lv_conv_error TYPE boolean_flg VALUE abap_false,
          lv_subrc      TYPE subrc, lv_message TYPE bapi_msg,
          ls_mess_stat  TYPE zglif_mess_stat,
          lv_string     TYPE string,
          lt_string     TYPE TABLE OF string.

    &quot; Prepare path variables

    DATA(lv_path_source)        = get_physical_path( iv_logical = gs_convcust-sap_folder_source iv_filename = gs_file-name ). &quot;CONV sapb-sappfad( gs_convcust-sap_folder_source &amp;&amp; gs_file-name ).
    DATA(lv_path_errors)        = get_physical_path( iv_logical = gs_convcust-sap_folder_errors iv_filename = gs_file-name ).
    DATA(lv_path_processed)     = get_physical_path( iv_logical = gs_convcust-sap_folder_processed iv_filename = gs_file-name ).


*    DATA(lv_path_source)        = CONV sapb-sappfad( gs_convcust-sap_folder_source &amp;&amp; gs_file-name ).
*    DATA(lv_path_errors)        = CONV sapb-sappfad( gs_convcust-sap_folder_errors &amp;&amp; gs_file-name ).
*    DATA(lv_path_processed)     = CONV sapb-sappfad( gs_convcust-sap_folder_processed &amp;&amp; gs_file-name ).


    &quot; Copy files to the Processed folder (if processed successfully, file is deleted)

    TRY.
        zglif_utility_storage=&gt;copy_file_on_server(
          EXPORTING
            iv_source_path = lv_path_source
            iv_target_path = lv_path_processed
        ).
*      CATCH zcx_generic_exception.
        WRITE: / |File { gs_file-name } successfully copied into folder { gs_convcust-sap_folder_processed } |. &quot; #TODO: application log
        WRITE: / |If the processing is successful, it will stay there. In case of error, it will be moved to { gs_convcust-sap_folder_errors } |. &quot; #TODO: application log
      CATCH zcx_generic_exception INTO DATA(lo_exception).
        WRITE: / lo_exception-&gt;get_message( ).
        WRITE: / |Error when copying { gs_file-name } into folder { gs_convcust-sap_folder_processed } |. &quot; #TODO: application log
    ENDTRY.


    TRY .

        OPEN DATASET lv_path_source FOR INPUT IN TEXT MODE ENCODING DEFAULT WITH SMART LINEFEED IGNORING CONVERSION ERRORS MESSAGE lv_message.
        IF sy-subrc = 0.
          DO.
            READ DATASET lv_path_source INTO lv_string.
            IF sy-subrc = 0.
              APPEND lv_string TO lt_string.
            ELSE.
              EXIT.
            ENDIF.
          ENDDO.

          CLOSE DATASET lv_path_source.
          DELETE DATASET lv_path_source.
        ENDIF.

        DELETE lt_string WHERE table_line IS INITIAL.

        TRY.
            DATA(lt_parsed_data) = parse_data( it_data = lt_string ).
          CATCH zcx_generic_exception.
            lv_conv_error = abap_true.
        ENDTRY.
        lv_conv_error = convert_data_to_idocs( it_parsed_data = lt_parsed_data ).

      CATCH cx_root.
        lv_conv_error = abap_true.

    ENDTRY.

    &quot; Check whether there was any error when converting
    IF lv_conv_error EQ abap_true.

      WRITE: / |Error while converting file { gs_file-name } into SAP IDoc. Copying the file into Errors folder.|. &quot; #TODO: application log

      TRY.
          &quot; Copy to Errors folder
          zglif_utility_storage=&gt;copy_file_on_server(
            EXPORTING
              iv_source_path = lv_path_processed
              iv_target_path = lv_path_errors
          ).

          zglif_utility_storage=&gt;delete_file_on_server( lv_path_processed ).
          WRITE: / |File { gs_file-name } successfully copied into folder { gs_convcust-sap_folder_errors } |. &quot; #TODO: application log
        CATCH zcx_generic_exception INTO lo_exception.
          WRITE: / lo_exception-&gt;get_message( ).
          WRITE: / |Error when copying { gs_file-name } into folder { gs_convcust-sap_folder_errors } |. &quot; #TODO: application log
      ENDTRY.

      zglif_logger=&gt;get_timestamp( IMPORTING  pev_date = DATA(lv_date)
                                              pev_time = DATA(lv_time) ).
      ls_mess_stat-message_status = zglif_dispatcher=&gt;gc_11_conversion_error.
      ls_mess_stat-batch_id = gs_file+4(10).
      ls_mess_stat-interface_name = gs_convcust-interface_name.
      ls_mess_stat-message_changed_on = lv_date.
      ls_mess_stat-message_changed_at = lv_time.
      ls_mess_stat-message_changed_by = sy-uname.
      MODIFY zglif_mess_stat FROM ls_mess_stat.
      COMMIT WORK.


      WRITE: /  |File { gs_file-name } could not be converted |. &quot; &amp;
      &quot;|  { gt_mess_stat[ batch_id = gs_file+3(5) message_id = gs_file+9(7) ]-idoc_number }. |. &quot; #TODO: application log #TODO: IDoc number

    ELSE.
*      ls_mess_stat-message_status = zglif_dispatcher=&gt;gc_10_converted.
      WRITE: /  |File { gs_file-name } successfully converted |.&quot; &amp;
      &quot;|  { gt_mess_stat[ batch_id = gs_file+3(5) message_id = gs_file+9(7) ]-idoc_number }. |. &quot; #TODO: application log #TODO: IDoc number

    ENDIF.



  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CREATE_IDOC_HEADER" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="6 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CREATE_IDOC_HEADER" SCONAME="IS_HEADER_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="TY_BOOK_CSV_S"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CREATE_IDOC_HEADER" SCONAME="RS_IDOC_HEADER" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="E1FIKPF"/>
   <source>METHOD create_idoc_header.

    DATA: lv_xblnr TYPE xblnr,
          lv_waers TYPE string.

**    lv_xblnr = &apos;bk_&apos; &amp;&amp; |{ is_header_data-batch_id ALPHA = OUT }| &amp;&amp; |{ is_header_data-message_id ALPHA = OUT }|.
*    CONDENSE lv_xblnr NO-GAPS.

    rs_idoc_header = VALUE e1fikpf(
        bukrs      = is_header_data-company_code
*        belnr      =
        gjahr      = is_header_data-posting_date(4)
        blart      = is_header_data-document_type
        bldat      = is_header_data-document_date
        budat      = is_header_data-posting_date
        monat      = COND #( WHEN is_header_data-period IS NOT INITIAL THEN is_header_data-period ELSE is_header_data-posting_date+4(2) )
        wwert      = &apos;00000000&apos;&quot;is_header_data-posting_date
*        usnam      =
*        tcode      =
*        bvorg      =
        xblnr      = is_header_data-message_id
        bktxt      = is_header_data-header_text
        waers      = is_header_data-currency
*        kursf      =
        glvor      = &apos;RFBU&apos;
*        awtyp      =
*        awref      =
*        aworg      =
*        fikrs      =
        hwaer      = SWITCH #( is_header_data-currency WHEN &apos;VND&apos; THEN &apos;&apos; ELSE &apos;VND&apos; )
*        hwae2      =
*        hwae3      =
*        kurs2      =
*        kurs3      =
*        basw2      =
*        basw3      =
*        umrd2      =
*        umrd3      =
*        curt2      =
*        curt3      =
*        ausbk      =
*        awsys      =
*        lotkz      =
*        bukrs_snd  =
*        filter     =
*        kursf_m    =
*        kurs2_m    =
*        kurs3_m    =
*        bstat      =
*        brnch      =
*        numpg      =
*        adisc      =
*        stblg      =
*        stjah      =
*        awtyp_rev  =
*        awref_rev  =
*        aworg_rev  =
*        reserve    =
        xref1_hd   = |bk_{ is_header_data-batch_id ALPHA = OUT }|
*        xref2_hd   =
*        xblnr_long =
*        rldnr      =
        ldgrp      = is_header_data-ledger
*        vatdate    =
*        tcode_long =
*        subset     =
*        reserve02  =
*        reserve03  =
    ).

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CREATE_IDOC_ITEMS" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="7 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CREATE_IDOC_ITEMS" SCONAME="IS_ITEM_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="ZGLIF_CONVERTOR_CSV=&gt;TY_BOOK_CSV_S"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CREATE_IDOC_ITEMS" SCONAME="IV_CURRENCY" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="WAERS"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="CREATE_IDOC_ITEMS" SCONAME="CT_IDOC_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="2" PARPASSTYP="1" TYPTYPE="1" TYPE="EDI_DD40_TT"/>
   <source>METHOD create_idoc_items.


    IF is_item_data-amount_document &gt;= 0.
      &quot; Debit/Credit indicator
      DATA(lv_shkzg) = SWITCH shkzg( is_item_data-debit_credit
                          WHEN &apos;D&apos; THEN &apos;S&apos;
                          WHEN &apos;C&apos; THEN &apos;H&apos;).

      &quot; Posting key
      DATA(lv_bschl) = SWITCH bschl( is_item_data-debit_credit
                          WHEN &apos;D&apos; THEN &apos;40&apos;
                          WHEN &apos;C&apos; THEN &apos;50&apos;).

    ELSE.
      &quot; reverse for negative values

      &quot; Debit/Credit indicator
      lv_shkzg = SWITCH shkzg( is_item_data-debit_credit
                          WHEN &apos;D&apos; THEN &apos;H&apos;
                          WHEN &apos;C&apos; THEN &apos;S&apos;).

      &quot; Posting key
      lv_bschl = SWITCH bschl( is_item_data-debit_credit
                          WHEN &apos;D&apos; THEN &apos;50&apos;
                          WHEN &apos;C&apos; THEN &apos;40&apos;).


    ENDIF.



    &quot; Create segments per IDOC type + do not forget extensions!
    DATA(ls_idoc_e1fiseg) = VALUE e1fiseg(
      buzei       = CONV buzei( is_item_data-line_item ) &quot; 1
*  buzid          =
*  augdt          =
*  augcp          =
*  augbl          =
      bschl       = lv_bschl &quot; &apos;40&apos;
*  koart          =
      shkzg       = lv_shkzg &quot; &apos;S&apos;
*      gsber       = CONV #( lv_gsber ) &quot;&apos;1000&apos;
*  pargb          =
*  mwskz          =
      dmbtr       = SWITCH #( iv_currency WHEN &apos;VND&apos; THEN &apos;&apos; ELSE abs( is_item_data-amount_local ) ) &quot; &apos;15.00&apos;
*  dmbe2          =
*  dmbe3          =
      wrbtr       = abs( is_item_data-amount_document ) &quot; &apos;15.00&apos;
*  kzbtr          =
*  pswbt          =
*  pswsl          =
*  hwbas          =
*  fwbas          =
*  mwart          =
*  ktosl          =
*      valut       = pis_ws_data-value_date
    zuonr          = is_item_data-assigment
    sgtxt       = is_item_data-item_text &quot; &apos;001_SGTXT&apos;
*  vbund          =
*  bewar          =
*  vorgn          =
*  fdlev          =
*  fdgrp          =
*  fdtag          =
*  kokrs          =
*  txgrp          =
  kostl          = is_item_data-cost_center
  aufnr          = is_item_data-order_number
*  vbeln          =
*  vbel2          =
*  posn2          =
*  anln1          =
*  anln2          =
*  anbwa          =
*  bzdat          =
*  pernr          =
*  xumsw          =
*  xskrl          =
*  xauto          =
*  saknr          =
      hkont       = is_item_data-gl_account &quot; &apos;0601030701&apos;
*  abper          =
*  matnr          =
*  werks          =
*  menge          =
*  meins          =
*  erfmg          =
*  erfme          =
*  bpmng          =
*  bprme          =
*  ebeln          =
*  ebelp          =
*  zekkn          =
*  bwkey          =
*  bwtar          =
*  bustw          =
*  bualt          =
*  tbtkz          =
*  stceg          =
*      rstgr       = SWITCH rstgr( pis_ws_data-gl_account WHEN &apos;01010500X9&apos; THEN &apos;R99&apos; ELSE &apos;&apos; )
      prctr       = is_item_data-profit_center
*  vname          =
*  recid          =
*  egrup          =
*  vptnr          =
*  vertt          =
*  vertn          =
*  vbewa          =
*  txjcd          =
*  imkey          =
*  dabrz          =
*  fipos          =
*  kstrg          =
*  nplnr          =
*  aufpl          =
*  aplzl          =
*  projk          =
*  paobjnr        =
*  btype          =
*  etype          =
*  xegdr          =
*  hrkft          =
*  lokkt          =
*  fistl          =
*  geber          =
*  stbuk          =
*  altkt          =
*  pprct          =
  xref1          = is_item_data-reference1
  xref2          = is_item_data-reference2
*  kblnr          =
*  kblpos         =
*  fkber          =
*  obzei          =
  xnegp          = COND #( WHEN is_item_data-amount_document &lt; 0 THEN &apos;X&apos; ELSE &apos;&apos; )
*  cacct          =
  xref3          = is_item_data-reference3
*  txdat          =
*  bupla          =
*  secco          =
*  lstar          =
*  prznr          =
*  kursr          =
*  kursr_m        =
*  gbetr          =
*  reserve        =
*  xcpdd          =
*  taxps          =
*  qsznr          =
    ).


    DATA(ls_idoc_e1fise2) = VALUE e1fise2(
*  matnr_external    =
*  matnr_version     =
*  matnr_guid        =
*  reserve           =
*  fipex             =
*  fkber_long        =
*  grant_nbr         =
*  sctax             =
*  sttax             =
*  glupm             =
*  measure           =
      segment        = is_item_data-segment &quot; 1000&apos;
*  psegment          =
*  pfkber            =
*  kstar             =
*  reserve01         =
*  reserve02         =
*  matnr_long        =
    ).

    &quot; Insert the created data entries into idoc_data structure
    ct_idoc_data = VALUE #( BASE ct_idoc_data
      (   &quot; Item 1
        segnam  = &apos;E1FISEG&apos;
*    mandt   =
*    docnum  =
*    segnum  =
*    psgnum  =
*    hlevel  =
        sdata   = ls_idoc_e1fiseg
      )
      (
        segnam  = &apos;E1FISE2&apos;
*    mandt   =
*    docnum  =
*    segnum  =
*    psgnum  =
*    hlevel  =
        sdata   = ls_idoc_e1fise2
      )
    ).


  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="GET_PHYSICAL_PATH" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="5 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="GET_PHYSICAL_PATH" SCONAME="IV_LOGICAL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="PATHINTERN"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="GET_PHYSICAL_PATH" SCONAME="IV_FILENAME" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="EPS2FILNAM" PAROPTIONL="X"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="GET_PHYSICAL_PATH" SCONAME="RV_FILE_PATH" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="3 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="STRING"/>
   <source>METHOD get_physical_path.

    DATA: lv_filename TYPE eps2filnam.

    IF iv_filename IS NOT INITIAL.
      lv_filename = iv_filename.
    ELSE.
      lv_filename = &apos;X&apos;.
    ENDIF.

    CALL FUNCTION &apos;FILE_GET_NAME_USING_PATH&apos;
      EXPORTING
        logical_path               = iv_logical &quot;&apos;Z_GLIF_BOOKNG&apos; &quot;&quot;gs_convcust-sap_folder_source
        file_name                  = lv_filename
      IMPORTING
        file_name_with_path        = rv_file_path
      EXCEPTIONS
        path_not_found             = 1
        missing_parameter          = 2
        operating_system_not_found = 3
        file_system_not_found      = 4
        OTHERS                     = 5.
    IF sy-subrc = 1.
      &quot; path not found, probably used physical path, return it
      rv_file_path = iv_logical.
    ELSEIF sy-subrc &lt;&gt; 0.
      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4 INTO DATA(lv_message).
      WRITE: / lv_message.
      RETURN.
    ENDIF.

    IF iv_filename IS INITIAL.

      DATA(lv_len) = strlen( rv_file_path ).
      SUBTRACT 1 FROM lv_len.
      rv_file_path = rv_file_path(lv_len).    &quot; get rid of X at the end

    ENDIF.

  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="PARSE_DATA" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="1 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" MTDNEWEXC="X" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="PARSE_DATA" SCONAME="IT_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="0" PARPASSTYP="1" TYPTYPE="1" TYPE="STRINGTAB"/>
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="PARSE_DATA" SCONAME="RT_PARSED_DATA" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="2 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="TY_BOOK_CSV_T"/>
   <exception CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="PARSE_DATA" SCONAME="ZCX_GENERIC_EXCEPTION" VERSION="1" LANGU="E" MTDTYPE="0" EDITORDER="1 "/>
   <source>METHOD parse_data.
    CONSTANTS: lc_delimit_comma   TYPE c VALUE &apos;,&apos;,
               lc_delimit_semicol TYPE c VALUE &apos;;&apos;.

    DATA: lv_delimit  TYPE c,
          lv_num6     TYPE n LENGTH 6,
          lv_batch_id TYPE zglif_batch_id.

    lv_batch_id = gs_file-name+4(10).
    lv_batch_id = |{ lv_batch_id ALPHA = IN }|.



    LOOP AT it_data REFERENCE INTO DATA(ls_data_string).
      APPEND INITIAL LINE TO rt_parsed_data ASSIGNING FIELD-SYMBOL(&lt;ls_parsed_data&gt;).

      IF ls_data_string-&gt;* CS &apos;;&apos;.
        lv_delimit = lc_delimit_semicol.
      ELSE.
        lv_delimit = lc_delimit_comma.
      ENDIF.

      SPLIT ls_data_string-&gt;* AT lv_delimit INTO
          &lt;ls_parsed_data&gt;-batch_id
          &lt;ls_parsed_data&gt;-message_id
          &lt;ls_parsed_data&gt;-line_item
          &lt;ls_parsed_data&gt;-company_code
          &lt;ls_parsed_data&gt;-document_type
          &lt;ls_parsed_data&gt;-document_date
          &lt;ls_parsed_data&gt;-posting_date
          &lt;ls_parsed_data&gt;-period
          &lt;ls_parsed_data&gt;-ledger
          &lt;ls_parsed_data&gt;-header_text
          &lt;ls_parsed_data&gt;-debit_credit
          &lt;ls_parsed_data&gt;-gl_account
          &lt;ls_parsed_data&gt;-currency
          &lt;ls_parsed_data&gt;-amount_document
          &lt;ls_parsed_data&gt;-amount_local
          &lt;ls_parsed_data&gt;-segment
          &lt;ls_parsed_data&gt;-cost_center
          &lt;ls_parsed_data&gt;-order_number
          &lt;ls_parsed_data&gt;-profit_center
          &lt;ls_parsed_data&gt;-item_text
          &lt;ls_parsed_data&gt;-assigment
          &lt;ls_parsed_data&gt;-reference1
          &lt;ls_parsed_data&gt;-reference2
          &lt;ls_parsed_data&gt;-reference3
          .

      &quot; to properly convert string to numc6.
      ADD &lt;ls_parsed_data&gt;-line_item TO lv_num6.
      &lt;ls_parsed_data&gt;-line_item = lv_num6.
      CLEAR lv_num6.

      &lt;ls_parsed_data&gt;-gl_account = |{ &lt;ls_parsed_data&gt;-gl_account ALPHA = IN }|.
      &lt;ls_parsed_data&gt;-batch_id = |{ &lt;ls_parsed_data&gt;-batch_id ALPHA = IN }|.

      IF &lt;ls_parsed_data&gt;-batch_id &lt;&gt; lv_batch_id.
        WRITE / |Data inconsistency. Batch ID in file data is different that in filename|.
        zcx_generic_exception=&gt;raise( |Data inconsistency. Batch ID in file data is different that in filename| ).
      ENDIF.

    ENDLOOP.

    SORT rt_parsed_data BY batch_id message_id line_item.


  ENDMETHOD.</source>
  </method>
  <method CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="PREPARE_IDOC_CONTROL_ENTRY" VERSION="1" LANGU="E" EXPOSURE="0" STATE="1" EDITORDER="2 " DISPID="0 " MTDTYPE="0" MTDDECLTYP="0" BCMTDCAT="00" BCMTDSYN="0">
   <parameter CLSNAME="ZGLIF_CONVERTOR_CSV" CMPNAME="PREPARE_IDOC_CONTROL_ENTRY" SCONAME="RS_IDOC_CONTROL" VERSION="1" LANGU="E" CMPTYPE="1" MTDTYPE="0" EDITORDER="1 " DISPID="0 " PARDECLTYP="3" PARPASSTYP="0" TYPTYPE="1" TYPE="EDI_DC40"/>
   <source>METHOD prepare_idoc_control_entry.

    rs_idoc_control = VALUE edi_dc40(
        tabnam  = &apos;EDI_DC40&apos;
*        mandt   =
*        docnum  =
*        docrel  =
        status  = 64
        direct  = 2     &quot; Idoc direction - outbout idoc 2, inbound idoc 1
*        outmod  =
*        exprss  =
*        test    =
        idoctyp = &apos;FIDCCP02&apos;
*        cimtyp  = &apos;YFIDCCP02&apos;
        mestyp  = &apos;FIDCC2&apos;
*        mescod  =
*        mesfct  =
*        std     =
*        stdvrs  =
*        stdmes  =
        sndpor  = COND #( WHEN gs_convcust-edi_sndpor IS NOT INITIAL THEN gs_convcust-edi_sndpor ELSE &apos;SAP&apos; ) &quot;&apos;SAP&apos;
        sndprt  = COND #( WHEN gs_convcust-edi_sndprt IS NOT INITIAL THEN gs_convcust-edi_sndprt ELSE &apos;LS&apos; ) &quot;&apos;LS&apos;
*        sndpfc  =
        sndprn  = COND #( WHEN gs_convcust-edi_sndprn IS NOT INITIAL THEN gs_convcust-edi_sndprn ELSE &apos;BOOKNG&apos; ) &quot;&apos;BOOKNG&apos;
*        sndsad  =
*        sndlad  =
        rcvpor  = COND #( WHEN gs_convcust-edi_rcvpor IS NOT INITIAL THEN gs_convcust-edi_rcvpor ELSE |SAP{ sy-sysid }| ) &quot; |SAP{ sy-sysid }|
        rcvprt  = COND #( WHEN gs_convcust-edi_rcvprt IS NOT INITIAL THEN gs_convcust-edi_rcvprt ELSE &apos;LS&apos; ) &quot;&apos;LS&apos;
*       rcvpfc  =
        rcvprn  = COND #( WHEN gs_convcust-edi_rcvprn IS NOT INITIAL THEN gs_convcust-edi_rcvprn ELSE |{ sy-sysid }CLNT{ sy-mandt }| ) &quot;|{ sy-sysid }CLNT{ sy-mandt }|
*        rcvsad  =
*        rcvlad  =
*        credat  =
*        cretim  =
*        refint  =
*        refgrp  =
*        refmes  =
*        arckey  =
*        serial  =
      ).
  ENDMETHOD.</source>
  </method>
 </CLAS>
 <DEVC DEVCLASS="ZGLIF" CTEXT="Main package for GLIF: General Ledger development" LANGUAGE="E" MASTERLANG="E" KORRFLAG="X" PDEVCLASS="ZDEV" DLVUNIT="HOME" NAMESPACE="/0CUST/" CREATED_BY="HQ_KST" CREATED_ON="20170310" CHANGED_BY="HQ_MFE" CHANGED_ON="20200909" PROJECT_GUID="00000000000000000000000000000000"/>
 <DOMA DOMNAME="ZGLIF_SCRIPT_NAME" MultiLanguageSupport="X">
  <DDLANGUAGE LANGU="1">
   <DD01V DOMNAME="ZGLIF_SCRIPT_NAME" DDLANGUAGE="1" DATATYPE="CHAR" LENG="000018" OUTPUTLEN="000018" DECIMALS="000000" LOWERCASE="X" MASKLEN="0000" DDTEXT="GLIF: Feeder script name" AUTHCLASS="00" OUTPUTSTYLE="00"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD01V DOMNAME="ZGLIF_SCRIPT_NAME" DDLANGUAGE="E" DATATYPE="CHAR" LENG="000018" OUTPUTLEN="000018" DECIMALS="000000" LOWERCASE="X" MASKLEN="0000" DDTEXT="GLIF: Feeder script name" AUTHCLASS="00" OUTPUTSTYLE="00"/>
  </DDLANGUAGE>
 </DOMA>
 <DOMA DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" MultiLanguageSupport="X">
  <DDLANGUAGE LANGU="1">
   <DD01V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" DDLANGUAGE="1" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" VALEXI="X" MASKLEN="0000" DDTEXT="GLIF: Batch Status" AUTHCLASS="00" OUTPUTSTYLE="00"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0001" DDLANGUAGE="1" DOMVALUE_L="00" DDTEXT="Downloaded"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0002" DDLANGUAGE="1" DOMVALUE_L="01" DDTEXT="Download Error"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0003" DOMVALUE_L="02"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0004" DDLANGUAGE="1" DOMVALUE_L="10" DDTEXT="Converted"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0005" DDLANGUAGE="1" DOMVALUE_L="11" DDTEXT="Conversion Error"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0006" DDLANGUAGE="1" DOMVALUE_L="20" DDTEXT="Test Processing OK"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0007" DDLANGUAGE="1" DOMVALUE_L="21" DDTEXT="Test Processing Fail"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0008" DDLANGUAGE="1" DOMVALUE_L="30" DDTEXT="Processing OK"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0009" DDLANGUAGE="1" DOMVALUE_L="31" DDTEXT="Processing Fail"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0010" DDLANGUAGE="1" DOMVALUE_L="50" DDTEXT="Corrected"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0011" DDLANGUAGE="1" DOMVALUE_L="51" DDTEXT="Being Corrected"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0012" DDLANGUAGE="1" DOMVALUE_L="52" DDTEXT="Workflow not started"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0013" DOMVALUE_L="98"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0014" DDLANGUAGE="1" DOMVALUE_L="99" DDTEXT="Canceled"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD01V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" DDLANGUAGE="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" VALEXI="X" MASKLEN="0000" DDTEXT="GLIF: Batch Status" AUTHCLASS="00" OUTPUTSTYLE="00"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0001" DDLANGUAGE="E" DOMVALUE_L="00" DDTEXT="Downloaded"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0002" DDLANGUAGE="E" DOMVALUE_L="01" DDTEXT="Download Error"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0003" DDLANGUAGE="E" DOMVALUE_L="02" DDTEXT="Downloaded - data error"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0004" DDLANGUAGE="E" DOMVALUE_L="10" DDTEXT="Converted"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0005" DDLANGUAGE="E" DOMVALUE_L="11" DDTEXT="Conversion Error"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0006" DDLANGUAGE="E" DOMVALUE_L="20" DDTEXT="Test Processing OK"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0007" DDLANGUAGE="E" DOMVALUE_L="21" DDTEXT="Test Processing Fail"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0008" DDLANGUAGE="E" DOMVALUE_L="30" DDTEXT="Processing OK"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0009" DDLANGUAGE="E" DOMVALUE_L="31" DDTEXT="Processing Fail"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0010" DDLANGUAGE="E" DOMVALUE_L="50" DDTEXT="Corrected"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0011" DDLANGUAGE="E" DOMVALUE_L="51" DDTEXT="Being Corrected"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0012" DDLANGUAGE="E" DOMVALUE_L="52" DDTEXT="Workflow not started"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0013" DDLANGUAGE="E" DOMVALUE_L="98" DDTEXT="Canceled because of zero items"/>
   <DD07V DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" VALPOS="0014" DDLANGUAGE="E" DOMVALUE_L="99" DDTEXT="Canceled"/>
  </DDLANGUAGE>
 </DOMA>
 <DOMA DOMNAME="ZGLIF_MESSAGE_ID_DOM" MultiLanguageSupport="X">
  <DDLANGUAGE LANGU="1">
   <DD01V DOMNAME="ZGLIF_MESSAGE_ID_DOM" DDLANGUAGE="1" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" LOWERCASE="X" CONVEXIT="ALPHA" MASKLEN="0000" DDTEXT="GLIF: Message ID domain" AUTHCLASS="00" OUTPUTSTYLE="00"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD01V DOMNAME="ZGLIF_MESSAGE_ID_DOM" DDLANGUAGE="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" LOWERCASE="X" CONVEXIT="ALPHA" MASKLEN="0000" DDTEXT="GLIF: Message ID domain" AUTHCLASS="00" OUTPUTSTYLE="00"/>
  </DDLANGUAGE>
 </DOMA>
 <DOMA DOMNAME="ZGLIF_CATEGORY_DOM" MultiLanguageSupport="X">
  <DDLANGUAGE LANGU="1">
   <DD01V DOMNAME="ZGLIF_CATEGORY_DOM" DDLANGUAGE="1" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" MASKLEN="0000" DDTEXT="GLIF: Domain for Message categories" AUTHCLASS="00" OUTPUTSTYLE="00"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD01V DOMNAME="ZGLIF_CATEGORY_DOM" DDLANGUAGE="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" MASKLEN="0000" DDTEXT="GLIF: Domain for Message categories" AUTHCLASS="00" OUTPUTSTYLE="00"/>
  </DDLANGUAGE>
 </DOMA>
 <DOMA DOMNAME="ZGLIF_BATCH_STATUS_DOM" MultiLanguageSupport="X">
  <DDLANGUAGE LANGU="1">
   <DD01V DOMNAME="ZGLIF_BATCH_STATUS_DOM" DDLANGUAGE="1" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" VALEXI="X" MASKLEN="0000" DDTEXT="GLIF: Batch Status" AUTHCLASS="00" OUTPUTSTYLE="00"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0001" DDLANGUAGE="1" DOMVALUE_L="00" DDTEXT="Downloaded"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0002" DDLANGUAGE="1" DOMVALUE_L="01" DDTEXT="Download Error"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0003" DOMVALUE_L="02"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0004" DDLANGUAGE="1" DOMVALUE_L="10" DDTEXT="Converted"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0005" DDLANGUAGE="1" DOMVALUE_L="11" DDTEXT="Conversion Error"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0006" DOMVALUE_L="15"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0007" DDLANGUAGE="1" DOMVALUE_L="20" DDTEXT="Test Processing OK"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0008" DDLANGUAGE="1" DOMVALUE_L="21" DDTEXT="Test Processing Fail"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0009" DOMVALUE_L="25"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0010" DDLANGUAGE="1" DOMVALUE_L="30" DDTEXT="Processing OK"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0011" DDLANGUAGE="1" DOMVALUE_L="31" DDTEXT="Processing Fail"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0012" DDLANGUAGE="1" DOMVALUE_L="50" DDTEXT="Corrected"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0013" DDLANGUAGE="1" DOMVALUE_L="51" DDTEXT="Being corrected"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0014" DDLANGUAGE="1" DOMVALUE_L="52" DDTEXT="Workflow not started"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0015" DDLANGUAGE="1" DOMVALUE_L="99" DDTEXT="Canceled"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD01V DOMNAME="ZGLIF_BATCH_STATUS_DOM" DDLANGUAGE="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" VALEXI="X" MASKLEN="0000" DDTEXT="GLIF: Batch Status" AUTHCLASS="00" OUTPUTSTYLE="00"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0001" DDLANGUAGE="E" DOMVALUE_L="00" DDTEXT="Downloaded"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0002" DDLANGUAGE="E" DOMVALUE_L="01" DDTEXT="Download Error"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0003" DDLANGUAGE="E" DOMVALUE_L="02" DDTEXT="Downloaded - data error"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0004" DDLANGUAGE="E" DOMVALUE_L="10" DDTEXT="Converted"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0005" DDLANGUAGE="E" DOMVALUE_L="11" DDTEXT="Conversion Error"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0006" DDLANGUAGE="E" DOMVALUE_L="15" DDTEXT="Test Processing Run"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0007" DDLANGUAGE="E" DOMVALUE_L="20" DDTEXT="Test Processing OK"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0008" DDLANGUAGE="E" DOMVALUE_L="21" DDTEXT="Test Processing Fail"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0009" DDLANGUAGE="E" DOMVALUE_L="25" DDTEXT="Processing Run"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0010" DDLANGUAGE="E" DOMVALUE_L="30" DDTEXT="Processing OK"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0011" DDLANGUAGE="E" DOMVALUE_L="31" DDTEXT="Processing Fail"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0012" DDLANGUAGE="E" DOMVALUE_L="50" DDTEXT="Corrected"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0013" DDLANGUAGE="E" DOMVALUE_L="51" DDTEXT="Being corrected"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0014" DDLANGUAGE="E" DOMVALUE_L="52" DDTEXT="Workflow not started"/>
   <DD07V DOMNAME="ZGLIF_BATCH_STATUS_DOM" VALPOS="0015" DDLANGUAGE="E" DOMVALUE_L="99" DDTEXT="Canceled"/>
  </DDLANGUAGE>
 </DOMA>
 <DOMA DOMNAME="ZGLIF_BATCH_ID_DOM" MultiLanguageSupport="X">
  <DDLANGUAGE LANGU="1">
   <DD01V DOMNAME="ZGLIF_BATCH_ID_DOM" DDLANGUAGE="1" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" LOWERCASE="X" CONVEXIT="ALPHA" MASKLEN="0000" DDTEXT="GLIF: Batch ID domain" AUTHCLASS="00" OUTPUTSTYLE="00"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD01V DOMNAME="ZGLIF_BATCH_ID_DOM" DDLANGUAGE="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" LOWERCASE="X" CONVEXIT="ALPHA" MASKLEN="0000" DDTEXT="GLIF: Batch ID domain" AUTHCLASS="00" OUTPUTSTYLE="00"/>
  </DDLANGUAGE>
 </DOMA>
 <DOMA DOMNAME="ZGLIF_TABLENAME_DOM" MultiLanguageSupport="X">
  <DDLANGUAGE LANGU="1">
   <DD01V DOMNAME="ZGLIF_TABLENAME_DOM" DDLANGUAGE="1" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" LOWERCASE="X" MASKLEN="0000" DDTEXT="GLIF: Table name" AUTHCLASS="00" OUTPUTSTYLE="00"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD01V DOMNAME="ZGLIF_TABLENAME_DOM" DDLANGUAGE="E" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" LOWERCASE="X" MASKLEN="0000" DDTEXT="GLIF: Table name" AUTHCLASS="00" OUTPUTSTYLE="00"/>
  </DDLANGUAGE>
 </DOMA>
 <DTEL ROLLNAME="ZGLIF_MODIFIED_AT" DDLANGUAGE="E" DOMNAME="TIMS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: Modified At" REPTEXT="Modified At" SCRTEXT_S="ModifiedAt" SCRTEXT_M="Modified At" SCRTEXT_L="Modified At" AUTHCLASS="00" DTELMASTER="E" DATATYPE="TIMS" LENG="000006" DECIMALS="000000" OUTPUTLEN="000008" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_MODIFIED_AT" DDLANGUAGE="1" DOMNAME="TIMS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: Modified At" REPTEXT="Modified At" SCRTEXT_S="ModifiedAt" SCRTEXT_M="Modified At" SCRTEXT_L="Modified At" AUTHCLASS="00" DTELMASTER="E" DATATYPE="TIMS" LENG="000006" DECIMALS="000000" OUTPUTLEN="000008" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_MODIFIED_AT" DDLANGUAGE="E" DOMNAME="TIMS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: Modified At" REPTEXT="Modified At" SCRTEXT_S="ModifiedAt" SCRTEXT_M="Modified At" SCRTEXT_L="Modified At" AUTHCLASS="00" DTELMASTER="E" DATATYPE="TIMS" LENG="000006" DECIMALS="000000" OUTPUTLEN="000008" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_MESSAGE_STATUS" DDLANGUAGE="E" DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Message status" REPTEXT="Message Status" SCRTEXT_S="M. Status" SCRTEXT_M="Message Status" SCRTEXT_L="Message Status" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" DECIMALS="000000" OUTPUTLEN="000002" LOWERCASE="X" VALEXI="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_MESSAGE_STATUS" DDLANGUAGE="1" DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Message status" REPTEXT="Message Status" SCRTEXT_S="M. Status" SCRTEXT_M="Message Status" SCRTEXT_L="Message Status" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" DECIMALS="000000" OUTPUTLEN="000002" LOWERCASE="X" VALEXI="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_MESSAGE_STATUS" DDLANGUAGE="E" DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Message status" REPTEXT="Message Status" SCRTEXT_S="M. Status" SCRTEXT_M="Message Status" SCRTEXT_L="Message Status" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" DECIMALS="000000" OUTPUTLEN="000002" LOWERCASE="X" VALEXI="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_MESSAGE_PARAMETER" DDLANGUAGE="E" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" DECIMALS="000000" OUTPUTLEN="000050" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_MESSAGE_PARAMETER" DDLANGUAGE="1" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" DECIMALS="000000" OUTPUTLEN="000050"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_MESSAGE_PARAMETER" DDLANGUAGE="E" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" DECIMALS="000000" OUTPUTLEN="000050"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_MESSAGE_ID" DDLANGUAGE="E" DOMNAME="ZGLIF_MESSAGE_ID_DOM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Message ID" REPTEXT="Message ID" SCRTEXT_S="Message ID" SCRTEXT_M="Message ID" SCRTEXT_L="Message ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" LOWERCASE="X" CONVEXIT="ALPHA" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_MESSAGE_ID" DDLANGUAGE="1" DOMNAME="ZGLIF_MESSAGE_ID_DOM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Message ID" REPTEXT="Message ID" SCRTEXT_S="Message ID" SCRTEXT_M="Message ID" SCRTEXT_L="Message ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" LOWERCASE="X" CONVEXIT="ALPHA" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_MESSAGE_ID" DDLANGUAGE="E" DOMNAME="ZGLIF_MESSAGE_ID_DOM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Message ID" REPTEXT="Message ID" SCRTEXT_S="Message ID" SCRTEXT_M="Message ID" SCRTEXT_L="Message ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" LOWERCASE="X" CONVEXIT="ALPHA" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_LOG_CREATE_OWN" DDLANGUAGE="E" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Create own dispatcher log, or use log from program" REPTEXT="Own Log" SCRTEXT_S="Own Log" SCRTEXT_M="Own Log" SCRTEXT_L="Own Log" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_LOG_CREATE_OWN" DDLANGUAGE="E" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Create own dispatcher log, or use log from program" REPTEXT="Own Log" SCRTEXT_S="Own Log" SCRTEXT_M="Own Log" SCRTEXT_L="Own Log" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_LOG_ACTIVATE" DDLANGUAGE="E" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Activate/Deactive Logging" REPTEXT="Log Active" SCRTEXT_S="Log Active" SCRTEXT_M="Log Active" SCRTEXT_L="Log Active" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_LOG_ACTIVATE" DDLANGUAGE="E" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Activate/Deactive Logging" REPTEXT="Log Active" SCRTEXT_S="Log Active" SCRTEXT_M="Log Active" SCRTEXT_L="Log Active" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_INTERFACE_NAME" DDLANGUAGE="E" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" AUTHCLASS="00" DTELMASTER="E" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DATATYPE="CHAR" LENG="000016" DECIMALS="000000" OUTPUTLEN="000016" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_INTERFACE_NAME" DDLANGUAGE="1" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" AUTHCLASS="00" DTELMASTER="E" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DATATYPE="CHAR" LENG="000016" DECIMALS="000000" OUTPUTLEN="000016" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_INTERFACE_NAME" DDLANGUAGE="E" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" AUTHCLASS="00" DTELMASTER="E" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DATATYPE="CHAR" LENG="000016" DECIMALS="000000" OUTPUTLEN="000016" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_INTERFACE_ACTIVE" DDLANGUAGE="E" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Indicate status of the row: Active (X), Inactive (&apos; &apos;)" REPTEXT="Interface Active" SCRTEXT_S="Active" SCRTEXT_M="Active" SCRTEXT_L="Interface Active" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_INTERFACE_ACTIVE" DDLANGUAGE="1" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Indicate status of the row: Active (X), Inactive (&apos; &apos;)" REPTEXT="Interface Active" SCRTEXT_S="Active" SCRTEXT_M="Active" SCRTEXT_L="Interface Active" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_INTERFACE_ACTIVE" DDLANGUAGE="E" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Indicate status of the row: Active (X), Inactive (&apos; &apos;)" REPTEXT="Interface Active" SCRTEXT_S="Active" SCRTEXT_M="Active" SCRTEXT_L="Interface Active" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_IDOC_STATUS" DDLANGUAGE="E" DOMNAME="EDI_STATUS" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="IDoc Status" REPTEXT="IDoc Status" SCRTEXT_S="IDoc Stat." SCRTEXT_M="IDoc Status" SCRTEXT_L="IDoc Status" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" DECIMALS="000000" OUTPUTLEN="000002" ENTITYTAB="TEDS1" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_IDOC_STATUS" DDLANGUAGE="1" DOMNAME="EDI_STATUS" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="IDoc Status" REPTEXT="IDoc Status" SCRTEXT_S="IDoc Stat." SCRTEXT_M="IDoc Status" SCRTEXT_L="IDoc Status" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" DECIMALS="000000" OUTPUTLEN="000002" ENTITYTAB="TEDS1" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_IDOC_STATUS" DDLANGUAGE="E" DOMNAME="EDI_STATUS" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="IDoc Status" REPTEXT="IDoc Status" SCRTEXT_S="IDoc Stat." SCRTEXT_M="IDoc Status" SCRTEXT_L="IDoc Status" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" DECIMALS="000000" OUTPUTLEN="000002" ENTITYTAB="TEDS1" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_IDOC_NUMBER" DDLANGUAGE="E" DOMNAME="EDI_DOCNUM" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="08" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: IDoc number" REPTEXT="IDoc Number" SCRTEXT_S="IDoc No." SCRTEXT_M="IDoc Number" SCRTEXT_L="IDoc Number" AUTHCLASS="00" DTELMASTER="E" DATATYPE="NUMC" LENG="000016" DECIMALS="000000" OUTPUTLEN="000016" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_IDOC_NUMBER" DDLANGUAGE="1" DOMNAME="EDI_DOCNUM" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="08" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: IDoc number" REPTEXT="IDoc Number" SCRTEXT_S="IDoc No." SCRTEXT_M="IDoc Number" SCRTEXT_L="IDoc Number" AUTHCLASS="00" DTELMASTER="E" DATATYPE="NUMC" LENG="000016" DECIMALS="000000" OUTPUTLEN="000016" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_IDOC_NUMBER" DDLANGUAGE="E" DOMNAME="EDI_DOCNUM" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="08" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: IDoc number" REPTEXT="IDoc Number" SCRTEXT_S="IDoc No." SCRTEXT_M="IDoc Number" SCRTEXT_L="IDoc Number" AUTHCLASS="00" DTELMASTER="E" DATATYPE="NUMC" LENG="000016" DECIMALS="000000" OUTPUTLEN="000016" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_GROSS_NET" DDLANGUAGE="E" DOMNAME="CHAR1" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF:Gross/Net indicator" REPTEXT="Gross/Net Indicator" SCRTEXT_S="Gross/Net" SCRTEXT_M="Gross/Net Indicator" SCRTEXT_L="Gross/Net Indicator" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_GROSS_NET" DDLANGUAGE="E" DOMNAME="CHAR1" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF:Gross/Net indicator" REPTEXT="Gross/Net Indicator" SCRTEXT_S="Gross/Net" SCRTEXT_M="Gross/Net Indicator" SCRTEXT_L="Gross/Net Indicator" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_FTP_USER" DDLANGUAGE="E" DOMNAME="TEXT30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: FTP user name" REPTEXT="FTP user name" SCRTEXT_S="FTP user" SCRTEXT_M="FTP user name" SCRTEXT_L="FTP user name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_FTP_USER" DDLANGUAGE="1" DOMNAME="TEXT30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: FTP user name" REPTEXT="FTP user name" SCRTEXT_S="FTP user" SCRTEXT_M="FTP user name" SCRTEXT_L="FTP user name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_FTP_USER" DDLANGUAGE="E" DOMNAME="TEXT30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: FTP user name" REPTEXT="FTP user name" SCRTEXT_S="FTP user" SCRTEXT_M="FTP user name" SCRTEXT_L="FTP user name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_FTP_FOLDER" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="17" SCRLEN1="10" SCRLEN2="17" SCRLEN3="23" DDTEXT="GLIF: FTP Folder" REPTEXT="FTP Source Folder" SCRTEXT_S="FTP Source" SCRTEXT_M="FTP Source Folder" SCRTEXT_L="FTP Source Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_FTP_FOLDER" DDLANGUAGE="1" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="17" SCRLEN1="10" SCRLEN2="17" SCRLEN3="23" DDTEXT="GLIF: FTP Folder" REPTEXT="FTP Source Folder" SCRTEXT_S="FTP Source" SCRTEXT_M="FTP Source Folder" SCRTEXT_L="FTP Source Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_FTP_FOLDER" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="17" SCRLEN1="10" SCRLEN2="17" SCRLEN3="23" DDTEXT="GLIF: FTP Folder" REPTEXT="FTP Source Folder" SCRTEXT_S="FTP Source" SCRTEXT_M="FTP Source Folder" SCRTEXT_L="FTP Source Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_FTP_FOLDER_ERRORS" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: FTP Folder for Errors" REPTEXT="FTP Errors Folder" SCRTEXT_S="FTP Errors" SCRTEXT_M="FTP Errors Folder" SCRTEXT_L="FTP Errors Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_FTP_FOLDER_ERRORS" DDLANGUAGE="1" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: FTP Folder for Errors" REPTEXT="FTP Errors Folder" SCRTEXT_S="FTP Errors" SCRTEXT_M="FTP Errors Folder" SCRTEXT_L="FTP Errors Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_FTP_FOLDER_ERRORS" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: FTP Folder for Errors" REPTEXT="FTP Errors Folder" SCRTEXT_S="FTP Errors" SCRTEXT_M="FTP Errors Folder" SCRTEXT_L="FTP Errors Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_FTP_FOLDER_PROCESSED" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: FTP Folder for Processed" REPTEXT="FTP Processed Folder" SCRTEXT_S="FTP Prcsd." SCRTEXT_M="FTP Processed Folder" SCRTEXT_L="FTP Processed Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_FTP_FOLDER_PROCESSED" DDLANGUAGE="1" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: FTP Folder for Processed" REPTEXT="FTP Processed Folder" SCRTEXT_S="FTP Prcsd." SCRTEXT_M="FTP Processed Folder" SCRTEXT_L="FTP Processed Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_FTP_FOLDER_PROCESSED" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: FTP Folder for Processed" REPTEXT="FTP Processed Folder" SCRTEXT_S="FTP Prcsd." SCRTEXT_M="FTP Processed Folder" SCRTEXT_L="FTP Processed Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_FTP_HOST" DDLANGUAGE="E" DOMNAME="TEXT80" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: FTP host name" REPTEXT="FTP host name" SCRTEXT_S="FTP host" SCRTEXT_M="FTP host name" SCRTEXT_L="FTP host name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000080" DECIMALS="000000" OUTPUTLEN="000080" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_FTP_HOST" DDLANGUAGE="1" DOMNAME="TEXT80" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: FTP host name" REPTEXT="FTP host name" SCRTEXT_S="FTP host" SCRTEXT_M="FTP host name" SCRTEXT_L="FTP host name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000080" DECIMALS="000000" OUTPUTLEN="000080" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_FTP_HOST" DDLANGUAGE="E" DOMNAME="TEXT80" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: FTP host name" REPTEXT="FTP host name" SCRTEXT_S="FTP host" SCRTEXT_M="FTP host name" SCRTEXT_L="FTP host name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000080" DECIMALS="000000" OUTPUTLEN="000080" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_FTP_PSWD" DDLANGUAGE="E" DOMNAME="TEXT80" ROUTPUTLEN="000000" HEADLEN="12" SCRLEN1="08" SCRLEN2="12" SCRLEN3="12" DDTEXT="GLIF: FTP password" REPTEXT="FTP password" SCRTEXT_S="FTp pswd" SCRTEXT_M="FTP password" SCRTEXT_L="FTP password" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000080" DECIMALS="000000" OUTPUTLEN="000080" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_FTP_PSWD" DDLANGUAGE="1" DOMNAME="TEXT80" ROUTPUTLEN="000000" HEADLEN="12" SCRLEN1="08" SCRLEN2="12" SCRLEN3="12" DDTEXT="GLIF: FTP password" REPTEXT="FTP password" SCRTEXT_S="FTp pswd" SCRTEXT_M="FTP password" SCRTEXT_L="FTP password" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000080" DECIMALS="000000" OUTPUTLEN="000080" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_FTP_PSWD" DDLANGUAGE="E" DOMNAME="TEXT80" ROUTPUTLEN="000000" HEADLEN="12" SCRLEN1="08" SCRLEN2="12" SCRLEN3="12" DDTEXT="GLIF: FTP password" REPTEXT="FTP password" SCRTEXT_S="FTp pswd" SCRTEXT_M="FTP password" SCRTEXT_L="FTP password" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000080" DECIMALS="000000" OUTPUTLEN="000080" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_MODIFIED_ON" DDLANGUAGE="E" DOMNAME="DATS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: Entry Modified On" REPTEXT="Changed On" SCRTEXT_S="Changed On" SCRTEXT_M="Changed On" SCRTEXT_L="Changed On" AUTHCLASS="00" DTELMASTER="E" DATATYPE="DATS" LENG="000008" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_MODIFIED_ON" DDLANGUAGE="1" DOMNAME="DATS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: Entry Modified On" REPTEXT="Changed On" SCRTEXT_S="Changed On" SCRTEXT_M="Changed On" SCRTEXT_L="Changed On" AUTHCLASS="00" DTELMASTER="E" DATATYPE="DATS" LENG="000008" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_MODIFIED_ON" DDLANGUAGE="E" DOMNAME="DATS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: Entry Modified On" REPTEXT="Changed On" SCRTEXT_S="Changed On" SCRTEXT_M="Changed On" SCRTEXT_L="Changed On" AUTHCLASS="00" DTELMASTER="E" DATATYPE="DATS" LENG="000008" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_MSGID" DDLANGUAGE="E" DOMNAME="ARBGB" ROUTPUTLEN="000000" HEADLEN="23" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Return Message Class ID" REPTEXT="Return Message Class ID" SCRTEXT_S="Class ID" SCRTEXT_M="Return Message Class" SCRTEXT_L="Return Message Class ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000020" DECIMALS="000000" OUTPUTLEN="000020" ENTITYTAB="T100A" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_MSGID" DDLANGUAGE="1" DOMNAME="ARBGB" ROUTPUTLEN="000000" HEADLEN="23" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Return Message Class ID" REPTEXT="Return Message Class ID" SCRTEXT_S="Class ID" SCRTEXT_M="Return Message Class" SCRTEXT_L="Return Message Class ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000020" DECIMALS="000000" OUTPUTLEN="000020" ENTITYTAB="T100A" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_MSGID" DDLANGUAGE="E" DOMNAME="ARBGB" ROUTPUTLEN="000000" HEADLEN="23" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Return Message Class ID" REPTEXT="Return Message Class ID" SCRTEXT_S="Class ID" SCRTEXT_M="Return Message Class" SCRTEXT_L="Return Message Class ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000020" DECIMALS="000000" OUTPUTLEN="000020" ENTITYTAB="T100A" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_MSGNO" DDLANGUAGE="E" DOMNAME="MSGNR" ROUTPUTLEN="000000" HEADLEN="21" SCRLEN1="08" SCRLEN2="19" SCRLEN3="21" DDTEXT="Return Message Number" REPTEXT="Return Message Number" SCRTEXT_S="Msg. No." SCRTEXT_M="Return Mess. Number" SCRTEXT_L="Return Message Number" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000003" DECIMALS="000000" OUTPUTLEN="000003" ENTITYTAB="T100" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_MSGNO" DDLANGUAGE="1" DOMNAME="MSGNR" ROUTPUTLEN="000000" HEADLEN="21" SCRLEN1="08" SCRLEN2="19" SCRLEN3="21" DDTEXT="Return Message Number" REPTEXT="Return Message Number" SCRTEXT_S="Msg. No." SCRTEXT_M="Return Mess. Number" SCRTEXT_L="Return Message Number" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000003" DECIMALS="000000" OUTPUTLEN="000003" ENTITYTAB="T100" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_MSGNO" DDLANGUAGE="E" DOMNAME="MSGNR" ROUTPUTLEN="000000" HEADLEN="21" SCRLEN1="08" SCRLEN2="19" SCRLEN3="21" DDTEXT="Return Message Number" REPTEXT="Return Message Number" SCRTEXT_S="Msg. No." SCRTEXT_M="Return Mess. Number" SCRTEXT_L="Return Message Number" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000003" DECIMALS="000000" OUTPUTLEN="000003" ENTITYTAB="T100" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_MSGTY" DDLANGUAGE="E" DOMNAME="SYCHAR01" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="08" SCRLEN2="19" SCRLEN3="19" DDTEXT="Return Message Type" REPTEXT="Return Message Type" SCRTEXT_S="Msg Type" SCRTEXT_M="Return Message Type" SCRTEXT_L="Return Message Type" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_MSGTY" DDLANGUAGE="1" DOMNAME="SYCHAR01" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="08" SCRLEN2="19" SCRLEN3="19" DDTEXT="Return Message Type" REPTEXT="Return Message Type" SCRTEXT_S="Msg Type" SCRTEXT_M="Return Message Type" SCRTEXT_L="Return Message Type" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_MSGTY" DDLANGUAGE="E" DOMNAME="SYCHAR01" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="08" SCRLEN2="19" SCRLEN3="19" DDTEXT="Return Message Type" REPTEXT="Return Message Type" SCRTEXT_S="Msg Type" SCRTEXT_M="Return Message Type" SCRTEXT_L="Return Message Type" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_PRCTR_SOURCE" DDLANGUAGE="E" DOMNAME="CHAR10" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="20" SCRLEN3="20" DDTEXT="Source Profit Center" REPTEXT="Source Profit Center" SCRTEXT_S="Pr.C.Src." SCRTEXT_M="Source Profit Center" SCRTEXT_L="Source Profit Center" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_PRCTR_SOURCE" DDLANGUAGE="1" DOMNAME="CHAR10" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="20" SCRLEN3="20" DDTEXT="Source Profit Center" REPTEXT="Source Profit Center" SCRTEXT_S="Pr.C.Src." SCRTEXT_M="Source Profit Center" SCRTEXT_L="Source Profit Center" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_PRCTR_SOURCE" DDLANGUAGE="E" DOMNAME="CHAR10" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="20" SCRLEN3="20" DDTEXT="Source Profit Center" REPTEXT="Source Profit Center" SCRTEXT_S="Pr.C.Src." SCRTEXT_M="Source Profit Center" SCRTEXT_L="Source Profit Center" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_PRCTR_TARGET" DDLANGUAGE="E" DOMNAME="PRCTR" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="20" SCRLEN3="20" DDTEXT="Source Profit Center" REPTEXT="Target Profit Center" SCRTEXT_S="Pr.C.Trg." SCRTEXT_M="Target Profit Center" SCRTEXT_L="Target Profit Center" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" CONVEXIT="ALPHA" ENTITYTAB="CEPC" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_PRCTR_TARGET" DDLANGUAGE="1" DOMNAME="PRCTR" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="20" SCRLEN3="20" DDTEXT="Source Profit Center" REPTEXT="Target Profit Center" SCRTEXT_S="Pr.C.Trg." SCRTEXT_M="Target Profit Center" SCRTEXT_L="Target Profit Center" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" CONVEXIT="ALPHA" ENTITYTAB="CEPC" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_PRCTR_TARGET" DDLANGUAGE="E" DOMNAME="PRCTR" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="20" SCRLEN3="20" DDTEXT="Source Profit Center" REPTEXT="Target Profit Center" SCRTEXT_S="Pr.C.Trg." SCRTEXT_M="Target Profit Center" SCRTEXT_L="Target Profit Center" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" CONVEXIT="ALPHA" ENTITYTAB="CEPC" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_PROCESSOR_CLASS_NAME" DDLANGUAGE="E" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="15" SCRLEN3="20" DDTEXT="GLIF: Processor Class name" REPTEXT="Processor Class name" SCRTEXT_S="Processor" SCRTEXT_M="Processor Class" SCRTEXT_L="Processor Class name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_PROCESSOR_CLASS_NAME" DDLANGUAGE="1" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="15" SCRLEN3="20" DDTEXT="GLIF: Processor Class name" REPTEXT="Processor Class name" SCRTEXT_S="Processor" SCRTEXT_M="Processor Class" SCRTEXT_L="Processor Class name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_PROCESSOR_CLASS_NAME" DDLANGUAGE="E" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="15" SCRLEN3="20" DDTEXT="GLIF: Processor Class name" REPTEXT="Processor Class name" SCRTEXT_S="Processor" SCRTEXT_M="Processor Class" SCRTEXT_L="Processor Class name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_PROCESSOR_MODE" DDLANGUAGE="E" ROUTPUTLEN="000000" HEADLEN="14" SCRLEN1="04" SCRLEN2="14" SCRLEN3="14" DDTEXT="GLIF: Processor mode" REPTEXT="Processor Mode" SCRTEXT_S="Mode" SCRTEXT_M="Processor Mode" SCRTEXT_L="Processor Mode" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000004" DECIMALS="000000" OUTPUTLEN="000004" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_PROCESSOR_MODE" DDLANGUAGE="1" ROUTPUTLEN="000000" HEADLEN="14" SCRLEN1="04" SCRLEN2="14" SCRLEN3="14" DDTEXT="GLIF: Processor mode" REPTEXT="Processor Mode" SCRTEXT_S="Mode" SCRTEXT_M="Processor Mode" SCRTEXT_L="Processor Mode" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000004" DECIMALS="000000" OUTPUTLEN="000004"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_PROCESSOR_MODE" DDLANGUAGE="E" ROUTPUTLEN="000000" HEADLEN="14" SCRLEN1="04" SCRLEN2="14" SCRLEN3="14" DDTEXT="GLIF: Processor mode" REPTEXT="Processor Mode" SCRTEXT_S="Mode" SCRTEXT_M="Processor Mode" SCRTEXT_L="Processor Mode" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000004" DECIMALS="000000" OUTPUTLEN="000004"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_READY_FOR_PROCESS" DDLANGUAGE="E" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Is the record ready for Processing?" REPTEXT="Ready for Processing" SCRTEXT_S="Ready" SCRTEXT_M="Ready for Processing" SCRTEXT_L="Ready for Processing" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_READY_FOR_PROCESS" DDLANGUAGE="1" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Is the record ready for Processing?" REPTEXT="Ready for Processing" SCRTEXT_S="Ready" SCRTEXT_M="Ready for Processing" SCRTEXT_L="Ready for Processing" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_READY_FOR_PROCESS" DDLANGUAGE="E" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Is the record ready for Processing?" REPTEXT="Ready for Processing" SCRTEXT_S="Ready" SCRTEXT_M="Ready for Processing" SCRTEXT_L="Ready for Processing" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_SAP_FOLDER" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="10" SCRLEN2="18" SCRLEN3="25" DDTEXT="GLIF: SAP Application Server Folder" REPTEXT="SAP Folder" SCRTEXT_S="SAP Folder" SCRTEXT_M="SAP Folder" SCRTEXT_L="SAP Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_SAP_FOLDER" DDLANGUAGE="1" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="10" SCRLEN2="18" SCRLEN3="25" DDTEXT="GLIF: SAP Application Server Folder" REPTEXT="SAP Folder" SCRTEXT_S="SAP Folder" SCRTEXT_M="SAP Folder" SCRTEXT_L="SAP Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_SAP_FOLDER" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="10" SCRLEN2="18" SCRLEN3="25" DDTEXT="GLIF: SAP Application Server Folder" REPTEXT="SAP Folder" SCRTEXT_S="SAP Folder" SCRTEXT_M="SAP Folder" SCRTEXT_L="SAP Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_SAP_FOLDER_ERROR" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: SAP Applicatin Server Folder for documents in error" REPTEXT="Application Server Folder - Errors" SCRTEXT_S="SAP Error" SCRTEXT_M="SAP Error Folder" SCRTEXT_L="Application Server Folder - Errors" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_SAP_FOLDER_ERROR" DDLANGUAGE="1" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: SAP Applicatin Server Folder for documents in error" REPTEXT="Application Server Folder - Errors" SCRTEXT_S="SAP Error" SCRTEXT_M="SAP Error Folder" SCRTEXT_L="Application Server Folder - Errors" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_SAP_FOLDER_ERROR" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: SAP Applicatin Server Folder for documents in error" REPTEXT="Application Server Folder - Errors" SCRTEXT_S="SAP Error" SCRTEXT_M="SAP Error Folder" SCRTEXT_L="Application Server Folder - Errors" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_SAP_FOLDER_ERRORS" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="10" SCRLEN2="18" SCRLEN3="25" DDTEXT="GLIF: SAP Application Server Folder for Errors" REPTEXT="SAP Errors Folder" SCRTEXT_S="SAP Errors" SCRTEXT_M="SAP Errors Folder" SCRTEXT_L="SAP Errors Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_SAP_FOLDER_ERRORS" DDLANGUAGE="1" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="10" SCRLEN2="18" SCRLEN3="25" DDTEXT="GLIF: SAP Application Server Folder for Errors" REPTEXT="SAP Errors Folder" SCRTEXT_S="SAP Errors" SCRTEXT_M="SAP Errors Folder" SCRTEXT_L="SAP Errors Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_SAP_FOLDER_ERRORS" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="10" SCRLEN2="18" SCRLEN3="25" DDTEXT="GLIF: SAP Application Server Folder for Errors" REPTEXT="SAP Errors Folder" SCRTEXT_S="SAP Errors" SCRTEXT_M="SAP Errors Folder" SCRTEXT_L="SAP Errors Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_SAP_FOLDER_PROCESSED" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: SAP Applicatin Server Folder for Processed" REPTEXT="SAP Processed Folder" SCRTEXT_S="SAP Prcsd." SCRTEXT_M="SAP Processed Folder" SCRTEXT_L="SAP Processed Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_SAP_FOLDER_PROCESSED" DDLANGUAGE="1" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: SAP Applicatin Server Folder for Processed" REPTEXT="SAP Processed Folder" SCRTEXT_S="SAP Prcsd." SCRTEXT_M="SAP Processed Folder" SCRTEXT_L="SAP Processed Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_SAP_FOLDER_PROCESSED" DDLANGUAGE="E" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: SAP Applicatin Server Folder for Processed" REPTEXT="SAP Processed Folder" SCRTEXT_S="SAP Prcsd." SCRTEXT_M="SAP Processed Folder" SCRTEXT_L="SAP Processed Folder" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" DECIMALS="000000" OUTPUTLEN="000060" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_SAP_PORT" DDLANGUAGE="E" DOMNAME="EDI_PVPORT" ROUTPUTLEN="000000" HEADLEN="08" SCRLEN1="08" SCRLEN2="08" SCRLEN3="08" DDTEXT="SAP Port" REPTEXT="SAP Port" SCRTEXT_S="SAP Port" SCRTEXT_M="SAP Port" SCRTEXT_L="SAP Port" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" ENTITYTAB="EDIPORT" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_SAP_PORT" DDLANGUAGE="1" DOMNAME="EDI_PVPORT" ROUTPUTLEN="000000" HEADLEN="08" SCRLEN1="08" SCRLEN2="08" SCRLEN3="08" DDTEXT="SAP Port" REPTEXT="SAP Port" SCRTEXT_S="SAP Port" SCRTEXT_M="SAP Port" SCRTEXT_L="SAP Port" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" ENTITYTAB="EDIPORT" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_SAP_PORT" DDLANGUAGE="E" DOMNAME="EDI_PVPORT" ROUTPUTLEN="000000" HEADLEN="08" SCRLEN1="08" SCRLEN2="08" SCRLEN3="08" DDTEXT="SAP Port" REPTEXT="SAP Port" SCRTEXT_S="SAP Port" SCRTEXT_M="SAP Port" SCRTEXT_L="SAP Port" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" ENTITYTAB="EDIPORT" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_TABLENAME" DDLANGUAGE="E" DOMNAME="ZGLIF_TABLENAME_DOM" ROUTPUTLEN="000000" HEADLEN="50" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Table name" REPTEXT="Webservice Data Table" SCRTEXT_S="WS table" SCRTEXT_M="WS Data Table" SCRTEXT_L="Webservice Data Table" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" DECIMALS="000000" OUTPUTLEN="000016" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_TABLENAME" DDLANGUAGE="1" DOMNAME="ZGLIF_TABLENAME_DOM" ROUTPUTLEN="000000" HEADLEN="50" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Table name" REPTEXT="Webservice Data Table" SCRTEXT_S="WS table" SCRTEXT_M="WS Data Table" SCRTEXT_L="Webservice Data Table" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" DECIMALS="000000" OUTPUTLEN="000016" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_TABLENAME" DDLANGUAGE="E" DOMNAME="ZGLIF_TABLENAME_DOM" ROUTPUTLEN="000000" HEADLEN="50" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Table name" REPTEXT="Webservice Data Table" SCRTEXT_S="WS table" SCRTEXT_M="WS Data Table" SCRTEXT_L="Webservice Data Table" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" DECIMALS="000000" OUTPUTLEN="000016" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_VALID_FROM" DDLANGUAGE="E" DOMNAME="DATUM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Beginning of Validity Period" REPTEXT="Valid From" SCRTEXT_S="ValidFrom" SCRTEXT_M="Valid From" SCRTEXT_L="Valid From" AUTHCLASS="00" DTELMASTER="E" DATATYPE="DATS" LENG="000008" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_VALID_FROM" DDLANGUAGE="1" DOMNAME="DATUM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Beginning of Validity Period" REPTEXT="Valid From" SCRTEXT_S="ValidFrom" SCRTEXT_M="Valid From" SCRTEXT_L="Valid From" AUTHCLASS="00" DTELMASTER="E" DATATYPE="DATS" LENG="000008" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_VALID_FROM" DDLANGUAGE="E" DOMNAME="DATUM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="Beginning of Validity Period" REPTEXT="Valid From" SCRTEXT_S="ValidFrom" SCRTEXT_M="Valid From" SCRTEXT_L="Valid From" AUTHCLASS="00" DTELMASTER="E" DATATYPE="DATS" LENG="000008" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_VALID_TO" DDLANGUAGE="E" DOMNAME="DATUM" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="End of Validity Period" REPTEXT="Valid To" SCRTEXT_S="ValidTo" SCRTEXT_M="Valid To" SCRTEXT_L="Valid To" AUTHCLASS="00" DTELMASTER="E" DATATYPE="DATS" LENG="000008" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_VALID_TO" DDLANGUAGE="1" DOMNAME="DATUM" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="End of Validity Period" REPTEXT="Valid To" SCRTEXT_S="ValidTo" SCRTEXT_M="Valid To" SCRTEXT_L="Valid To" AUTHCLASS="00" DTELMASTER="E" DATATYPE="DATS" LENG="000008" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_VALID_TO" DDLANGUAGE="E" DOMNAME="DATUM" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="End of Validity Period" REPTEXT="Valid To" SCRTEXT_S="ValidTo" SCRTEXT_M="Valid To" SCRTEXT_L="Valid To" AUTHCLASS="00" DTELMASTER="E" DATATYPE="DATS" LENG="000008" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_WS_DATA_TABLENAME" DDLANGUAGE="E" DOMNAME="ZGLIF_TABLENAME_DOM" ROUTPUTLEN="000000" HEADLEN="50" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Webservice data table name" REPTEXT="Webservice Data Table" SCRTEXT_S="WS table" SCRTEXT_M="WS Data Table" SCRTEXT_L="Webservice Data Table" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" DECIMALS="000000" OUTPUTLEN="000016" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_WS_DATA_TABLENAME" DDLANGUAGE="1" DOMNAME="ZGLIF_TABLENAME_DOM" ROUTPUTLEN="000000" HEADLEN="50" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Webservice data table name" REPTEXT="Webservice Data Table" SCRTEXT_S="WS table" SCRTEXT_M="WS Data Table" SCRTEXT_L="Webservice Data Table" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" DECIMALS="000000" OUTPUTLEN="000016" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_WS_DATA_TABLENAME" DDLANGUAGE="E" DOMNAME="ZGLIF_TABLENAME_DOM" ROUTPUTLEN="000000" HEADLEN="50" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Webservice data table name" REPTEXT="Webservice Data Table" SCRTEXT_S="WS table" SCRTEXT_M="WS Data Table" SCRTEXT_L="Webservice Data Table" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" DECIMALS="000000" OUTPUTLEN="000016" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_FEEDER_SCRIPT" DDLANGUAGE="E" DOMNAME="ZGLIF_SCRIPT_NAME" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="18" SCRLEN3="24" DDTEXT="GLIF: unix script name" REPTEXT="GLIF: Feeder Script name" SCRTEXT_S="Script nm." SCRTEXT_M="Feeder script name" SCRTEXT_L="GLIF: Feeder Script name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000018" DECIMALS="000000" OUTPUTLEN="000018" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_FEEDER_SCRIPT" DDLANGUAGE="1" DOMNAME="ZGLIF_SCRIPT_NAME" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="18" SCRLEN3="24" DDTEXT="GLIF: unix script name" REPTEXT="GLIF: Feeder Script name" SCRTEXT_S="Script nm." SCRTEXT_M="Feeder script name" SCRTEXT_L="GLIF: Feeder Script name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000018" DECIMALS="000000" OUTPUTLEN="000018" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_FEEDER_SCRIPT" DDLANGUAGE="E" DOMNAME="ZGLIF_SCRIPT_NAME" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="18" SCRLEN3="24" DDTEXT="GLIF: unix script name" REPTEXT="GLIF: Feeder Script name" SCRTEXT_S="Script nm." SCRTEXT_M="Feeder script name" SCRTEXT_L="GLIF: Feeder Script name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000018" DECIMALS="000000" OUTPUTLEN="000018" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_FEEDER_CLASS_NAME" DDLANGUAGE="E" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="17" SCRLEN1="06" SCRLEN2="12" SCRLEN3="17" DDTEXT="GLIF: Feeder Class name" REPTEXT="Feeder Class name" SCRTEXT_S="Feeder" SCRTEXT_M="Feeder Class" SCRTEXT_L="Feeder Class name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_FEEDER_CLASS_NAME" DDLANGUAGE="1" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="17" SCRLEN1="06" SCRLEN2="12" SCRLEN3="17" DDTEXT="GLIF: Feeder Class name" REPTEXT="Feeder Class name" SCRTEXT_S="Feeder" SCRTEXT_M="Feeder Class" SCRTEXT_L="Feeder Class name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_FEEDER_CLASS_NAME" DDLANGUAGE="E" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="17" SCRLEN1="06" SCRLEN2="12" SCRLEN3="17" DDTEXT="GLIF: Feeder Class name" REPTEXT="Feeder Class name" SCRTEXT_S="Feeder" SCRTEXT_M="Feeder Class" SCRTEXT_L="Feeder Class name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_ERR_BOR_NAME" DDLANGUAGE="E" DOMNAME="TEXT45" ROUTPUTLEN="000000" HEADLEN="45" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: ErrBOR name (human readable, BatchID+CatID+CatDesc)" REPTEXT="ErrBOR name (human readable)" SCRTEXT_S="ErrBorName" SCRTEXT_M="ErrBOR name" SCRTEXT_L="ErrBOR name (human readable)" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000045" DECIMALS="000000" OUTPUTLEN="000045" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_ERR_BOR_NAME" DDLANGUAGE="1" DOMNAME="TEXT45" ROUTPUTLEN="000000" HEADLEN="45" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: ErrBOR name (human readable, BatchID+CatID+CatDesc)" REPTEXT="ErrBOR name (human readable)" SCRTEXT_S="ErrBorName" SCRTEXT_M="ErrBOR name" SCRTEXT_L="ErrBOR name (human readable)" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000045" DECIMALS="000000" OUTPUTLEN="000045" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_ERR_BOR_NAME" DDLANGUAGE="E" DOMNAME="TEXT45" ROUTPUTLEN="000000" HEADLEN="45" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: ErrBOR name (human readable, BatchID+CatID+CatDesc)" REPTEXT="ErrBOR name (human readable)" SCRTEXT_S="ErrBorName" SCRTEXT_M="ErrBOR name" SCRTEXT_L="ErrBOR name (human readable)" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000045" DECIMALS="000000" OUTPUTLEN="000045" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_ERROR_HANDLER_CLASS_NAME" DDLANGUAGE="E" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="20" SCRLEN3="24" DDTEXT="GLIF: Error Handler Class name" REPTEXT="Error Handler Class name" SCRTEXT_S="Err.Handle" SCRTEXT_M="Error Handler Class" SCRTEXT_L="Error Handler Class name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_ERROR_HANDLER_CLASS_NAME" DDLANGUAGE="1" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="20" SCRLEN3="24" DDTEXT="GLIF: Error Handler Class name" REPTEXT="Error Handler Class name" SCRTEXT_S="Err.Handle" SCRTEXT_M="Error Handler Class" SCRTEXT_L="Error Handler Class name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_ERROR_HANDLER_CLASS_NAME" DDLANGUAGE="E" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="20" SCRLEN3="24" DDTEXT="GLIF: Error Handler Class name" REPTEXT="Error Handler Class name" SCRTEXT_S="Err.Handle" SCRTEXT_M="Error Handler Class" SCRTEXT_L="Error Handler Class name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_EDI_XACTIVE" DDLANGUAGE="E" DOMNAME="XFELD" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: activate EDI control record modifications" REPTEXT="activate EDI control record modifications" SCRTEXT_S="EDICntrMod" SCRTEXT_M="EDI control modify" SCRTEXT_L="activate EDI control record modification" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_EDI_XACTIVE" DDLANGUAGE="1" DOMNAME="XFELD" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: activate EDI control record modifications" REPTEXT="activate EDI control record modifications" SCRTEXT_S="EDICntrMod" SCRTEXT_M="EDI control modify" SCRTEXT_L="activate EDI control record modification" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_EDI_XACTIVE" DDLANGUAGE="E" DOMNAME="XFELD" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: activate EDI control record modifications" REPTEXT="activate EDI control record modifications" SCRTEXT_S="EDICntrMod" SCRTEXT_M="EDI control modify" SCRTEXT_L="activate EDI control record modification" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" DECIMALS="000000" OUTPUTLEN="000001" VALEXI="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_CONVERTOR_CLASS_NAME" DDLANGUAGE="E" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="15" SCRLEN3="20" DDTEXT="GLIF: Convertor Class name" REPTEXT="Convertor Class name" SCRTEXT_S="Convertor" SCRTEXT_M="Convertor Class" SCRTEXT_L="Convertor Class name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_CONVERTOR_CLASS_NAME" DDLANGUAGE="1" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="15" SCRLEN3="20" DDTEXT="GLIF: Convertor Class name" REPTEXT="Convertor Class name" SCRTEXT_S="Convertor" SCRTEXT_M="Convertor Class" SCRTEXT_L="Convertor Class name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_CONVERTOR_CLASS_NAME" DDLANGUAGE="E" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="15" SCRLEN3="20" DDTEXT="GLIF: Convertor Class name" REPTEXT="Convertor Class name" SCRTEXT_S="Convertor" SCRTEXT_M="Convertor Class" SCRTEXT_L="Convertor Class name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_CHANGED_USERNAME" DDLANGUAGE="E" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Entry Changed By" REPTEXT="Changed By Username" SCRTEXT_S="Chngd By" SCRTEXT_M="Changed By" SCRTEXT_L="Changed By User" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000012" DECIMALS="000000" OUTPUTLEN="000012" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_CHANGED_USERNAME" DDLANGUAGE="1" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Entry Changed By" REPTEXT="Changed By Username" SCRTEXT_S="Chngd By" SCRTEXT_M="Changed By" SCRTEXT_L="Changed By User" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000012" DECIMALS="000000" OUTPUTLEN="000012" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_CHANGED_USERNAME" DDLANGUAGE="E" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Entry Changed By" REPTEXT="Changed By Username" SCRTEXT_S="Chngd By" SCRTEXT_M="Changed By" SCRTEXT_L="Changed By User" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000012" DECIMALS="000000" OUTPUTLEN="000012" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_CHANGED_ON" DDLANGUAGE="E" DOMNAME="DATS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: Entry Changed On" REPTEXT="Changed On" SCRTEXT_S="Changed On" SCRTEXT_M="Changed On" SCRTEXT_L="Changed On" AUTHCLASS="00" DTELMASTER="E" DATATYPE="DATS" LENG="000008" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_CHANGED_ON" DDLANGUAGE="1" DOMNAME="DATS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: Entry Changed On" REPTEXT="Changed On" SCRTEXT_S="Changed On" SCRTEXT_M="Changed On" SCRTEXT_L="Changed On" AUTHCLASS="00" DTELMASTER="E" DATATYPE="DATS" LENG="000008" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_CHANGED_ON" DDLANGUAGE="E" DOMNAME="DATS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: Entry Changed On" REPTEXT="Changed On" SCRTEXT_S="Changed On" SCRTEXT_M="Changed On" SCRTEXT_L="Changed On" AUTHCLASS="00" DTELMASTER="E" DATATYPE="DATS" LENG="000008" DECIMALS="000000" OUTPUTLEN="000010" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_CHANGED_AT" DDLANGUAGE="E" DOMNAME="TIMS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: Entry Changed At" REPTEXT="Changed At" SCRTEXT_S="Changed At" SCRTEXT_M="Changed At" SCRTEXT_L="Changed At" AUTHCLASS="00" DTELMASTER="E" DATATYPE="TIMS" LENG="000006" DECIMALS="000000" OUTPUTLEN="000008" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_CHANGED_AT" DDLANGUAGE="1" DOMNAME="TIMS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: Entry Changed At" REPTEXT="Changed At" SCRTEXT_S="Changed At" SCRTEXT_M="Changed At" SCRTEXT_L="Changed At" AUTHCLASS="00" DTELMASTER="E" DATATYPE="TIMS" LENG="000006" DECIMALS="000000" OUTPUTLEN="000008" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_CHANGED_AT" DDLANGUAGE="E" DOMNAME="TIMS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DDTEXT="GLIF: Entry Changed At" REPTEXT="Changed At" SCRTEXT_S="Changed At" SCRTEXT_M="Changed At" SCRTEXT_L="Changed At" AUTHCLASS="00" DTELMASTER="E" DATATYPE="TIMS" LENG="000006" DECIMALS="000000" OUTPUTLEN="000008" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_CATEGORY_ID" DDLANGUAGE="E" DOMNAME="ZGLIF_CATEGORY_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_CATEGORY" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Category ID" REPTEXT="Category ID" SCRTEXT_S="CategoryID" SCRTEXT_M="Category ID" SCRTEXT_L="Category ID" AUTHCLASS="00" DTELMASTER="E" SHLPNAME="ZGLIF_ERR_CATEG" SHLPFIELD="ID" DATATYPE="CHAR" LENG="000002" DECIMALS="000000" OUTPUTLEN="000002" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara PARAMID="ZGLIF_CATEGORY" PARTEXT="GLIF: Error Category"/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_CATEGORY_ID" DDLANGUAGE="1" DOMNAME="ZGLIF_CATEGORY_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_CATEGORY" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Category ID" REPTEXT="Category ID" SCRTEXT_S="CategoryID" SCRTEXT_M="Category ID" SCRTEXT_L="Category ID" AUTHCLASS="00" DTELMASTER="E" SHLPNAME="ZGLIF_ERR_CATEG" SHLPFIELD="ID" DATATYPE="CHAR" LENG="000002" DECIMALS="000000" OUTPUTLEN="000002" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_CATEGORY_ID" DDLANGUAGE="E" DOMNAME="ZGLIF_CATEGORY_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_CATEGORY" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Category ID" REPTEXT="Category ID" SCRTEXT_S="CategoryID" SCRTEXT_M="Category ID" SCRTEXT_L="Category ID" AUTHCLASS="00" DTELMASTER="E" SHLPNAME="ZGLIF_ERR_CATEG" SHLPFIELD="ID" DATATYPE="CHAR" LENG="000002" DECIMALS="000000" OUTPUTLEN="000002" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_CATEGORY" DDLANGUAGE="E" DOMNAME="CHAR_30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Category" REPTEXT="Category" SCRTEXT_S="Category" SCRTEXT_M="Category" SCRTEXT_L="Category" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_CATEGORY" DDLANGUAGE="1" DOMNAME="CHAR_30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Category" REPTEXT="Category" SCRTEXT_S="Category" SCRTEXT_M="Category" SCRTEXT_L="Category" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_CATEGORY" DDLANGUAGE="E" DOMNAME="CHAR_30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Category" REPTEXT="Category" SCRTEXT_S="Category" SCRTEXT_M="Category" SCRTEXT_L="Category" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" DECIMALS="000000" OUTPUTLEN="000030" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_BATCH_STATUS" DDLANGUAGE="E" DOMNAME="ZGLIF_BATCH_STATUS_DOM" ROUTPUTLEN="000000" HEADLEN="12" SCRLEN1="06" SCRLEN2="12" SCRLEN3="12" DDTEXT="GLIF: Batch Status" REPTEXT="Batch Status" SCRTEXT_S="Status" SCRTEXT_M="Batch Status" SCRTEXT_L="Batch Status" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" DECIMALS="000000" OUTPUTLEN="000002" LOWERCASE="X" VALEXI="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_BATCH_STATUS" DDLANGUAGE="1" DOMNAME="ZGLIF_BATCH_STATUS_DOM" ROUTPUTLEN="000000" HEADLEN="12" SCRLEN1="06" SCRLEN2="12" SCRLEN3="12" DDTEXT="GLIF: Batch Status" REPTEXT="Batch Status" SCRTEXT_S="Status" SCRTEXT_M="Batch Status" SCRTEXT_L="Batch Status" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" DECIMALS="000000" OUTPUTLEN="000002" LOWERCASE="X" VALEXI="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_BATCH_STATUS" DDLANGUAGE="E" DOMNAME="ZGLIF_BATCH_STATUS_DOM" ROUTPUTLEN="000000" HEADLEN="12" SCRLEN1="06" SCRLEN2="12" SCRLEN3="12" DDTEXT="GLIF: Batch Status" REPTEXT="Batch Status" SCRTEXT_S="Status" SCRTEXT_M="Batch Status" SCRTEXT_L="Batch Status" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" DECIMALS="000000" OUTPUTLEN="000002" LOWERCASE="X" VALEXI="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_BATCH_ID" DDLANGUAGE="E" DOMNAME="ZGLIF_BATCH_ID_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_BATCH" HEADLEN="08" SCRLEN1="08" SCRLEN2="08" SCRLEN3="08" DDTEXT="GLIF: Batch ID" REPTEXT="Batch ID" SCRTEXT_S="Batch ID" SCRTEXT_M="Batch ID" SCRTEXT_L="Batch ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" LOWERCASE="X" CONVEXIT="ALPHA" REFKIND="D" MultiLanguageSupport="X">
  <tpara PARAMID="ZGLIF_BATCH" PARTEXT="GLIF: Batch"/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_BATCH_ID" DDLANGUAGE="1" DOMNAME="ZGLIF_BATCH_ID_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_BATCH" HEADLEN="08" SCRLEN1="08" SCRLEN2="08" SCRLEN3="08" DDTEXT="GLIF: Batch ID" REPTEXT="Batch ID" SCRTEXT_S="Batch ID" SCRTEXT_M="Batch ID" SCRTEXT_L="Batch ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" LOWERCASE="X" CONVEXIT="ALPHA" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_BATCH_ID" DDLANGUAGE="E" DOMNAME="ZGLIF_BATCH_ID_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_BATCH" HEADLEN="08" SCRLEN1="08" SCRLEN2="08" SCRLEN3="08" DDTEXT="GLIF: Batch ID" REPTEXT="Batch ID" SCRTEXT_S="Batch ID" SCRTEXT_M="Batch ID" SCRTEXT_L="Batch ID" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" DECIMALS="000000" OUTPUTLEN="000010" LOWERCASE="X" CONVEXIT="ALPHA" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLID_LOG_DAYS_TO_KEEP" DDLANGUAGE="E" DOMNAME="INT1" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="How many days to keep log" REPTEXT="Log Expiration Days" SCRTEXT_S="Log Days" SCRTEXT_M="Log Expiration Days" SCRTEXT_L="Log Expiration Days" AUTHCLASS="00" DTELMASTER="E" DATATYPE="INT1" LENG="000003" DECIMALS="000000" OUTPUTLEN="000003" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLID_LOG_DAYS_TO_KEEP" DDLANGUAGE="E" DOMNAME="INT1" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="How many days to keep log" REPTEXT="Log Expiration Days" SCRTEXT_S="Log Days" SCRTEXT_M="Log Expiration Days" SCRTEXT_L="Log Expiration Days" AUTHCLASS="00" DTELMASTER="E" DATATYPE="INT1" LENG="000003" DECIMALS="000000" OUTPUTLEN="000003" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <DTEL ROLLNAME="ZGLIF_FILENAME" DDLANGUAGE="E" DOMNAME="TEXT200" ROUTPUTLEN="000000" HEADLEN="40" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Name of the original file" REPTEXT="Original data source name" SCRTEXT_S="Filename" SCRTEXT_M="Original datsrc.name" SCRTEXT_L="Original data source name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000200" DECIMALS="000000" OUTPUTLEN="000200" LOWERCASE="X" REFKIND="D" MultiLanguageSupport="X">
  <tpara/>
  <DDLANGUAGE LANGU="1">
   <DD04V ROLLNAME="ZGLIF_FILENAME" DDLANGUAGE="1" DOMNAME="TEXT200" ROUTPUTLEN="000000" HEADLEN="40" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Name of the original file" REPTEXT="Original data source name" SCRTEXT_S="Filename" SCRTEXT_M="Original datsrc.name" SCRTEXT_L="Original data source name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000200" DECIMALS="000000" OUTPUTLEN="000200" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
  <DDLANGUAGE LANGU="E">
   <DD04V ROLLNAME="ZGLIF_FILENAME" DDLANGUAGE="E" DOMNAME="TEXT200" ROUTPUTLEN="000000" HEADLEN="40" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DDTEXT="GLIF: Name of the original file" REPTEXT="Original data source name" SCRTEXT_S="Filename" SCRTEXT_M="Original datsrc.name" SCRTEXT_L="Original data source name" AUTHCLASS="00" DTELMASTER="E" DATATYPE="CHAR" LENG="000200" DECIMALS="000000" OUTPUTLEN="000200" LOWERCASE="X" REFKIND="D"/>
  </DDLANGUAGE>
 </DTEL>
 <FUGR AREA="ZGLIF_ERRORCUS_V" SPRAS="E" AREAT="Extended Table Maintenance (Generated)">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_ERRORCUS_V" SQLX="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZGLIF_ERRORCUS_V" DNUM="0001" FNUM="0001" BZMX="61 " BZBR="255 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Overview Screen ZGLIF_ERRORCUS_V">
     <dynprofield FNAM="TCTRL_ZGLIF_ERRORCUS_V" DIDX="003B" FLG1="F8" FLG2="FC" FLG3="00" FILL="T" FMB1="00" FMB2="00" LENG="FF" LINE="01" COLN="02" LTYP="E" LANF="65" LBLK="01" LREP="01" AUTH="101" AGLT="00" ADEZ="00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="003C" FLG1="80" FLG2="02" FLG3="88" FMB1="30" FMB2="40" LENG="3C" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
     <dynprofield FNAM="*ZGLIF_ERRORCUS_V-INTERFACE_NAME" DIDX="0010" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Interface Name" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_ERRORCUS_V-MESSAGE_STATUS" DIDX="001E" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="M. Status" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_ERRORCUS_V-MSGID" DIDX="0014" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Return Message Class ID" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_ERRORCUS_V-MSGNO" DIDX="0008" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Msg. No." RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_ERRORCUS_V-TEXT" DIDX="0049" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Message Text" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_ERRORCUS_V-CATEGORY" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="CategoryID" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_ERRORCUS_V-CATEGORY_TX" DIDX="001E" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="07" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Category" RES1="                                       00"/>
     <dynprofield FNAM="VIM_MARKED" DIDX="0001" FLG1="80" FLG2="00" FLG3="88" FILL="C" FMB1="00" FMB2="20" LENG="01" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="_"/>
     <dynprofield FNAM="ZGLIF_ERRORCUS_V-INTERFACE_NAME" DIDX="0010" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="28" LENG="10" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="20" ADEZ="00" STXT="________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_ERRORCUS_V-MESSAGE_STATUS" DIDX="000F" FLG1="B1" FLG2="02" FLG3="81" FMB1="30" FMB2="28" LENG="02" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="XDL                                    00"/>
     <dynprofield FNAM="ZGLIF_ERRORCUS_V-MSGID" DIDX="000A" FLG1="B1" FLG2="00" FLG3="84" FMB1="30" FMB2="28" LENG="14" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="28" ADEZ="00" STXT="____________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_ERRORCUS_V-MSGNO" DIDX="0008" FLG1="B0" FLG2="00" FLG3="84" FMB1="30" FMB2="28" LENG="03" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="06" ADEZ="00" STXT="___" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_ERRORCUS_V-TEXT" DIDX="0049" FLG1="B0" FLG2="02" FLG3="88" FMB1="30" FMB2="00" LENG="49" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="92" ADEZ="00" STXT="_________________________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_ERRORCUS_V-CATEGORY" DIDX="000A" FLG1="B0" FLG2="02" FLG3="84" FMB1="00" FMB2="08" LENG="02" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" PAID="ZGLIF_CATEGORY" TYPE="CHAR" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_ERRORCUS_V-CATEGORY_TX" DIDX="001E" FLG1="B0" FLG2="02" FLG3="88" FMB1="30" FMB2="00" LENG="1E" LINE="01" COLN="07" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="3C" ADEZ="00" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="VIM_POSI_PUSH" DIDX="0014" FLG1="80" FLG2="00" FLG3="88" FILL="P" FMB1="30" FMB2="00" LENG="14" LINE="3D" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                                                                                                                                                        POSI"/>
     <dynprofield FNAM="VIM_POSITION_INFO" DIDX="001E" FLG1="80" FLG2="02" FLG3="88" FMB1="33" FMB2="00" LENG="1E" LINE="3D" COLN="29" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE LISTE_INITIALISIEREN.
 LOOP AT EXTRACT WITH CONTROL
  TCTRL_ZGLIF_ERRORCUS_V CURSOR NEXTLINE.
   MODULE LISTE_SHOW_LISTE.
 ENDLOOP.
*
PROCESS AFTER INPUT.
 MODULE LISTE_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE LISTE_BEFORE_LOOP.
 LOOP AT EXTRACT.
   MODULE LISTE_INIT_WORKAREA.
   CHAIN.
    FIELD ZGLIF_ERRORCUS_V-INTERFACE_NAME .
    FIELD ZGLIF_ERRORCUS_V-MESSAGE_STATUS .
    FIELD ZGLIF_ERRORCUS_V-MSGID .
    FIELD ZGLIF_ERRORCUS_V-MSGNO .
    FIELD ZGLIF_ERRORCUS_V-TEXT .
    FIELD ZGLIF_ERRORCUS_V-CATEGORY .
    FIELD ZGLIF_ERRORCUS_V-CATEGORY_TX .
    MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
    MODULE COMPLETE_ZGLIF_ERRORCUS_V ON CHAIN-REQUEST.
   ENDCHAIN.
   FIELD VIM_MARKED MODULE LISTE_MARK_CHECKBOX.
   CHAIN.
    FIELD ZGLIF_ERRORCUS_V-INTERFACE_NAME .
    FIELD ZGLIF_ERRORCUS_V-MESSAGE_STATUS .
    FIELD ZGLIF_ERRORCUS_V-MSGID .
    FIELD ZGLIF_ERRORCUS_V-MSGNO .
    MODULE LISTE_UPDATE_LISTE.
   ENDCHAIN.
 ENDLOOP.
 MODULE LISTE_AFTER_LOOP.</dynproflowsource>
    </dynpro>
   </dynpros>
   <source>* regenerated at 2017-06-02 10:16:50
*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_ERRORCUS_VTOP.              &quot; Global Declarations
  INCLUDE LZGLIF_ERRORCUS_VUXX.              &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_ERRORCUS_VF...              &quot; Subroutines
* INCLUDE LZGLIF_ERRORCUS_VO...              &quot; PBO-Modules
* INCLUDE LZGLIF_ERRORCUS_VI...              &quot; PAI-Modules
* INCLUDE LZGLIF_ERRORCUS_VE...              &quot; Events
* INCLUDE LZGLIF_ERRORCUS_VP...              &quot; Local class implement.
* INCLUDE LZGLIF_ERRORCUS_VT99.              &quot; ABAP Unit tests
  INCLUDE LZGLIF_ERRORCUS_VF00                    . &quot; subprograms
  INCLUDE LZGLIF_ERRORCUS_VI00                    . &quot; PAI modules
  INCLUDE LSVIMFXX                                . &quot; subprograms
  INCLUDE LSVIMOXX                                . &quot; PBO modules
  INCLUDE LSVIMIXX                                . &quot; PAI modules</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZGLIF_ERRORCUS_VF00" SQLX="X" EDTX="X" SUBC="I" LEVL="753" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 17.02.2020 at 14:33:10
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZGLIF_ERRORCUS_V................................*
FORM GET_DATA_ZGLIF_ERRORCUS_V.
  PERFORM VIM_FILL_WHERETAB.
*.read data from database.............................................*
  REFRESH TOTAL.
  CLEAR   TOTAL.
  SELECT * FROM ZGLIF_ERRORCUST WHERE
(VIM_WHERETAB) .
    CLEAR ZGLIF_ERRORCUS_V .
ZGLIF_ERRORCUS_V-MANDT =
ZGLIF_ERRORCUST-MANDT .
ZGLIF_ERRORCUS_V-INTERFACE_NAME =
ZGLIF_ERRORCUST-INTERFACE_NAME .
ZGLIF_ERRORCUS_V-MESSAGE_STATUS =
ZGLIF_ERRORCUST-MESSAGE_STATUS .
ZGLIF_ERRORCUS_V-MSGID =
ZGLIF_ERRORCUST-MSGID .
ZGLIF_ERRORCUS_V-MSGNO =
ZGLIF_ERRORCUST-MSGNO .
ZGLIF_ERRORCUS_V-CATEGORY =
ZGLIF_ERRORCUST-CATEGORY .
    SELECT SINGLE * FROM T100 WHERE
SPRSL = SYST-LANGU AND
ARBGB = ZGLIF_ERRORCUST-MSGID AND
MSGNR = ZGLIF_ERRORCUST-MSGNO .
    IF SY-SUBRC EQ 0.
ZGLIF_ERRORCUS_V-TEXT =
T100-TEXT .
    ENDIF.
    SELECT SINGLE * FROM ZGLIF_ERR_CATEG WHERE
INTERFACE_NAME = ZGLIF_ERRORCUST-INTERFACE_NAME AND
ID = ZGLIF_ERRORCUST-CATEGORY .
    IF SY-SUBRC EQ 0.
ZGLIF_ERRORCUS_V-CATEGORY_TX =
ZGLIF_ERR_CATEG-CATEGORY_DESCRIPTION .
    ENDIF.
&lt;VIM_TOTAL_STRUC&gt; = ZGLIF_ERRORCUS_V.
    APPEND TOTAL.
  ENDSELECT.
  SORT TOTAL BY &lt;VIM_XTOTAL_KEY&gt;.
  &lt;STATUS&gt;-ALR_SORTED = &apos;R&apos;.
*.check dynamic selectoptions (not in DDIC)...........................*
  IF X_HEADER-SELECTION NE SPACE.
    PERFORM CHECK_DYNAMIC_SELECT_OPTIONS.
  ELSEIF X_HEADER-DELMDTFLAG NE SPACE.
    PERFORM BUILD_MAINKEY_TAB.
  ENDIF.
  REFRESH EXTRACT.
ENDFORM.
*---------------------------------------------------------------------*
FORM DB_UPD_ZGLIF_ERRORCUS_V .
*.process data base updates/inserts/deletes.........................*
LOOP AT TOTAL.
  CHECK &lt;ACTION&gt; NE ORIGINAL.
MOVE &lt;VIM_TOTAL_STRUC&gt; TO ZGLIF_ERRORCUS_V.
  IF &lt;ACTION&gt; = UPDATE_GELOESCHT.
    &lt;ACTION&gt; = GELOESCHT.
  ENDIF.
  CASE &lt;ACTION&gt;.
   WHEN NEUER_GELOESCHT.
IF STATUS_ZGLIF_ERRORCUS_V-ST_DELETE EQ GELOESCHT.
     READ TABLE EXTRACT WITH KEY &lt;VIM_XTOTAL_KEY&gt;.
     IF SY-SUBRC EQ 0.
       DELETE EXTRACT INDEX SY-TABIX.
     ENDIF.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN GELOESCHT.
  SELECT SINGLE FOR UPDATE * FROM ZGLIF_ERRORCUST WHERE
  INTERFACE_NAME = ZGLIF_ERRORCUS_V-INTERFACE_NAME AND
  MESSAGE_STATUS = ZGLIF_ERRORCUS_V-MESSAGE_STATUS AND
  MSGID = ZGLIF_ERRORCUS_V-MSGID AND
  MSGNO = ZGLIF_ERRORCUS_V-MSGNO .
    IF SY-SUBRC = 0.
    DELETE ZGLIF_ERRORCUST .
    ENDIF.
    IF STATUS-DELETE EQ GELOESCHT.
      READ TABLE EXTRACT WITH KEY &lt;VIM_XTOTAL_KEY&gt; BINARY SEARCH.
      DELETE EXTRACT INDEX SY-TABIX.
    ENDIF.
    DELETE TOTAL.
    IF X_HEADER-DELMDTFLAG NE SPACE.
      PERFORM DELETE_FROM_MAINKEY_TAB.
    ENDIF.
   WHEN OTHERS.
  SELECT SINGLE FOR UPDATE * FROM ZGLIF_ERRORCUST WHERE
  INTERFACE_NAME = ZGLIF_ERRORCUS_V-INTERFACE_NAME AND
  MESSAGE_STATUS = ZGLIF_ERRORCUS_V-MESSAGE_STATUS AND
  MSGID = ZGLIF_ERRORCUS_V-MSGID AND
  MSGNO = ZGLIF_ERRORCUS_V-MSGNO .
    IF SY-SUBRC &lt;&gt; 0.   &quot;insert preprocessing: init WA
      CLEAR ZGLIF_ERRORCUST.
    ENDIF.
ZGLIF_ERRORCUST-MANDT =
ZGLIF_ERRORCUS_V-MANDT .
ZGLIF_ERRORCUST-INTERFACE_NAME =
ZGLIF_ERRORCUS_V-INTERFACE_NAME .
ZGLIF_ERRORCUST-MESSAGE_STATUS =
ZGLIF_ERRORCUS_V-MESSAGE_STATUS .
ZGLIF_ERRORCUST-MSGID =
ZGLIF_ERRORCUS_V-MSGID .
ZGLIF_ERRORCUST-MSGNO =
ZGLIF_ERRORCUS_V-MSGNO .
ZGLIF_ERRORCUST-CATEGORY =
ZGLIF_ERRORCUS_V-CATEGORY .
    IF SY-SUBRC = 0.
    UPDATE ZGLIF_ERRORCUST ##WARN_OK.
    ELSE.
    INSERT ZGLIF_ERRORCUST .
    ENDIF.
    READ TABLE EXTRACT WITH KEY &lt;VIM_XTOTAL_KEY&gt;.
    IF SY-SUBRC EQ 0.
      &lt;XACT&gt; = ORIGINAL.
      MODIFY EXTRACT INDEX SY-TABIX.
    ENDIF.
    &lt;ACTION&gt; = ORIGINAL.
    MODIFY TOTAL.
  ENDCASE.
ENDLOOP.
CLEAR: STATUS_ZGLIF_ERRORCUS_V-UPD_FLAG,
STATUS_ZGLIF_ERRORCUS_V-UPD_CHECKD.
MESSAGE S018(SV).
ENDFORM.
*---------------------------------------------------------------------*
FORM READ_SINGLE_ZGLIF_ERRORCUS_V.
  SELECT SINGLE * FROM ZGLIF_ERRORCUST WHERE
INTERFACE_NAME = ZGLIF_ERRORCUS_V-INTERFACE_NAME AND
MESSAGE_STATUS = ZGLIF_ERRORCUS_V-MESSAGE_STATUS AND
MSGID = ZGLIF_ERRORCUS_V-MSGID AND
MSGNO = ZGLIF_ERRORCUS_V-MSGNO .
ZGLIF_ERRORCUS_V-MANDT =
ZGLIF_ERRORCUST-MANDT .
ZGLIF_ERRORCUS_V-INTERFACE_NAME =
ZGLIF_ERRORCUST-INTERFACE_NAME .
ZGLIF_ERRORCUS_V-MESSAGE_STATUS =
ZGLIF_ERRORCUST-MESSAGE_STATUS .
ZGLIF_ERRORCUS_V-MSGID =
ZGLIF_ERRORCUST-MSGID .
ZGLIF_ERRORCUS_V-MSGNO =
ZGLIF_ERRORCUST-MSGNO .
ZGLIF_ERRORCUS_V-CATEGORY =
ZGLIF_ERRORCUST-CATEGORY .
    SELECT SINGLE * FROM T100 WHERE
SPRSL = SYST-LANGU AND
ARBGB = ZGLIF_ERRORCUST-MSGID AND
MSGNR = ZGLIF_ERRORCUST-MSGNO .
    IF SY-SUBRC EQ 0.
ZGLIF_ERRORCUS_V-TEXT =
T100-TEXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZGLIF_ERRORCUS_V-TEXT .
    ENDIF.
    SELECT SINGLE * FROM ZGLIF_ERR_CATEG WHERE
INTERFACE_NAME = ZGLIF_ERRORCUST-INTERFACE_NAME AND
ID = ZGLIF_ERRORCUST-CATEGORY .
    IF SY-SUBRC EQ 0.
ZGLIF_ERRORCUS_V-CATEGORY_TX =
ZGLIF_ERR_CATEG-CATEGORY_DESCRIPTION .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZGLIF_ERRORCUS_V-CATEGORY_TX .
    ENDIF.
ENDFORM.
*---------------------------------------------------------------------*
FORM CORR_MAINT_ZGLIF_ERRORCUS_V USING VALUE(CM_ACTION) RC.
  DATA: RETCODE LIKE SY-SUBRC, COUNT TYPE I, TRSP_KEYLEN TYPE SYFLENG.
  FIELD-SYMBOLS: &lt;TAB_KEY_X&gt; TYPE X.
  CLEAR RC.
MOVE ZGLIF_ERRORCUS_V-INTERFACE_NAME TO
ZGLIF_ERRORCUST-INTERFACE_NAME .
MOVE ZGLIF_ERRORCUS_V-MESSAGE_STATUS TO
ZGLIF_ERRORCUST-MESSAGE_STATUS .
MOVE ZGLIF_ERRORCUS_V-MSGID TO
ZGLIF_ERRORCUST-MSGID .
MOVE ZGLIF_ERRORCUS_V-MSGNO TO
ZGLIF_ERRORCUST-MSGNO .
MOVE ZGLIF_ERRORCUS_V-MANDT TO
ZGLIF_ERRORCUST-MANDT .
  CORR_KEYTAB             =  E071K.
  CORR_KEYTAB-OBJNAME     = &apos;ZGLIF_ERRORCUST&apos;.
  IF NOT &lt;vim_corr_keyx&gt; IS ASSIGNED.
    ASSIGN CORR_KEYTAB-TABKEY TO &lt;vim_corr_keyx&gt; CASTING.
  ENDIF.
  ASSIGN ZGLIF_ERRORCUST TO &lt;TAB_KEY_X&gt; CASTING.
  PERFORM VIM_GET_TRSPKEYLEN
    USING &apos;ZGLIF_ERRORCUST&apos;
    CHANGING TRSP_KEYLEN.
  &lt;VIM_CORR_KEYX&gt;(TRSP_KEYLEN) = &lt;TAB_KEY_X&gt;(TRSP_KEYLEN).
  PERFORM UPDATE_CORR_KEYTAB USING CM_ACTION RETCODE.
  ADD: RETCODE TO RC, 1 TO COUNT.
  IF RC LT COUNT AND CM_ACTION NE PRUEFEN.
    CLEAR RC.
  ENDIF.

ENDFORM.
*---------------------------------------------------------------------*
FORM COMPL_ZGLIF_ERRORCUS_V USING WORKAREA.
*      provides (read-only) fields from secondary tables related
*      to primary tables by foreignkey relationships
ZGLIF_ERRORCUST-MANDT =
ZGLIF_ERRORCUS_V-MANDT .
ZGLIF_ERRORCUST-INTERFACE_NAME =
ZGLIF_ERRORCUS_V-INTERFACE_NAME .
ZGLIF_ERRORCUST-MESSAGE_STATUS =
ZGLIF_ERRORCUS_V-MESSAGE_STATUS .
ZGLIF_ERRORCUST-MSGID =
ZGLIF_ERRORCUS_V-MSGID .
ZGLIF_ERRORCUST-MSGNO =
ZGLIF_ERRORCUS_V-MSGNO .
ZGLIF_ERRORCUST-CATEGORY =
ZGLIF_ERRORCUS_V-CATEGORY .
    SELECT SINGLE * FROM T100 WHERE
SPRSL = SYST-LANGU AND
ARBGB = ZGLIF_ERRORCUST-MSGID AND
MSGNR = ZGLIF_ERRORCUST-MSGNO .
    IF SY-SUBRC EQ 0.
ZGLIF_ERRORCUS_V-TEXT =
T100-TEXT .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZGLIF_ERRORCUS_V-TEXT .
    ENDIF.
    SELECT SINGLE * FROM ZGLIF_ERR_CATEG WHERE
INTERFACE_NAME = ZGLIF_ERRORCUST-INTERFACE_NAME AND
ID = ZGLIF_ERRORCUST-CATEGORY .
    IF SY-SUBRC EQ 0.
ZGLIF_ERRORCUS_V-CATEGORY_TX =
ZGLIF_ERR_CATEG-CATEGORY_DESCRIPTION .
    ELSE.
      CLEAR SY-SUBRC.
      CLEAR ZGLIF_ERRORCUS_V-CATEGORY_TX .
    ENDIF.
ENDFORM.</include_source>
   </include>
   <include NAME="LZGLIF_ERRORCUS_VI00" SQLX="X" EDTX="X" SUBC="I" LEVL="753" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 17.02.2020 at 14:33:10
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZGLIF_ERRORCUS_V................................*
*---------------------------------------------------------------------*
* MODULE COMPLETE_ZGLIF_ERRORCUS_V
*---------------------------------------------------------------------*
MODULE COMPLETE_ZGLIF_ERRORCUS_V.
PERFORM COMPLETE_EXPROFIELDS.
ENDMODULE.</include_source>
   </include>
   <include NAME="LZGLIF_ERRORCUS_VI00" SQLX="X" EDTX="X" SUBC="I" LEVL="753" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 17.02.2020 at 14:33:10
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*...processing: ZGLIF_ERRORCUS_V................................*
*---------------------------------------------------------------------*
* MODULE COMPLETE_ZGLIF_ERRORCUS_V
*---------------------------------------------------------------------*
MODULE COMPLETE_ZGLIF_ERRORCUS_V.
PERFORM COMPLETE_EXPROFIELDS.
ENDMODULE.</include_source>
   </include>
   <include NAME="LZGLIF_ERRORCUS_VTOP" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
    <include_source>* regenerated at 2017-06-02 10:16:50
FUNCTION-POOL ZGLIF_ERRORCUS_V           MESSAGE-ID SV.

* INCLUDE LZGLIF_ERRORCUS_VD...              &quot; Local class definition
  INCLUDE LSVIMDAT                                . &quot;general data decl.
  INCLUDE LZGLIF_ERRORCUS_VT00                    . &quot;view rel. data dcl.</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="VIEWFRAME_ZGLIF_ERRORCUS_V" STEXT="Extended Table Maintenance: Upper Level">
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="NO_VALUE_FOR_SUBSET_IDENT"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit dem View: anzeigen/ändern (S/U)" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name des Views" INDEX=" 002"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 003"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 004"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 005"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tabelle mit dynam. zu deaktivierenden CUA-Funkt." INDEX=" 006"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für den View" INDEX=" 007"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die View-Felder" INDEX=" 008"/>
    <documentation PARAMETER="NO_VALUE_FOR_SUBSET_IDENT" KIND="X" STEXT="für &apos;SUBSET&apos;-Feld wurde kein Wert vorgegeben" INDEX=" 009"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 010"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   VIEWFRAME_ZGLIF_ERRORCUS_V
*   generation date: 2017-06-02 at 10:16:49
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  DATA: ENQUEUE_PROCESSED TYPE C. &quot;flag: view enqueued by VIEWFRAME_...

*-&lt;&lt;&lt;--------------------------------------------------------------&gt;&gt;&gt;&gt;*
* Entrypoint after changing maintenance mode (show &lt;--&gt; update)        *
*-&lt;&lt;&lt;--------------------------------------------------------------&gt;&gt;&gt;&gt;*
  DO.
*----------------------------------------------------------------------*
* Select data from database                                            *
*----------------------------------------------------------------------*
CALL FUNCTION &apos;VIEWPROC_ZGLIF_ERRORCUS_V&apos;
         EXPORTING
              FCODE          = READ
              VIEW_ACTION    = VIEW_ACTION
              VIEW_NAME      = VIEW_NAME
         TABLES
              EXCL_CUA_FUNCT = EXCL_CUA_FUNCT
EXTRACT = ZGLIF_ERRORCUS_V_EXTRACT
TOTAL = ZGLIF_ERRORCUS_V_TOTAL
              X_HEADER       = X_HEADER
              X_NAMTAB       = X_NAMTAB
              DBA_SELLIST    = DBA_SELLIST
              DPL_SELLIST    = DPL_SELLIST
              CORR_KEYTAB    = E071K_TAB
         EXCEPTIONS
              MISSING_CORR_NUMBER       = 1
              NO_VALUE_FOR_SUBSET_IDENT = 2.
    CASE SY-SUBRC.
      WHEN 1.
        RAISE MISSING_CORR_NUMBER.
      WHEN 2.
        RAISE NO_VALUE_FOR_SUBSET_IDENT.
    ENDCASE.
*-&lt;&lt;&lt;--------------------------------------------------------------&gt;&gt;&gt;&gt;*
* Entrypoint after saving data into database                           *
* Entrypoint after refreshing selected entries from database           *
*-&lt;&lt;&lt;--------------------------------------------------------------&gt;&gt;&gt;&gt;*
    DO.
*----------------------------------------------------------------------*
* Edit data                                                            *
*----------------------------------------------------------------------*
      DO.
CALL FUNCTION &apos;VIEWPROC_ZGLIF_ERRORCUS_V&apos;
             EXPORTING
                  FCODE           = EDIT
                  VIEW_ACTION     = MAINT_MODE
                  VIEW_NAME       = VIEW_NAME
                  CORR_NUMBER     = CORR_NUMBER
             IMPORTING
                  UCOMM           = FUNCTION
UPDATE_REQUIRED = STATUS_ZGLIF_ERRORCUS_V-UPD_FLAG
             TABLES
                  EXCL_CUA_FUNCT  = EXCL_CUA_FUNCT
EXTRACT = ZGLIF_ERRORCUS_V_EXTRACT
TOTAL = ZGLIF_ERRORCUS_V_TOTAL
                  X_HEADER        = X_HEADER
                  X_NAMTAB        = X_NAMTAB
                  DBA_SELLIST     = DBA_SELLIST
                  DPL_SELLIST     = DPL_SELLIST
                  CORR_KEYTAB     = E071K_TAB
             EXCEPTIONS
                  MISSING_CORR_NUMBER       = 1
                  NO_VALUE_FOR_SUBSET_IDENT = 2.
        CASE SY-SUBRC.
          WHEN 1.
            IF MAINT_MODE EQ TRANSPORTIEREN AND VIEW_ACTION EQ AENDERN.
              MOVE VIEW_ACTION TO MAINT_MODE.
            ELSE.
              PERFORM BEFORE_LEAVING_FRAME_FUNCTION
                                         USING X_HEADER-FRM_BF_END.
              RAISE MISSING_CORR_NUMBER.
            ENDIF.
          WHEN 2.
            RAISE NO_VALUE_FOR_SUBSET_IDENT.
          WHEN OTHERS.
            EXIT.
        ENDCASE.
      ENDDO.
*----------------------------------------------------------------------*
*  Handle usercommands...                                              *
*  ...at first handle commands which could cause loss of data          *
*----------------------------------------------------------------------*
      IF FUNCTION EQ BACK. FUNCTION = END. ENDIF.
      IF ( FUNCTION EQ SWITCH_TO_SHOW_MODE OR
           FUNCTION EQ GET_ANOTHER_VIEW    OR
           FUNCTION EQ SWITCH_TRANSP_TO_UPD_MODE OR
           FUNCTION EQ END ) AND
STATUS_ZGLIF_ERRORCUS_V-UPD_FLAG NE SPACE.
        PERFORM BEENDEN.
        CASE SY-SUBRC.
          WHEN 0.
CALL FUNCTION &apos;VIEWPROC_ZGLIF_ERRORCUS_V&apos;
                  EXPORTING
                      FCODE           = SAVE
                      VIEW_ACTION     = MAINT_MODE
                      VIEW_NAME       = VIEW_NAME
                      CORR_NUMBER     = CORR_NUMBER
                  IMPORTING
UPDATE_REQUIRED = STATUS_ZGLIF_ERRORCUS_V-UPD_FLAG
                  TABLES
                      EXCL_CUA_FUNCT  = EXCL_CUA_FUNCT
EXTRACT = ZGLIF_ERRORCUS_V_EXTRACT
TOTAL = ZGLIF_ERRORCUS_V_TOTAL
                      X_HEADER        = X_HEADER
                      X_NAMTAB        = X_NAMTAB
                      DBA_SELLIST     = DBA_SELLIST
                      DPL_SELLIST     = DPL_SELLIST
                      CORR_KEYTAB     = E071K_TAB
                  EXCEPTIONS
                      MISSING_CORR_NUMBER       = 1
                      NO_VALUE_FOR_SUBSET_IDENT = 2
                      SAVING_CORRECTION_FAILED  = 3.
            CASE SY-SUBRC.
              WHEN 0.
IF STATUS_ZGLIF_ERRORCUS_V-UPD_FLAG EQ SPACE. EXIT. ENDIF.
              WHEN 1. RAISE MISSING_CORR_NUMBER.
              WHEN 2. RAISE NO_VALUE_FOR_SUBSET_IDENT.
              WHEN 3.
            ENDCASE.
          WHEN 8. EXIT.
          WHEN 12.
        ENDCASE.
*----------------------------------------------------------------------*
*  ...2nd: transport request                                           *
*----------------------------------------------------------------------*
      ELSEIF FUNCTION EQ TRANSPORT.
IF STATUS_ZGLIF_ERRORCUS_V-UPD_FLAG NE SPACE.
          PERFORM TRANSPORTIEREN.
          CASE SY-SUBRC.
            WHEN 0.
CALL FUNCTION &apos;VIEWPROC_ZGLIF_ERRORCUS_V&apos;
                    EXPORTING
                        FCODE           = SAVE
                        VIEW_ACTION     = MAINT_MODE
                        VIEW_NAME       = VIEW_NAME
                        CORR_NUMBER     = CORR_NUMBER
                    IMPORTING
                              UPDATE_REQUIRED =
STATUS_ZGLIF_ERRORCUS_V-UPD_FLAG
                    TABLES
                        EXCL_CUA_FUNCT  = EXCL_CUA_FUNCT
EXTRACT = ZGLIF_ERRORCUS_V_EXTRACT
TOTAL = ZGLIF_ERRORCUS_V_TOTAL
                        X_HEADER        = X_HEADER
                        X_NAMTAB        = X_NAMTAB
                        DBA_SELLIST     = DBA_SELLIST
                        DPL_SELLIST     = DPL_SELLIST
                        CORR_KEYTAB     = E071K_TAB
                    EXCEPTIONS
                        MISSING_CORR_NUMBER       = 1
                        NO_VALUE_FOR_SUBSET_IDENT = 2
                        SAVING_CORRECTION_FAILED  = 3.
              CASE SY-SUBRC.
                WHEN 0. MAINT_MODE = TRANSPORTIEREN.
                WHEN 1. RAISE MISSING_CORR_NUMBER.
                WHEN 2. RAISE NO_VALUE_FOR_SUBSET_IDENT.
                WHEN 3.
              ENDCASE.
            WHEN 8.
              EXIT.
            WHEN 12.
          ENDCASE.
        ELSE.
          MAINT_MODE = TRANSPORTIEREN.
        ENDIF.
*----------------------------------------------------------------------*
*  ...now reset or save requests                                       *
*----------------------------------------------------------------------*
      ELSEIF FUNCTION EQ RESET_LIST  OR
             FUNCTION EQ RESET_ENTRY OR
             FUNCTION EQ SAVE.
*----------------------------------------------------------------------*
*  Refresh selected entries from database or save data into database   *
*----------------------------------------------------------------------*
CALL FUNCTION &apos;VIEWPROC_ZGLIF_ERRORCUS_V&apos;
             EXPORTING
                  FCODE               = FUNCTION
                  VIEW_ACTION         = MAINT_MODE
                  VIEW_NAME           = VIEW_NAME
                  CORR_NUMBER         = CORR_NUMBER
             IMPORTING
UPDATE_REQUIRED = STATUS_ZGLIF_ERRORCUS_V-UPD_FLAG
             TABLES
                  EXCL_CUA_FUNCT      = EXCL_CUA_FUNCT
EXTRACT = ZGLIF_ERRORCUS_V_EXTRACT
TOTAL = ZGLIF_ERRORCUS_V_TOTAL
                  X_HEADER            = X_HEADER
                  X_NAMTAB            = X_NAMTAB
                  DBA_SELLIST         = DBA_SELLIST
                  DPL_SELLIST         = DPL_SELLIST
                  CORR_KEYTAB         = E071K_TAB
             EXCEPTIONS
                  MISSING_CORR_NUMBER       = 1
                  NO_VALUE_FOR_SUBSET_IDENT = 2
                  SAVING_CORRECTION_FAILED  = 3.
        CASE SY-SUBRC.
          WHEN 1. RAISE MISSING_CORR_NUMBER.
          WHEN 2. RAISE NO_VALUE_FOR_SUBSET_IDENT.
          WHEN 3.
        ENDCASE.
      ELSE.
        EXIT.
      ENDIF.
    ENDDO.
*----------------------------------------------------------------------*
*  ...now other commands...                                            *
*----------------------------------------------------------------------*
    CASE FUNCTION.
      WHEN SWITCH_TO_SHOW_MODE.
*     change maintenance mode from update to show
        PERFORM ENQUEUE USING &apos;D&apos; X_HEADER-FRM_AF_ENQ.    &quot;dequeue view
        CLEAR ENQUEUE_PROCESSED.
        VIEW_ACTION = ANZEIGEN.
      WHEN SWITCH_TO_UPDATE_MODE.
*     change maintenance mode from show to update
        PERFORM ENQUEUE USING &apos;E&apos; X_HEADER-FRM_AF_ENQ.    &quot;enqueue view
        IF SY-SUBRC EQ 0.
          MOVE &apos;X&apos; TO ENQUEUE_PROCESSED.
          VIEW_ACTION = AENDERN.
        ENDIF.
      WHEN SWITCH_TRANSP_TO_UPD_MODE.
*     change maintenance mode from transport to update
        VIEW_ACTION = AENDERN.
      WHEN TRANSPORT.
*     change maintenance mode from update to transport
        VIEW_ACTION = TRANSPORTIEREN.
      WHEN OTHERS.
        IF ENQUEUE_PROCESSED NE SPACE.
          PERFORM ENQUEUE USING &apos;D&apos; X_HEADER-FRM_AF_ENQ.  &quot;dequeue view
        ENDIF.
        PERFORM BEFORE_LEAVING_FRAME_FUNCTION USING X_HEADER-FRM_BF_END.
        EXIT.
    ENDCASE.
  ENDDO.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="VIEWPROC_ZGLIF_ERRORCUS_V" GLOBAL="X" STEXT="Lower-level extended table maintenance">
    <importing PARAMETER="FCODE" DEFAULT="&apos;RDED&apos;"/>
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <exporting PARAMETER="LAST_ACT_ENTRY"/>
    <exporting PARAMETER="UCOMM"/>
    <exporting PARAMETER="UPDATE_REQUIRED"/>
    <tables PARAMETER="CORR_KEYTAB" DBSTRUCT="E071K"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="EXTRACT"/>
    <tables PARAMETER="TOTAL"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="NO_VALUE_FOR_SUBSET_IDENT"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <exceptions EXCEPTION="SAVING_CORRECTION_FAILED"/>
    <documentation PARAMETER="FCODE" KIND="P" STEXT="gewünschte Funktion des Bausteins" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit dem View: anzeigen/ändern (S/U)" INDEX=" 002"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name des Views" INDEX=" 003"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 004"/>
    <documentation PARAMETER="LAST_ACT_ENTRY" KIND="P" STEXT="Index der Cursorposition in der Anzeigetabelle" INDEX=" 005"/>
    <documentation PARAMETER="UCOMM" KIND="P" STEXT="letztes User-command innerhalb der Viewpflege" INDEX=" 006"/>
    <documentation PARAMETER="UPDATE_REQUIRED" KIND="P" STEXT="Flag: Einträge verändert, Sichern erforderlich" INDEX=" 007"/>
    <documentation PARAMETER="CORR_KEYTAB" KIND="P" STEXT="Tabelle mit den Keys der zu transport. Einträge" INDEX=" 008"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 009"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 010"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tab. der nicht zu aktivierenden CUA-Funktionen" INDEX=" 011"/>
    <documentation PARAMETER="EXTRACT" KIND="P" STEXT="Tab. der gerade sichtbaren Daten (Anzeigetabelle" INDEX=" 012"/>
    <documentation PARAMETER="TOTAL" KIND="P" STEXT="Tabelle, mit allen von der DB gelesenen Daten" INDEX=" 013"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für den View" INDEX=" 014"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die View-Felder" INDEX=" 015"/>
    <documentation PARAMETER="NO_VALUE_FOR_SUBSET_IDENT" KIND="X" STEXT="für ein &apos;SUBSET&apos;-Feld wurde kein Wert vorgegeben" INDEX=" 016"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 017"/>
    <documentation PARAMETER="SAVING_CORRECTION_FAILED" KIND="X" STEXT="Fehler beim Sichern der Korrektureinträge" INDEX=" 018"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   VIEWPROC_ZGLIF_ERRORCUS_V
*   generation date: 2017-06-02 at 10:16:50
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*
*----------------------------------------------------------------------*
* Initialization: set field-symbols etc.                               *
*----------------------------------------------------------------------*
   IF LAST_VIEW_INFO NE VIEW_NAME.
ASSIGN ZGLIF_ERRORCUS_V TO &lt;TABLE1&gt;.
ASSIGN *ZGLIF_ERRORCUS_V TO &lt;INITIAL&gt;.
ASSIGN STATUS_ZGLIF_ERRORCUS_V TO &lt;STATUS&gt;.
     PERFORM INITIALISIEREN.
   ENDIF.
   PERFORM JUSTIFY_ACTION_MODE.
   MOVE: VIEW_ACTION TO MAINT_MODE,
         CORR_NUMBER TO CORR_NBR.

*----------------------------------------------------------------------*
* Get data from database                                               *
*----------------------------------------------------------------------*
  IF FCODE EQ READ OR FCODE EQ READ_AND_EDIT.
    PERFORM PREPARE_READ_REQUEST.
    IF X_HEADER-FRM_RP_GET NE SPACE.
            PERFORM (X_HEADER-FRM_RP_GET) IN PROGRAM.
    ELSE.
PERFORM GET_DATA_ZGLIF_ERRORCUS_V.
    ENDIF.
    IF FCODE EQ READ_AND_EDIT. FCODE = EDIT. ENDIF.
  ENDIF.

  CASE FCODE.
    WHEN  EDIT.                          &quot; Edit read data
      PERFORM CALL_DYNPRO.
      PERFORM CHECK_UPD.
*....................................................................*

    WHEN SAVE.                           &quot; Write data into database
      PERFORM PREPARE_SAVING.
      IF &lt;STATUS&gt;-UPD_FLAG NE SPACE.
        IF X_HEADER-FRM_RP_UPD NE SPACE.
          PERFORM (X_HEADER-FRM_RP_UPD) IN PROGRAM.
        ELSE.
          IF SY-SUBRC EQ 0.
PERFORM DB_UPD_ZGLIF_ERRORCUS_V.
          ENDIF.
        ENDIF.
        PERFORM AFTER_SAVING.
      ENDIF.
*....................................................................*

    WHEN RESET_LIST.     &quot; Refresh all marked entries of EXTRACT from db
      PERFORM RESET_ENTRIES USING LIST_BILD.
*....................................................................*

    WHEN RESET_ENTRY.               &quot; Refresh single entry from database
      PERFORM RESET_ENTRIES USING DETAIL_BILD.
*.......................................................................
  ENDCASE.
MOVE STATUS_ZGLIF_ERRORCUS_V-UPD_FLAG TO UPDATE_REQUIRED.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR AREA="ZGLIF_ERR_CATEG" SPRAS="E" AREAT="Extended Table Maintenance (Generated)">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_ERR_CATEG" SQLX="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZGLIF_ERR_CATEG" DNUM="0001" FNUM="0001" BZMX="61 " BZBR="69 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="83 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Overview Screen ZGLIF_ERR_CATEG">
     <dynprofield FNAM="TCTRL_ZGLIF_ERR_CATEG" DIDX="003B" FLG1="F8" FLG2="FC" FLG3="00" FILL="T" FMB1="00" FMB2="00" LENG="41" LINE="01" COLN="02" LTYP="E" LANF="65" LBLK="01" LREP="01" AUTH="101" AGLT="00" ADEZ="00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="003C" FLG1="80" FLG2="02" FLG3="88" FMB1="30" FMB2="40" LENG="3C" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
     <dynprofield FNAM="*ZGLIF_ERR_CATEG-INTERFACE_NAME" DIDX="0010" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A8" LENG="28" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Interface Name" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_ERR_CATEG-ID" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="A8" LENG="28" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="CategoryID" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_ERR_CATEG-CATEGORY_DESCRIPTION" DIDX="001E" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Category" RES1="                                       00"/>
     <dynprofield FNAM="VIM_MARKED" DIDX="0001" FLG1="80" FLG2="00" FLG3="88" FILL="C" FMB1="00" FMB2="20" LENG="01" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="_"/>
     <dynprofield FNAM="ZGLIF_ERR_CATEG-INTERFACE_NAME" DIDX="0010" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="28" LENG="10" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="20" ADEZ="00" STXT="________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_ERR_CATEG-ID" DIDX="000A" FLG1="B0" FLG2="02" FLG3="80" FMB1="30" FMB2="28" LENG="02" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" PAID="ZGLIF_CATEGORY" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_ERR_CATEG-CATEGORY_DESCRIPTION" DIDX="001E" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="3C" ADEZ="00" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="VIM_POSI_PUSH" DIDX="0014" FLG1="80" FLG2="00" FLG3="88" FILL="P" FMB1="30" FMB2="00" LENG="14" LINE="3D" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                                                                                                                                                        POSI"/>
     <dynprofield FNAM="VIM_POSITION_INFO" DIDX="001E" FLG1="80" FLG2="02" FLG3="88" FMB1="33" FMB2="00" LENG="1E" LINE="3D" COLN="29" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE LISTE_INITIALISIEREN.
 LOOP AT EXTRACT WITH CONTROL
  TCTRL_ZGLIF_ERR_CATEG CURSOR NEXTLINE.
   MODULE LISTE_SHOW_LISTE.
 ENDLOOP.
*
PROCESS AFTER INPUT.
 MODULE LISTE_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE LISTE_BEFORE_LOOP.
 LOOP AT EXTRACT.
   MODULE LISTE_INIT_WORKAREA.
   CHAIN.
    FIELD ZGLIF_ERR_CATEG-INTERFACE_NAME .
    FIELD ZGLIF_ERR_CATEG-ID .
    FIELD ZGLIF_ERR_CATEG-CATEGORY_DESCRIPTION .
    MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
   ENDCHAIN.
   FIELD VIM_MARKED MODULE LISTE_MARK_CHECKBOX.
   CHAIN.
    FIELD ZGLIF_ERR_CATEG-INTERFACE_NAME .
    FIELD ZGLIF_ERR_CATEG-ID .
    MODULE LISTE_UPDATE_LISTE.
   ENDCHAIN.
 ENDLOOP.
 MODULE LISTE_AFTER_LOOP.</dynproflowsource>
    </dynpro>
   </dynpros>
   <source>* regenerated at 2017-04-13 12:42:40
*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_ERR_CATEGTOP.               &quot; Global Declarations
  INCLUDE LZGLIF_ERR_CATEGUXX.               &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_ERR_CATEGF...               &quot; Subroutines
* INCLUDE LZGLIF_ERR_CATEGO...               &quot; PBO-Modules
* INCLUDE LZGLIF_ERR_CATEGI...               &quot; PAI-Modules
* INCLUDE LZGLIF_ERR_CATEGE...               &quot; Events
* INCLUDE LZGLIF_ERR_CATEGP...               &quot; Local class implement.
* INCLUDE LZGLIF_ERR_CATEGT99.               &quot; ABAP Unit tests
  INCLUDE LZGLIF_ERR_CATEGF00                     . &quot; subprograms
  INCLUDE LZGLIF_ERR_CATEGI00                     . &quot; PAI modules
  INCLUDE LSVIMFXX                                . &quot; subprograms
  INCLUDE LSVIMOXX                                . &quot; PBO modules
  INCLUDE LSVIMIXX                                . &quot; PAI modules</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZGLIF_ERR_CATEGF00" SQLX="X" EDTX="X" SUBC="I" LEVL="750" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 2017-08-23 at 00:27:41
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .</include_source>
   </include>
   <include NAME="LZGLIF_ERR_CATEGI00" SQLX="X" EDTX="X" SUBC="I" LEVL="750" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 2017-08-23 at 00:27:41
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_ERR_CATEGI00" SQLX="X" EDTX="X" SUBC="I" LEVL="750" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 2017-08-23 at 00:27:41
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_ERR_CATEGTOP" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
    <include_source>* regenerated at 2017-04-13 12:42:40
FUNCTION-POOL ZGLIF_ERR_CATEG            MESSAGE-ID SV.

* INCLUDE LZGLIF_ERR_CATEGD...               &quot; Local class definition
  INCLUDE LSVIMDAT                                . &quot;general data decl.
  INCLUDE LZGLIF_ERR_CATEGT00                     . &quot;view rel. data dcl.</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="TABLEFRAME_ZGLIF_ERR_CATEG" STEXT="Extended Table Maintenance: Upper Level">
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 002"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 003"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 004"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 005"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tabelle mit dynam. zu deaktivierenden CUA-Funkt." INDEX=" 006"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 007"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 008"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 009"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEFRAME_ZGLIF_ERR_CATEG
*   generation date: 2017-04-13 at 12:42:39
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEFRAME TABLES X_HEADER X_NAMTAB DBA_SELLIST DPL_SELLIST
                            EXCL_CUA_FUNCT
                     USING  CORR_NUMBER VIEW_ACTION VIEW_NAME.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="TABLEPROC_ZGLIF_ERR_CATEG" GLOBAL="X" STEXT="Lower-level extended table maintenance">
    <importing PARAMETER="FCODE" DEFAULT="&apos;RDED&apos;"/>
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <exporting PARAMETER="LAST_ACT_ENTRY"/>
    <exporting PARAMETER="UCOMM"/>
    <exporting PARAMETER="UPDATE_REQUIRED"/>
    <tables PARAMETER="CORR_KEYTAB" DBSTRUCT="E071K"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="EXTRACT"/>
    <tables PARAMETER="TOTAL"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <exceptions EXCEPTION="SAVING_CORRECTION_FAILED"/>
    <documentation PARAMETER="FCODE" KIND="P" STEXT="gewünschte Funktion des Bausteins" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 002"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 003"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 004"/>
    <documentation PARAMETER="LAST_ACT_ENTRY" KIND="P" STEXT="Index der Cursorposition in der Anzeigetabelle" INDEX=" 005"/>
    <documentation PARAMETER="UCOMM" KIND="P" STEXT="letztes User-command innerhalb der Viewpflege" INDEX=" 006"/>
    <documentation PARAMETER="UPDATE_REQUIRED" KIND="P" STEXT="Flag: Einträge verändert, Sichern erforderlich" INDEX=" 007"/>
    <documentation PARAMETER="CORR_KEYTAB" KIND="P" STEXT="Tabelle mit den Keys der zu transport. Einträge" INDEX=" 008"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 009"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 010"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tab. der nicht zu aktivierenden CUA-Funktionen" INDEX=" 011"/>
    <documentation PARAMETER="EXTRACT" KIND="P" STEXT="Tab. der gerade sichtbaren Daten (Anzeigetabelle" INDEX=" 012"/>
    <documentation PARAMETER="TOTAL" KIND="P" STEXT="Tabelle, mit allen von der DB gelesenen Daten" INDEX=" 013"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 014"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 015"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 016"/>
    <documentation PARAMETER="SAVING_CORRECTION_FAILED" KIND="X" STEXT="Fehler beim Sichern der Korrektureinträge" INDEX=" 017"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEPROC_ZGLIF_ERR_CATEG
*   generation date: 2017-04-13 at 12:42:40
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEPROC.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR AREA="ZGLIF_FEEDCUST" SPRAS="E" AREAT="Extended Table Maintenance (Generated)">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_FEEDCUST" SQLX="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZGLIF_FEEDCUST" DNUM="0001" FNUM="0001" BZMX="61 " BZBR="255 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Overview Screen ZGLIF_FEEDCUST">
     <dynprofield FNAM="TCTRL_ZGLIF_FEEDCUST" DIDX="003B" FLG1="F8" FLG2="FC" FLG3="00" FILL="T" FMB1="00" FMB2="00" LENG="FF" LINE="01" COLN="02" LTYP="E" LANF="65" LBLK="01" LREP="01" AUTH="101" AGLT="00" ADEZ="00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="003C" FLG1="80" FLG2="02" FLG3="88" FMB1="30" FMB2="40" LENG="3C" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
     <dynprofield FNAM="*ZGLIF_FEEDCUST-INTERFACE_NAME" DIDX="0010" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A8" LENG="28" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Interface Name" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_FEEDCUST-ACTIVE" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Active" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_FEEDCUST-SAP_RFC_DESTINATION" DIDX="0020" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="RFC Destination" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_FEEDCUST-FTP_HOST" DIDX="0050" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="FTP host name" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_FEEDCUST-FTP_USER" DIDX="001E" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="FTP user name" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_FEEDCUST-FTP_PSWD" DIDX="0050" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="FTP password" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_FEEDCUST-FTP_SCRIPT" DIDX="0012" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="07" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="GLIF: Feeder Script name" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_FEEDCUST-FTP_FOLDER_SOURCE" DIDX="003C" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="08" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="FTP Source Folder" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_FEEDCUST-FTP_FOLDER_ERRORS" DIDX="003C" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="09" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="FTP Errors Folder" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_FEEDCUST-FTP_FOLDER_PROCESSED" DIDX="003C" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0A" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="FTP Processed Folder" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_FEEDCUST-SAP_FOLDER_SOURCE" DIDX="003C" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0B" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="SAP Folder" RES1="                                       00"/>
     <dynprofield FNAM="VIM_MARKED" DIDX="0001" FLG1="80" FLG2="00" FLG3="88" FILL="C" FMB1="00" FMB2="20" LENG="01" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="_"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-INTERFACE_NAME" DIDX="0010" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="28" LENG="10" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="20" ADEZ="00" STXT="________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-ACTIVE" DIDX="000A" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="103" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-SAP_RFC_DESTINATION" DIDX="0020" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="08" LENG="20" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" PAID="RFC" TYPE="CHAR" ITYP="C" AGLT="40" ADEZ="00" STXT="________________________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_HOST" DIDX="0050" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="50" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="A0" ADEZ="00" STXT="________________________________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_USER" DIDX="001E" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="3C" ADEZ="00" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_PSWD" DIDX="0050" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="50" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="A0" ADEZ="00" STXT="________________________________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_SCRIPT" DIDX="0012" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="12" LINE="01" COLN="07" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="24" ADEZ="00" STXT="__________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_FOLDER_SOURCE" DIDX="003C" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="01" COLN="08" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_FOLDER_ERRORS" DIDX="003C" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="01" COLN="09" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_FOLDER_PROCESSED" DIDX="003C" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="01" COLN="0A" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-SAP_FOLDER_SOURCE" DIDX="003C" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="01" COLN="0B" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="VIM_POSI_PUSH" DIDX="0014" FLG1="80" FLG2="00" FLG3="88" FILL="P" FMB1="30" FMB2="00" LENG="14" LINE="3D" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="104" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                                                                                                                                                        POSI"/>
     <dynprofield FNAM="VIM_POSITION_INFO" DIDX="001E" FLG1="80" FLG2="02" FLG3="88" FMB1="33" FMB2="00" LENG="1E" LINE="3D" COLN="29" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE LISTE_INITIALISIEREN.
 LOOP AT EXTRACT WITH CONTROL
  TCTRL_ZGLIF_FEEDCUST CURSOR NEXTLINE.
   MODULE LISTE_SHOW_LISTE.
 ENDLOOP.
*
PROCESS AFTER INPUT.
 MODULE LISTE_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE LISTE_BEFORE_LOOP.
 LOOP AT EXTRACT.
   MODULE LISTE_INIT_WORKAREA.
   CHAIN.
    FIELD ZGLIF_FEEDCUST-INTERFACE_NAME .
    FIELD ZGLIF_FEEDCUST-ACTIVE .
    FIELD ZGLIF_FEEDCUST-SAP_RFC_DESTINATION .
    FIELD ZGLIF_FEEDCUST-FTP_HOST .
    FIELD ZGLIF_FEEDCUST-FTP_USER .
    FIELD ZGLIF_FEEDCUST-FTP_PSWD .
    FIELD ZGLIF_FEEDCUST-FTP_SCRIPT .
    FIELD ZGLIF_FEEDCUST-FTP_FOLDER_SOURCE .
    FIELD ZGLIF_FEEDCUST-FTP_FOLDER_ERRORS .
    FIELD ZGLIF_FEEDCUST-FTP_FOLDER_PROCESSED .
    FIELD ZGLIF_FEEDCUST-SAP_FOLDER_SOURCE .
    MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
   ENDCHAIN.
   FIELD VIM_MARKED MODULE LISTE_MARK_CHECKBOX.
   CHAIN.
    FIELD ZGLIF_FEEDCUST-INTERFACE_NAME .
    MODULE LISTE_UPDATE_LISTE.
   ENDCHAIN.
 ENDLOOP.
 MODULE LISTE_AFTER_LOOP.</dynproflowsource>
    </dynpro>
    <dynpro PROG="SAPLZGLIF_FEEDCUST" DNUM="0002" FNUM="0002" BZMX="14 " BZBR="103 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Detail Screen ZGLIF_FEEDCUST">
     <dynprofield FNAM="ZGLIF_FEEDCUST-INTERFACE_NAME" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="08" LENG="14" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Interface Name" RES1="X                                      00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-INTERFACE_NAME" DIDX="0010" FLG1="A0" FLG2="00" FLG3="80" FMB1="30" FMB2="08" LENG="10" LINE="01" COLN="17" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="20" ADEZ="00" STXT="________________" RES1="X                                      00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="000C" FLG1="80" FLG2="02" FLG3="88" FILL="R" FMB1="30" FMB2="00" LENG="67" LINE="03" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="101" AGLT="00" ADEZ="00" STXT="_______________________________________________________________________________________________________"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-ACTIVE" DIDX="0001" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="04" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="102" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-ACTIVE" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FILL="C" FMB1="30" FMB2="08" LENG="14" LINE="04" COLN="05" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="102" ITYP="2" AGLT="00" ADEZ="00" STXT="Active" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-SAP_RFC_DESTINATION" DIDX="000B" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="08" LENG="0B" LINE="05" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Destination" RES1="X                                      00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-SAP_RFC_DESTINATION" DIDX="0020" FLG1="A0" FLG2="02" FLG3="80" FMB1="00" FMB2="08" LENG="20" LINE="05" COLN="18" LANF="00" LBLK="00" LREP="00" PAID="RFC" TYPE="CHAR" ITYP="C" AGLT="40" ADEZ="00" STXT="________________________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_HOST" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="14" LINE="06" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="FTP host name" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_HOST" DIDX="0050" FLG1="A0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="50" LINE="06" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="A0" ADEZ="00" STXT="________________________________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_USER" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="14" LINE="07" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="FTP user name" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_USER" DIDX="001E" FLG1="A0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="07" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="3C" ADEZ="00" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_PSWD" DIDX="000C" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0C" LINE="08" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="FTP password" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_PSWD" DIDX="0050" FLG1="A0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="50" LINE="08" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="A0" ADEZ="00" STXT="________________________________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_SCRIPT" DIDX="0012" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="12" LINE="09" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Feeder script name" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_SCRIPT" DIDX="0012" FLG1="A0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="12" LINE="09" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="24" ADEZ="00" STXT="__________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_FOLDER_SOURCE" DIDX="0011" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="11" LINE="0A" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="FTP Source Folder" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_FOLDER_SOURCE" DIDX="003C" FLG1="A0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="0A" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_FOLDER_ERRORS" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="14" LINE="0B" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="FTP Errors Folder" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_FOLDER_ERRORS" DIDX="003C" FLG1="A0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="0B" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_FOLDER_PROCESSED" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="14" LINE="0C" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="FTP Processed Folder" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-FTP_FOLDER_PROCESSED" DIDX="003C" FLG1="A0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="0C" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-SAP_FOLDER_SOURCE" DIDX="0012" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="12" LINE="0D" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="SAP Folder" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_FEEDCUST-SAP_FOLDER_SOURCE" DIDX="003C" FLG1="A0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="0D" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE detail_init.
*
PROCESS AFTER INPUT.
 MODULE DETAIL_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE DETAIL_SET_PFSTATUS.
 CHAIN.
    FIELD ZGLIF_FEEDCUST-INTERFACE_NAME .
    FIELD ZGLIF_FEEDCUST-ACTIVE .
    FIELD ZGLIF_FEEDCUST-SAP_RFC_DESTINATION .
    FIELD ZGLIF_FEEDCUST-FTP_HOST .
    FIELD ZGLIF_FEEDCUST-FTP_USER .
    FIELD ZGLIF_FEEDCUST-FTP_PSWD .
    FIELD ZGLIF_FEEDCUST-FTP_SCRIPT .
    FIELD ZGLIF_FEEDCUST-FTP_FOLDER_SOURCE .
    FIELD ZGLIF_FEEDCUST-FTP_FOLDER_ERRORS .
    FIELD ZGLIF_FEEDCUST-FTP_FOLDER_PROCESSED .
    FIELD ZGLIF_FEEDCUST-SAP_FOLDER_SOURCE .
  MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
 endchain.
 chain.
    FIELD ZGLIF_FEEDCUST-INTERFACE_NAME .
  module detail_pai.
 endchain.</dynproflowsource>
    </dynpro>
   </dynpros>
   <source>* regenerated at 2017-03-14 14:53:25
*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_FEEDCUSTTOP.                &quot; Global Declarations
  INCLUDE LZGLIF_FEEDCUSTUXX.                &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_FEEDCUSTF...                &quot; Subroutines
* INCLUDE LZGLIF_FEEDCUSTO...                &quot; PBO-Modules
* INCLUDE LZGLIF_FEEDCUSTI...                &quot; PAI-Modules
* INCLUDE LZGLIF_FEEDCUSTE...                &quot; Events
* INCLUDE LZGLIF_FEEDCUSTP...                &quot; Local class implement.
* INCLUDE LZGLIF_FEEDCUSTT99.                &quot; ABAP Unit tests
  INCLUDE LZGLIF_FEEDCUSTF00                      . &quot; subprograms
  INCLUDE LZGLIF_FEEDCUSTI00                      . &quot; PAI modules
  INCLUDE LSVIMFXX                                . &quot; subprograms
  INCLUDE LSVIMOXX                                . &quot; PBO modules
  INCLUDE LSVIMIXX                                . &quot; PAI modules</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZGLIF_FEEDCUSTF00" SQLX="X" EDTX="X" SUBC="I" LEVL="753" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 16.10.2019 at 18:12:57
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .</include_source>
   </include>
   <include NAME="LZGLIF_FEEDCUSTI00" SQLX="X" EDTX="X" SUBC="I" LEVL="753" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 16.10.2019 at 18:12:57
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_FEEDCUSTI00" SQLX="X" EDTX="X" SUBC="I" LEVL="753" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 16.10.2019 at 18:12:57
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_FEEDCUSTTOP" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
    <include_source>* regenerated at 2017-03-14 14:53:25
FUNCTION-POOL ZGLIF_FEEDCUST             MESSAGE-ID SV.

* INCLUDE LZGLIF_FEEDCUSTD...                &quot; Local class definition
  INCLUDE LSVIMDAT                                . &quot;general data decl.
  INCLUDE LZGLIF_FEEDCUSTT00                      . &quot;view rel. data dcl.</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="TABLEFRAME_ZGLIF_FEEDCUST" STEXT="Extended Table Maintenance: Upper Level">
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 002"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 003"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 004"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 005"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tabelle mit dynam. zu deaktivierenden CUA-Funkt." INDEX=" 006"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 007"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 008"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 009"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEFRAME_ZGLIF_FEEDCUST
*   generation date: 2017-03-14 at 14:53:24
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEFRAME TABLES X_HEADER X_NAMTAB DBA_SELLIST DPL_SELLIST
                            EXCL_CUA_FUNCT
                     USING  CORR_NUMBER VIEW_ACTION VIEW_NAME.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="TABLEPROC_ZGLIF_FEEDCUST" GLOBAL="X" STEXT="Lower-level extended table maintenance">
    <importing PARAMETER="FCODE" DEFAULT="&apos;RDED&apos;"/>
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <exporting PARAMETER="LAST_ACT_ENTRY"/>
    <exporting PARAMETER="UCOMM"/>
    <exporting PARAMETER="UPDATE_REQUIRED"/>
    <tables PARAMETER="CORR_KEYTAB" DBSTRUCT="E071K"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="EXTRACT"/>
    <tables PARAMETER="TOTAL"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <exceptions EXCEPTION="SAVING_CORRECTION_FAILED"/>
    <documentation PARAMETER="FCODE" KIND="P" STEXT="gewünschte Funktion des Bausteins" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 002"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 003"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 004"/>
    <documentation PARAMETER="LAST_ACT_ENTRY" KIND="P" STEXT="Index der Cursorposition in der Anzeigetabelle" INDEX=" 005"/>
    <documentation PARAMETER="UCOMM" KIND="P" STEXT="letztes User-command innerhalb der Viewpflege" INDEX=" 006"/>
    <documentation PARAMETER="UPDATE_REQUIRED" KIND="P" STEXT="Flag: Einträge verändert, Sichern erforderlich" INDEX=" 007"/>
    <documentation PARAMETER="CORR_KEYTAB" KIND="P" STEXT="Tabelle mit den Keys der zu transport. Einträge" INDEX=" 008"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 009"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 010"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tab. der nicht zu aktivierenden CUA-Funktionen" INDEX=" 011"/>
    <documentation PARAMETER="EXTRACT" KIND="P" STEXT="Tab. der gerade sichtbaren Daten (Anzeigetabelle" INDEX=" 012"/>
    <documentation PARAMETER="TOTAL" KIND="P" STEXT="Tabelle, mit allen von der DB gelesenen Daten" INDEX=" 013"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 014"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 015"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 016"/>
    <documentation PARAMETER="SAVING_CORRECTION_FAILED" KIND="X" STEXT="Fehler beim Sichern der Korrektureinträge" INDEX=" 017"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEPROC_ZGLIF_FEEDCUST
*   generation date: 2017-03-14 at 14:53:24
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEPROC.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR AREA="ZGLIF_HANDLECUST" SPRAS="E" AREAT="Extended Table Maintenance (Generated)">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_HANDLECUST" SQLX="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZGLIF_HANDLECUST" DNUM="0001" FNUM="0001" BZMX="61 " BZBR="69 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="83 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Overview Screen ZGLIF_HANDLECUST">
     <dynprofield FNAM="TCTRL_ZGLIF_HANDLECUST" DIDX="003B" FLG1="F8" FLG2="FC" FLG3="00" FILL="T" FMB1="00" FMB2="00" LENG="2D" LINE="01" COLN="02" LTYP="E" LANF="65" LBLK="01" LREP="01" AUTH="101" AGLT="00" ADEZ="00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="003C" FLG1="80" FLG2="02" FLG3="88" FMB1="30" FMB2="40" LENG="3C" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
     <dynprofield FNAM="*ZGLIF_HANDLECUST-INTERFACE_NAME" DIDX="0010" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Interface Name" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_HANDLECUST-ACTIVE" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Active" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_HANDLECUST-DEFAULT_CATEGORY" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="CategoryID" RES1="X                                      00"/>
     <dynprofield FNAM="VIM_MARKED" DIDX="0001" FLG1="80" FLG2="00" FLG3="88" FILL="C" FMB1="00" FMB2="20" LENG="01" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="_"/>
     <dynprofield FNAM="ZGLIF_HANDLECUST-INTERFACE_NAME" DIDX="0010" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="20" LENG="10" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="20" ADEZ="00" STXT="________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_HANDLECUST-ACTIVE" DIDX="000A" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="103" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_HANDLECUST-DEFAULT_CATEGORY" DIDX="000A" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="08" LENG="02" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" PAID="ZGLIF_CATEGORY" TYPE="CHAR" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="X                                      00"/>
     <dynprofield FNAM="VIM_POSI_PUSH" DIDX="0014" FLG1="80" FLG2="00" FLG3="88" FILL="P" FMB1="30" FMB2="00" LENG="14" LINE="3D" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="104" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                                                                                                                                                        POSI"/>
     <dynprofield FNAM="VIM_POSITION_INFO" DIDX="001E" FLG1="80" FLG2="02" FLG3="88" FMB1="33" FMB2="00" LENG="1E" LINE="3D" COLN="29" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>* VCL-Modifications
PROCESS BEFORE OUTPUT.
 MODULE LISTE_INITIALISIEREN.
 LOOP AT EXTRACT WITH CONTROL
  TCTRL_ZGLIF_HANDLECUST CURSOR NEXTLINE.
   MODULE LISTE_SHOW_LISTE.
 ENDLOOP.
*
PROCESS AFTER INPUT.
 MODULE LISTE_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE LISTE_BEFORE_LOOP.
 LOOP AT EXTRACT.
   MODULE LISTE_INIT_WORKAREA.
   CHAIN.
    FIELD ZGLIF_HANDLECUST-INTERFACE_NAME .
    FIELD ZGLIF_HANDLECUST-ACTIVE .
    FIELD ZGLIF_HANDLECUST-DEFAULT_CATEGORY .
    MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
   ENDCHAIN.
   FIELD VIM_MARKED MODULE LISTE_MARK_CHECKBOX.
   CHAIN.
    FIELD ZGLIF_HANDLECUST-INTERFACE_NAME .
    FIELD ZGLIF_HANDLECUST-DEFAULT_CATEGORY.
    MODULE LISTE_UPDATE_LISTE.
   ENDCHAIN.
 ENDLOOP.
 MODULE LISTE_AFTER_LOOP.</dynproflowsource>
    </dynpro>
   </dynpros>
   <source>* regenerated at 2017-04-13 12:53:36
*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_HANDLECUSTTOP.              &quot; Global Declarations
  INCLUDE LZGLIF_HANDLECUSTUXX.              &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_HANDLECUSTF...              &quot; Subroutines
* INCLUDE LZGLIF_HANDLECUSTO...              &quot; PBO-Modules
* INCLUDE LZGLIF_HANDLECUSTI...              &quot; PAI-Modules
* INCLUDE LZGLIF_HANDLECUSTE...              &quot; Events
* INCLUDE LZGLIF_HANDLECUSTP...              &quot; Local class implement.
* INCLUDE LZGLIF_HANDLECUSTT99.              &quot; ABAP Unit tests
  INCLUDE LZGLIF_HANDLECUSTF00                    . &quot; subprograms
  INCLUDE LZGLIF_HANDLECUSTI00                    . &quot; PAI modules
  INCLUDE LSVIMFXX                                . &quot; subprograms
  INCLUDE LSVIMOXX                                . &quot; PBO modules
  INCLUDE LSVIMIXX                                . &quot; PAI modules</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZGLIF_HANDLECUSTF00" SQLX="X" EDTX="X" SUBC="I" LEVL="750" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 2017-05-19 at 11:58:47
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .</include_source>
   </include>
   <include NAME="LZGLIF_HANDLECUSTI00" SQLX="X" EDTX="X" SUBC="I" LEVL="750" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 2017-04-13 at 12:53:36
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_HANDLECUSTI00" SQLX="X" EDTX="X" SUBC="I" LEVL="750" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 2017-04-13 at 12:53:36
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_HANDLECUSTTOP" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
    <include_source>* regenerated at 2017-04-13 12:53:36
FUNCTION-POOL ZGLIF_HANDLECUST           MESSAGE-ID SV.

* INCLUDE LZGLIF_HANDLECUSTD...              &quot; Local class definition
  INCLUDE LSVIMDAT                                . &quot;general data decl.
  INCLUDE LZGLIF_HANDLECUSTT00                    . &quot;view rel. data dcl.</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="TABLEFRAME_ZGLIF_HANDLECUST" STEXT="Extended Table Maintenance: Upper Level">
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 002"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 003"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 004"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 005"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tabelle mit dynam. zu deaktivierenden CUA-Funkt." INDEX=" 006"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 007"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 008"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 009"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEFRAME_ZGLIF_HANDLECUST
*   generation date: 2017-04-13 at 12:53:35
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEFRAME TABLES X_HEADER X_NAMTAB DBA_SELLIST DPL_SELLIST
                            EXCL_CUA_FUNCT
                     USING  CORR_NUMBER VIEW_ACTION VIEW_NAME.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="TABLEPROC_ZGLIF_HANDLECUST" GLOBAL="X" STEXT="Lower-level extended table maintenance">
    <importing PARAMETER="FCODE" DEFAULT="&apos;RDED&apos;"/>
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <exporting PARAMETER="LAST_ACT_ENTRY"/>
    <exporting PARAMETER="UCOMM"/>
    <exporting PARAMETER="UPDATE_REQUIRED"/>
    <tables PARAMETER="CORR_KEYTAB" DBSTRUCT="E071K"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="EXTRACT"/>
    <tables PARAMETER="TOTAL"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <exceptions EXCEPTION="SAVING_CORRECTION_FAILED"/>
    <documentation PARAMETER="FCODE" KIND="P" STEXT="gewünschte Funktion des Bausteins" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 002"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 003"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 004"/>
    <documentation PARAMETER="LAST_ACT_ENTRY" KIND="P" STEXT="Index der Cursorposition in der Anzeigetabelle" INDEX=" 005"/>
    <documentation PARAMETER="UCOMM" KIND="P" STEXT="letztes User-command innerhalb der Viewpflege" INDEX=" 006"/>
    <documentation PARAMETER="UPDATE_REQUIRED" KIND="P" STEXT="Flag: Einträge verändert, Sichern erforderlich" INDEX=" 007"/>
    <documentation PARAMETER="CORR_KEYTAB" KIND="P" STEXT="Tabelle mit den Keys der zu transport. Einträge" INDEX=" 008"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 009"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 010"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tab. der nicht zu aktivierenden CUA-Funktionen" INDEX=" 011"/>
    <documentation PARAMETER="EXTRACT" KIND="P" STEXT="Tab. der gerade sichtbaren Daten (Anzeigetabelle" INDEX=" 012"/>
    <documentation PARAMETER="TOTAL" KIND="P" STEXT="Tabelle, mit allen von der DB gelesenen Daten" INDEX=" 013"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 014"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 015"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 016"/>
    <documentation PARAMETER="SAVING_CORRECTION_FAILED" KIND="X" STEXT="Fehler beim Sichern der Korrektureinträge" INDEX=" 017"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEPROC_ZGLIF_HANDLECUST
*   generation date: 2017-04-13 at 12:53:35
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEPROC.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR AREA="ZGLIF_IDOC_INPUT" SPRAS="E" AREAT="Function Group for Idoc Input FM">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_IDOC_INPUT" VARCL="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <source>*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_IDOC_INPUTTOP.              &quot; Global Declarations
  INCLUDE LZGLIF_IDOC_INPUTUXX.              &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_IDOC_INPUTF...              &quot; Subroutines
* INCLUDE LZGLIF_IDOC_INPUTO...              &quot; PBO-Modules
* INCLUDE LZGLIF_IDOC_INPUTI...              &quot; PAI-Modules
* INCLUDE LZGLIF_IDOC_INPUTE...              &quot; Events
* INCLUDE LZGLIF_IDOC_INPUTP...              &quot; Local class implement.
* INCLUDE LZGLIF_IDOC_INPUTT99.              &quot; ABAP Unit tests
*{   INSERT         SSCK900006                                        1
*
INCLUDE lzglif_idoc_inputf01.
*}   INSERT</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZGLIF_IDOC_INPUTF01" VARCL="X" SUBC="I" APPL="S" RMAND="100" RLOAD="E" UCCHECK="X">
    <include_source>*----------------------------------------------------------------------*
***INCLUDE LZGLIF_IDOC_INPUTF01.
*----------------------------------------------------------------------*

*{   INSERT         SSCK900006                                        1
*&amp;---------------------------------------------------------------------*
*&amp; Form UPDATE_STATUS
*&amp;---------------------------------------------------------------------*
*&amp; text
*&amp;---------------------------------------------------------------------*
*&amp;      --&gt; IDOC
*&amp;      --&gt; STATUS
*&amp;      --&gt; LS_MESSAGGE
*&amp;---------------------------------------------------------------------*
FORM update_status  USING    p_idoc
                             p_status
                             ps_message TYPE ZGLIF_RETURN_MESSAGE.

    zglif_logger=&gt;get_timestamp( IMPORTING pev_date = DATA(lv_date)
                                           pev_time = DATA(lv_time) ).

    SELECT SINGLE *
      FROM zglif_mess_stat
      INTO @DATA(ls_mess_stat)
      WHERE idoc_number = @p_idoc.

    IF sy-subrc = 0.

      ls_mess_stat-message_status       = p_status.                   &quot; status of the GLIF Message
      ls_mess_stat-idoc_status          = ps_message-status.    &quot; status of the SAP IDoc
      ls_mess_stat-msgty                = ps_message-msgty.
      ls_mess_stat-msgid                = ps_message-msgid.
      ls_mess_stat-msgno                = ps_message-msgno.
      ls_mess_stat-msgv1                = ps_message-msgv1.
      ls_mess_stat-msgv2                = ps_message-msgv2.
      ls_mess_stat-msgv3                = ps_message-msgv3.
      ls_mess_stat-msgv4                = ps_message-msgv4.
      ls_mess_stat-message_changed_on   = lv_date.
      ls_mess_stat-message_changed_at   = lv_time.
      ls_mess_stat-message_changed_by   = sy-uname.

      UPDATE zglif_mess_stat FROM ls_mess_stat.


    ENDIF.





ENDFORM.
*}   INSERT</include_source>
   </include>
   <include NAME="LZGLIF_IDOC_INPUTF01" VARCL="X" SUBC="I" APPL="S" RMAND="100" RLOAD="E" UCCHECK="X">
    <include_source>*----------------------------------------------------------------------*
***INCLUDE LZGLIF_IDOC_INPUTF01.
*----------------------------------------------------------------------*

*{   INSERT         SSCK900006                                        1
*&amp;---------------------------------------------------------------------*
*&amp; Form UPDATE_STATUS
*&amp;---------------------------------------------------------------------*
*&amp; text
*&amp;---------------------------------------------------------------------*
*&amp;      --&gt; IDOC
*&amp;      --&gt; STATUS
*&amp;      --&gt; LS_MESSAGGE
*&amp;---------------------------------------------------------------------*
FORM update_status  USING    p_idoc
                             p_status
                             ps_message TYPE ZGLIF_RETURN_MESSAGE.

    zglif_logger=&gt;get_timestamp( IMPORTING pev_date = DATA(lv_date)
                                           pev_time = DATA(lv_time) ).

    SELECT SINGLE *
      FROM zglif_mess_stat
      INTO @DATA(ls_mess_stat)
      WHERE idoc_number = @p_idoc.

    IF sy-subrc = 0.

      ls_mess_stat-message_status       = p_status.                   &quot; status of the GLIF Message
      ls_mess_stat-idoc_status          = ps_message-status.    &quot; status of the SAP IDoc
      ls_mess_stat-msgty                = ps_message-msgty.
      ls_mess_stat-msgid                = ps_message-msgid.
      ls_mess_stat-msgno                = ps_message-msgno.
      ls_mess_stat-msgv1                = ps_message-msgv1.
      ls_mess_stat-msgv2                = ps_message-msgv2.
      ls_mess_stat-msgv3                = ps_message-msgv3.
      ls_mess_stat-msgv4                = ps_message-msgv4.
      ls_mess_stat-message_changed_on   = lv_date.
      ls_mess_stat-message_changed_at   = lv_time.
      ls_mess_stat-message_changed_by   = sy-uname.

      UPDATE zglif_mess_stat FROM ls_mess_stat.


    ENDIF.





ENDFORM.
*}   INSERT</include_source>
   </include>
   <include NAME="LZGLIF_IDOC_INPUTTOP" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
    <include_source>FUNCTION-POOL ZGLIF_IDOC_INPUT.             &quot;MESSAGE-ID ..

* INCLUDE LZGLIF_IDOC_INPUTD...              &quot; Local class definition

*&quot; Field symbol for reference to Dispatcher&apos;s Processor
*  FIELD-SYMBOLS:
*        &lt;lr_superprocessor&gt; TYPE REF TO zglif_superprocessor,
*        &lt;lr_processor_idoc&gt; TYPE REF TO zglif_processor_idoc.</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="ZGLIF_IDOC_INPUT_FIDCC2" GLOBAL="X" STEXT="Receive and Post an IDoc">
    <importing PARAMETER="INPUT_METHOD" DBFIELD="BDWFAP_PAR-INPUTMETHD"/>
    <importing PARAMETER="MASS_PROCESSING" DBFIELD="BDWFAP_PAR-MASS_PROC"/>
    <exporting PARAMETER="WORKFLOW_RESULT" DBFIELD="BDWFAP_PAR-RESULT"/>
    <exporting PARAMETER="APPLICATION_VARIABLE" DBFIELD="BDWFAP_PAR-APPL_VAR"/>
    <exporting PARAMETER="IN_UPDATE_TASK" DBFIELD="BDWFAP_PAR-UPDATETASK"/>
    <exporting PARAMETER="CALL_TRANSACTION_DONE" DBFIELD="BDWFAP_PAR-CALLTRANS"/>
    <tables PARAMETER="IDOC_CONTRL" DBSTRUCT="EDIDC"/>
    <tables PARAMETER="IDOC_DATA" DBSTRUCT="EDIDD"/>
    <tables PARAMETER="IDOC_STATUS" DBSTRUCT="BDIDOCSTAT"/>
    <tables PARAMETER="RETURN_VARIABLES" DBSTRUCT="BDWFRETVAR"/>
    <tables PARAMETER="SERIALIZATION_INFO" DBSTRUCT="BDI_SER"/>
    <exceptions EXCEPTION="WRONG_FUNCTION_CALLED"/>
    <documentation PARAMETER="INPUT_METHOD" KIND="P" INDEX=" 001"/>
    <documentation PARAMETER="MASS_PROCESSING" KIND="P" INDEX=" 002"/>
    <documentation PARAMETER="WORKFLOW_RESULT" KIND="P" INDEX=" 003"/>
    <documentation PARAMETER="APPLICATION_VARIABLE" KIND="P" STEXT="Application Variable" INDEX=" 004"/>
    <documentation PARAMETER="IN_UPDATE_TASK" KIND="P" INDEX=" 005"/>
    <documentation PARAMETER="CALL_TRANSACTION_DONE" KIND="P" INDEX=" 006"/>
    <documentation PARAMETER="IDOC_CONTRL" KIND="P" STEXT="IDoc control records" INDEX=" 007"/>
    <documentation PARAMETER="IDOC_DATA" KIND="P" INDEX=" 008"/>
    <documentation PARAMETER="IDOC_STATUS" KIND="P" STEXT="IDoc Status Records" INDEX=" 009"/>
    <documentation PARAMETER="RETURN_VARIABLES" KIND="P" INDEX=" 010"/>
    <documentation PARAMETER="SERIALIZATION_INFO" KIND="P" STEXT="Serialization Info - Not Used" INDEX=" 011"/>
    <documentation PARAMETER="WRONG_FUNCTION_CALLED" KIND="X" INDEX=" 012"/>
    <fm_source_new>&quot; Get the Dispatcher from ZGLIF_ACTIVATE report
*  DATA: ls_dummycust TYPE zglif_proccust,
*        lv_fieldname TYPE string VALUE &apos;(ZGLIF_ACTIVATE)GR_DISPATCHER-&gt;GR_MYPROCESSOR&apos;.

*  TRY.
*      &quot; We could check the status based on the idoc number from here but by connecting to the Dispatcher
*      &quot; we make sure that we are coming from GLIF and the test/prod posting should be performed
*      &quot; If not, then manual processing without update of the status is triggered
*      DATA(lr_superprocessor) = NEW zglif_superprocessor( ).
*      DATA(lr_processor_idoc) = NEW zglif_processor_idoc( ls_dummycust ).
*      ASSIGN lr_superprocessor TO &lt;lr_superprocessor&gt;.
*      ASSIGN lr_processor_idoc TO &lt;lr_processor_idoc&gt;.
*
*      ASSIGN (lv_fieldname) TO &lt;lr_superprocessor&gt; CASTING.
*      &quot; Get the Processor
*      IF &lt;lr_superprocessor&gt; IS ASSIGNED.
*        TRY.
*            &lt;lr_processor_idoc&gt; ?= &lt;lr_superprocessor&gt;.  &quot; downcasting
*            &lt;lr_processor_idoc&gt;-&gt;get_mode( EXPORTING piv_idoc = idoc_contrl-docnum IMPORTING pev_mode = DATA(lv_mode) ).
*          CATCH cx_root.
*            &quot; #TODO: application log + proper error class
*        ENDTRY.
*      ENDIF.
*    CATCH cx_root.
*      &quot; #TODO: application log + proper error class
*  ENDTRY.


  SELECT SINGLE batch~batch_status
    FROM zglif_mess_stat     AS message JOIN
         zglif_batch_stat    AS batch ON message~batch_id = batch~batch_id AND message~interface_name = batch~interface_name
    INTO @DATA(lv_batch_status)
    WHERE message~idoc_number = @idoc_contrl-docnum.  &quot; this is enough, IDocs are unique on client



  &quot; Perform posting depending on mode
  CASE lv_batch_status.
    WHEN zglif_dispatcher=&gt;gc_15_test_processing_run.    &quot; test processing to ensure whole batch is ready
      CALL FUNCTION &apos;ZGLIF_IDOC_INPUT_FIDCC2_TEST&apos;
        EXPORTING
          input_method          = input_method
          mass_processing       = mass_processing
          &quot; IMPORTING
        &quot; WORKFLOW_RESULT       = WORKFLOW_RESULT
        &quot; APPLICATION_VARIABLE  = APPLICATION_VARIABLE
        &quot; IN_UPDATE_TASK        = IN_UPDATE_TASK
        &quot; CALL_TRANSACTION_DONE = CALL_TRANSACTION_DONE
        TABLES
          idoc_contrl           = idoc_contrl
          idoc_data             = idoc_data
          idoc_status           = idoc_status
          return_variables      = return_variables
          serialization_info    = serialization_info
        EXCEPTIONS
          wrong_function_called = 1
          OTHERS                = 2.
      IF sy-subrc &lt;&gt; 0.
        &quot; Error handling is taken care off inside - this is just a wrapper
        &quot; MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.

    WHEN zglif_dispatcher=&gt;gc_25_processing_run.    &quot; productive processing after successful test processing
      CALL FUNCTION &apos;ZGLIF_IDOC_INPUT_FIDCC2_PROD&apos;
        EXPORTING
          input_method          = input_method
          mass_processing       = mass_processing
          &quot; IMPORTING
        &quot; WORKFLOW_RESULT       = WORKFLOW_RESULT
        &quot; APPLICATION_VARIABLE  = APPLICATION_VARIABLE
        &quot; IN_UPDATE_TASK        = IN_UPDATE_TASK
        &quot; CALL_TRANSACTION_DONE = CALL_TRANSACTION_DONE
        TABLES
          idoc_contrl           = idoc_contrl
          idoc_data             = idoc_data
          idoc_status           = idoc_status
          return_variables      = return_variables
          serialization_info    = serialization_info
        EXCEPTIONS
          wrong_function_called = 1
          OTHERS                = 2.
      IF sy-subrc &lt;&gt; 0.
        &quot; Error handling is taken care off inside - this is just a wrapper
        &quot; MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.


    WHEN OTHERS.    &quot; manual processing such as from we19, bd87
      CALL FUNCTION &apos;ZGLIF_IDOC_INPUT_FIDCC2_MANUAL&apos;
        EXPORTING
          input_method          = input_method
          mass_processing       = mass_processing
          &quot; IMPORTING
        &quot; WORKFLOW_RESULT       = WORKFLOW_RESULT
        &quot; APPLICATION_VARIABLE  = APPLICATION_VARIABLE
        &quot; IN_UPDATE_TASK        = IN_UPDATE_TASK
        &quot; CALL_TRANSACTION_DONE = CALL_TRANSACTION_DONE
        TABLES
          idoc_contrl           = idoc_contrl
          idoc_data             = idoc_data
          idoc_status           = idoc_status
          return_variables      = return_variables
          serialization_info    = serialization_info
        EXCEPTIONS
          wrong_function_called = 1
          OTHERS                = 2.
      IF sy-subrc &lt;&gt; 0.
        &quot; Error handling is taken care off inside - this is just a wrapper
        &quot; MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
      ENDIF.

  ENDCASE.</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="ZGLIF_IDOC_INPUT_FIDCC2_MANUAL" STEXT="Manual processing of ZFIDCC2 (we19, bd87...)">
    <importing PARAMETER="INPUT_METHOD" DBFIELD="BDWFAP_PAR-INPUTMETHD"/>
    <importing PARAMETER="MASS_PROCESSING" DBFIELD="BDWFAP_PAR-MASS_PROC"/>
    <exporting PARAMETER="WORKFLOW_RESULT" DBFIELD="BDWFAP_PAR-RESULT"/>
    <exporting PARAMETER="APPLICATION_VARIABLE" DBFIELD="BDWFAP_PAR-APPL_VAR"/>
    <exporting PARAMETER="IN_UPDATE_TASK" DBFIELD="BDWFAP_PAR-UPDATETASK"/>
    <exporting PARAMETER="CALL_TRANSACTION_DONE" DBFIELD="BDWFAP_PAR-CALLTRANS"/>
    <tables PARAMETER="IDOC_CONTRL" DBSTRUCT="EDIDC"/>
    <tables PARAMETER="IDOC_DATA" DBSTRUCT="EDIDD"/>
    <tables PARAMETER="IDOC_STATUS" DBSTRUCT="BDIDOCSTAT"/>
    <tables PARAMETER="RETURN_VARIABLES" DBSTRUCT="BDWFRETVAR"/>
    <tables PARAMETER="SERIALIZATION_INFO" DBSTRUCT="BDI_SER"/>
    <exceptions EXCEPTION="WRONG_FUNCTION_CALLED"/>
    <documentation PARAMETER="INPUT_METHOD" KIND="P" INDEX=" 001"/>
    <documentation PARAMETER="MASS_PROCESSING" KIND="P" INDEX=" 002"/>
    <documentation PARAMETER="WORKFLOW_RESULT" KIND="P" INDEX=" 003"/>
    <documentation PARAMETER="APPLICATION_VARIABLE" KIND="P" INDEX=" 004"/>
    <documentation PARAMETER="IN_UPDATE_TASK" KIND="P" INDEX=" 005"/>
    <documentation PARAMETER="CALL_TRANSACTION_DONE" KIND="P" INDEX=" 006"/>
    <documentation PARAMETER="IDOC_CONTRL" KIND="P" INDEX=" 007"/>
    <documentation PARAMETER="IDOC_DATA" KIND="P" INDEX=" 008"/>
    <documentation PARAMETER="IDOC_STATUS" KIND="P" INDEX=" 009"/>
    <documentation PARAMETER="RETURN_VARIABLES" KIND="P" INDEX=" 010"/>
    <documentation PARAMETER="SERIALIZATION_INFO" KIND="P" INDEX=" 011"/>
    <documentation PARAMETER="WRONG_FUNCTION_CALLED" KIND="X" INDEX=" 012"/>
    <fm_source_new>DATA: lv_transaction_id TYPE arfctid.

  &quot; Run is not governed by ZGLIF_DISPATCHER -&gt; only test posting with no change in status
  CALL FUNCTION &apos;IDOC_INPUT_FIDCC2&apos;
    EXPORTING
      input_method          = input_method
      mass_processing       = mass_processing
      &quot;* IMPORTING
      &quot;* WORKFLOW_RESULT       = WORKFLOW_RESULT
      &quot;* APPLICATION_VARIABLE  = APPLICATION_VARIABLE
      &quot;* IN_UPDATE_TASK        = IN_UPDATE_TASK
      &quot;* CALL_TRANSACTION_DONE = CALL_TRANSACTION_DONE
    TABLES
      idoc_contrl           = idoc_contrl
      idoc_data             = idoc_data
      idoc_status           = idoc_status
      return_variables      = return_variables
      serialization_info    = serialization_info
    EXCEPTIONS
      wrong_function_called = 1
      OTHERS                = 2.
  IF sy-subrc = 0.  &quot; no technical error
    LOOP AT idoc_status ASSIGNING FIELD-SYMBOL(&lt;ls_idoc_status&gt;).
      DATA(lv_docnum) = &lt;ls_idoc_status&gt;-docnum.
      IF &lt;ls_idoc_status&gt;-status = 53 AND &lt;ls_idoc_status&gt;-msgid = &apos;F1&apos; AND &lt;ls_idoc_status&gt;-msgno = 310.
        CLEAR: &lt;ls_idoc_status&gt;.
        &lt;ls_idoc_status&gt;-docnum = lv_docnum.
        &lt;ls_idoc_status&gt;-status = 64.
        &lt;ls_idoc_status&gt;-msgty = &apos;S&apos;.
        &lt;ls_idoc_status&gt;-msgid = &apos;ZGLIF_MESSAGES&apos;.
        &lt;ls_idoc_status&gt;-msgno = 000.
      ELSE.
        &lt;ls_idoc_status&gt;-status = 64.
      ENDIF.
    ENDLOOP.
  ELSE.
    LOOP AT idoc_status ASSIGNING &lt;ls_idoc_status&gt;.
      lv_docnum = &lt;ls_idoc_status&gt;-docnum.
      CLEAR: &lt;ls_idoc_status&gt;.
      &lt;ls_idoc_status&gt;-docnum = lv_docnum.
      &lt;ls_idoc_status&gt;-status = 64.
      &lt;ls_idoc_status&gt;-msgty = &apos;S&apos;.
      &lt;ls_idoc_status&gt;-msgid = &apos;ZGLIF_MESSAGES&apos;.
      &lt;ls_idoc_status&gt;-msgno = 001.
      &lt;ls_idoc_status&gt;-msgv1 = &apos;manual&apos;.
      &lt;ls_idoc_status&gt;-msgv2 = lv_docnum.

    ENDLOOP.
  ENDIF.

*
*    IF idoc_status[ 1 ]-status = 53 AND idoc_status[ 1 ]-msgid = &apos;F1&apos; AND idoc_status[ 1 ]-msgno = 310.
*      &quot; successful posting -&gt; change status and inform the user
*      CLEAR: idoc_status, idoc_status[].
*      idoc_status = VALUE #( docnum = idoc_contrl[ 1 ]-docnum status = 64 msgty = &apos;S&apos; msgid = &apos;ZGLIF_MESSAGES&apos; msgno = 000 ).
*      APPEND idoc_status TO idoc_status. &quot; idoc_status is a header table
*    ELSE.
*      &quot; No CLEAR. Keep the error message in idoc_status to inform the user of the business error
*      idoc_status[ 1 ]-status = 64.
*    ENDIF.
*  ELSE. &quot; Error in processing the IDoc (technical error)
*    CLEAR: idoc_status, idoc_status[].
*    idoc_status = VALUE #( docnum = idoc_contrl[ 1 ]-docnum status = 64 msgty = &apos;S&apos; msgid = &apos;ZGLIF_MESSAGES&apos; msgno = 001 msgv1 = &apos;manual&apos; msgv2 = idoc_contrl[ 1 ]-docnum ).
*    APPEND idoc_status TO idoc_status. &quot; idoc_status is a header table
*  ENDIF.

  &quot; No update to status in zglif_mess_stat as this is only manual processing not governed by Dispatcher

  &quot; Perform rollback to rid of any irrelevant data
  CALL FUNCTION &apos;TRANSACTION_STATUS&apos;
    IMPORTING
*     STATUS        = STATUS
      owner = lv_transaction_id.

  CALL FUNCTION &apos;TRANSACTION_ABORT&apos;
    EXPORTING
      transaction_id = lv_transaction_id.</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="ZGLIF_IDOC_INPUT_FIDCC2_TEST" STEXT="Test processing for ZFIDCC2 (From ZGLIF_DISPATCHER)">
    <importing PARAMETER="INPUT_METHOD" DBFIELD="BDWFAP_PAR-INPUTMETHD"/>
    <importing PARAMETER="MASS_PROCESSING" DBFIELD="BDWFAP_PAR-MASS_PROC"/>
    <exporting PARAMETER="WORKFLOW_RESULT" DBFIELD="BDWFAP_PAR-RESULT"/>
    <exporting PARAMETER="APPLICATION_VARIABLE" DBFIELD="BDWFAP_PAR-APPL_VAR"/>
    <exporting PARAMETER="IN_UPDATE_TASK" DBFIELD="BDWFAP_PAR-UPDATETASK"/>
    <exporting PARAMETER="CALL_TRANSACTION_DONE" DBFIELD="BDWFAP_PAR-CALLTRANS"/>
    <tables PARAMETER="IDOC_CONTRL" DBSTRUCT="EDIDC"/>
    <tables PARAMETER="IDOC_DATA" DBSTRUCT="EDIDD"/>
    <tables PARAMETER="IDOC_STATUS" DBSTRUCT="BDIDOCSTAT"/>
    <tables PARAMETER="RETURN_VARIABLES" DBSTRUCT="BDWFRETVAR"/>
    <tables PARAMETER="SERIALIZATION_INFO" DBSTRUCT="BDI_SER"/>
    <exceptions EXCEPTION="WRONG_FUNCTION_CALLED"/>
    <documentation PARAMETER="INPUT_METHOD" KIND="P" INDEX=" 001"/>
    <documentation PARAMETER="MASS_PROCESSING" KIND="P" INDEX=" 002"/>
    <documentation PARAMETER="WORKFLOW_RESULT" KIND="P" INDEX=" 003"/>
    <documentation PARAMETER="APPLICATION_VARIABLE" KIND="P" INDEX=" 004"/>
    <documentation PARAMETER="IN_UPDATE_TASK" KIND="P" INDEX=" 005"/>
    <documentation PARAMETER="CALL_TRANSACTION_DONE" KIND="P" INDEX=" 006"/>
    <documentation PARAMETER="IDOC_CONTRL" KIND="P" INDEX=" 007"/>
    <documentation PARAMETER="IDOC_DATA" KIND="P" INDEX=" 008"/>
    <documentation PARAMETER="IDOC_STATUS" KIND="P" INDEX=" 009"/>
    <documentation PARAMETER="RETURN_VARIABLES" KIND="P" INDEX=" 010"/>
    <documentation PARAMETER="SERIALIZATION_INFO" KIND="P" INDEX=" 011"/>
    <documentation PARAMETER="WRONG_FUNCTION_CALLED" KIND="X" INDEX=" 012"/>
    <fm_source_new>DATA: lv_transaction_id TYPE arfctid,
        ls_return_message TYPE zglif_return_message,
        lv_status TYPE string.


  &quot; Run is governed by ZGLIF_DISPATCHER + it is test run = no posting, only change of status in ZGLIF_MESS_STAT
  CALL FUNCTION &apos;IDOC_INPUT_FIDCC2&apos;
    EXPORTING
      input_method          = input_method
      mass_processing       = mass_processing
      &quot;* IMPORTING
      &quot;* WORKFLOW_RESULT       = WORKFLOW_RESULT
      &quot;* APPLICATION_VARIABLE  = APPLICATION_VARIABLE
      &quot;* IN_UPDATE_TASK        = IN_UPDATE_TASK
      &quot;* CALL_TRANSACTION_DONE = CALL_TRANSACTION_DONE
    TABLES
      idoc_contrl           = idoc_contrl
      idoc_data             = idoc_data
      idoc_status           = idoc_status
      return_variables      = return_variables
      serialization_info    = serialization_info
    EXCEPTIONS
      wrong_function_called = 1
      OTHERS                = 2.

  DATA(lv_subrc) = sy-subrc.

  CALL FUNCTION &apos;TRANSACTION_STATUS&apos;
    IMPORTING
      status = lv_status
      owner  = lv_transaction_id.

  CALL FUNCTION &apos;TRANSACTION_ABORT&apos;
    EXPORTING
      transaction_id = lv_transaction_id.


  IF lv_subrc = 0.  &quot; no technical error
    LOOP AT idoc_status ASSIGNING FIELD-SYMBOL(&lt;ls_idoc_status&gt;).
      DATA(lv_docnum) = &lt;ls_idoc_status&gt;-docnum.
      IF &lt;ls_idoc_status&gt;-status = 53 AND &lt;ls_idoc_status&gt;-msgid = &apos;F1&apos; AND &lt;ls_idoc_status&gt;-msgno = 310.
        CLEAR: &lt;ls_idoc_status&gt;.
        &lt;ls_idoc_status&gt;-docnum = lv_docnum.
        &lt;ls_idoc_status&gt;-status = 64.
        &lt;ls_idoc_status&gt;-msgty = &apos;S&apos;.
        &lt;ls_idoc_status&gt;-msgid = &apos;ZGLIF_MESSAGES&apos;.
        &lt;ls_idoc_status&gt;-msgno = 000.
        DATA(ls_message) = CORRESPONDING zglif_return_message( &lt;ls_idoc_status&gt; ).
        PERFORM update_status USING lv_docnum zglif_dispatcher=&gt;gc_20_test_processing_ok ls_message.
      ELSE.
        &lt;ls_idoc_status&gt;-status = 64.
        ls_message = CORRESPONDING zglif_return_message( &lt;ls_idoc_status&gt; ).
        PERFORM update_status USING lv_docnum zglif_dispatcher=&gt;gc_21_test_processing_fail ls_message.
      ENDIF.



    ENDLOOP.
  ELSE.
    LOOP AT idoc_status ASSIGNING &lt;ls_idoc_status&gt;.
      lv_docnum = &lt;ls_idoc_status&gt;-docnum.
      CLEAR: &lt;ls_idoc_status&gt;.
      &lt;ls_idoc_status&gt;-docnum = lv_docnum.
      &lt;ls_idoc_status&gt;-status = 64.
      &lt;ls_idoc_status&gt;-msgty = &apos;S&apos;.
      &lt;ls_idoc_status&gt;-msgid = &apos;ZGLIF_MESSAGES&apos;.
      &lt;ls_idoc_status&gt;-msgno = 001.
      &lt;ls_idoc_status&gt;-msgv1 = &apos;manual&apos;.
      &lt;ls_idoc_status&gt;-msgv2 = lv_docnum.
      ls_message = CORRESPONDING zglif_return_message( &lt;ls_idoc_status&gt; ).
      PERFORM update_status USING lv_docnum zglif_dispatcher=&gt;gc_21_test_processing_fail ls_message.
    ENDLOOP.
  ENDIF.

*
*  IF sy-subrc = 0.  &quot; no technical error
*    IF idoc_status[ 1 ]-status = 53 AND idoc_status[ 1 ]-msgid = &apos;F1&apos; AND idoc_status[ 1 ]-msgno = 310.
*      &quot; successful posting -&gt; change status and inform the user
*      CLEAR: idoc_status, idoc_status[].
*      idoc_status = VALUE #( docnum = idoc_contrl[ 1 ]-docnum status = 64 msgty = &apos;S&apos; msgid = &apos;ZGLIF_MESSAGES&apos; msgno = 000 ).
*      APPEND idoc_status TO idoc_status. &quot; idoc_status is a header table
*
*      &quot; Update status for GT_MESS_STAT
*      ls_return_message = CORRESPONDING #( idoc_status[ 1 ] ).  &quot; copy the return message and idoc status
*
*      &lt;lr_processor_idoc&gt;-&gt;set_status(
*        piv_idoc        = idoc_contrl[ 1 ]-docnum
*        piv_status      = zglif_dispatcher=&gt;gc_20_test_processing_ok
*        pis_return_message  = ls_return_message ).
*    ELSE.
*      &quot; No CLEAR. Keep the error message in idoc_status to inform the user of the business error
*      idoc_status[ 1 ]-status = 64.
*
*      &quot; Update status for GT_MESS_STAT
*      ls_return_message = CORRESPONDING #( idoc_status[ 1 ] ).  &quot; copy the return message and idoc status
*      &lt;lr_processor_idoc&gt;-&gt;set_status(
*        piv_idoc        = idoc_contrl[ 1 ]-docnum
*        piv_status      = zglif_dispatcher=&gt;gc_21_test_processing_fail
*        pis_return_message  = ls_return_message ).
*    ENDIF.
*  ELSE. &quot; Error in processing the IDoc (technical error)
*    CLEAR: idoc_status, idoc_status[].
*    idoc_status = VALUE #( docnum = idoc_contrl[ 1 ]-docnum status = 64 msgty = &apos;S&apos; msgid = &apos;ZGLIF_MESSAGES&apos; msgno = 001 msgv1 = &apos;test&apos; msgv2 = idoc_contrl[ 1 ]-docnum ).
*    APPEND idoc_status TO idoc_status. &quot; idoc_status is a header table
*
*    &quot; Update status for GT_MESS_STAT
*    ls_return_message = CORRESPONDING #( idoc_status[ 1 ] ).  &quot; copy the return message and idoc status
*    &lt;lr_processor_idoc&gt;-&gt;set_status(
*        piv_idoc        = idoc_contrl[ 1 ]-docnum
*        piv_status      = zglif_dispatcher=&gt;gc_21_test_processing_fail
*        pis_return_message  = ls_return_message ).
*  ENDIF.

  &quot; Perform rollback to rid of any irrelevant data</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="ZGLIF_IDOC_INPUT_FIDCC2_PROD" STEXT="Productive processing of ZFIDCC2 (from ZGLIF_DISPATCHER)">
    <importing PARAMETER="INPUT_METHOD" DBFIELD="BDWFAP_PAR-INPUTMETHD"/>
    <importing PARAMETER="MASS_PROCESSING" DBFIELD="BDWFAP_PAR-MASS_PROC"/>
    <exporting PARAMETER="WORKFLOW_RESULT" DBFIELD="BDWFAP_PAR-RESULT"/>
    <exporting PARAMETER="APPLICATION_VARIABLE" DBFIELD="BDWFAP_PAR-APPL_VAR"/>
    <exporting PARAMETER="IN_UPDATE_TASK" DBFIELD="BDWFAP_PAR-UPDATETASK"/>
    <exporting PARAMETER="CALL_TRANSACTION_DONE" DBFIELD="BDWFAP_PAR-CALLTRANS"/>
    <tables PARAMETER="IDOC_CONTRL" DBSTRUCT="EDIDC"/>
    <tables PARAMETER="IDOC_DATA" DBSTRUCT="EDIDD"/>
    <tables PARAMETER="IDOC_STATUS" DBSTRUCT="BDIDOCSTAT"/>
    <tables PARAMETER="RETURN_VARIABLES" DBSTRUCT="BDWFRETVAR"/>
    <tables PARAMETER="SERIALIZATION_INFO" DBSTRUCT="BDI_SER"/>
    <exceptions EXCEPTION="WRONG_FUNCTION_CALLED"/>
    <documentation PARAMETER="INPUT_METHOD" KIND="P" INDEX=" 001"/>
    <documentation PARAMETER="MASS_PROCESSING" KIND="P" INDEX=" 002"/>
    <documentation PARAMETER="WORKFLOW_RESULT" KIND="P" INDEX=" 003"/>
    <documentation PARAMETER="APPLICATION_VARIABLE" KIND="P" INDEX=" 004"/>
    <documentation PARAMETER="IN_UPDATE_TASK" KIND="P" INDEX=" 005"/>
    <documentation PARAMETER="CALL_TRANSACTION_DONE" KIND="P" INDEX=" 006"/>
    <documentation PARAMETER="IDOC_CONTRL" KIND="P" INDEX=" 007"/>
    <documentation PARAMETER="IDOC_DATA" KIND="P" INDEX=" 008"/>
    <documentation PARAMETER="IDOC_STATUS" KIND="P" INDEX=" 009"/>
    <documentation PARAMETER="RETURN_VARIABLES" KIND="P" INDEX=" 010"/>
    <documentation PARAMETER="SERIALIZATION_INFO" KIND="P" INDEX=" 011"/>
    <documentation PARAMETER="WRONG_FUNCTION_CALLED" KIND="X" INDEX=" 012"/>
    <fm_source_new>DATA: lv_transaction_id TYPE arfctid,
        ls_return_message TYPE zglif_return_message.

  &quot; Run is not governed by ZGLIF_DISPATCHER -&gt; only test posting with no change in status
  CALL FUNCTION &apos;IDOC_INPUT_FIDCC2&apos;
    EXPORTING
      input_method          = input_method
      mass_processing       = mass_processing
      &quot;* IMPORTING
      &quot;* WORKFLOW_RESULT       = WORKFLOW_RESULT
      &quot;* APPLICATION_VARIABLE  = APPLICATION_VARIABLE
      &quot;* IN_UPDATE_TASK        = IN_UPDATE_TASK
      &quot;* CALL_TRANSACTION_DONE = CALL_TRANSACTION_DONE
    TABLES
      idoc_contrl           = idoc_contrl
      idoc_data             = idoc_data
      idoc_status           = idoc_status
      return_variables      = return_variables
      serialization_info    = serialization_info
    EXCEPTIONS
      wrong_function_called = 1
      OTHERS                = 2.

  IF sy-subrc = 0.  &quot; no technical error
    LOOP AT idoc_status ASSIGNING FIELD-SYMBOL(&lt;ls_idoc_status&gt;).
      DATA(lv_docnum) = &lt;ls_idoc_status&gt;-docnum.
      DATA(ls_message) = CORRESPONDING zglif_return_message( &lt;ls_idoc_status&gt; ).

      IF &lt;ls_idoc_status&gt;-status = 53 AND &lt;ls_idoc_status&gt;-msgid = &apos;F1&apos; AND &lt;ls_idoc_status&gt;-msgno = 310.
        PERFORM update_status USING lv_docnum zglif_dispatcher=&gt;gc_30_processing_ok ls_message.
      ELSE.
        PERFORM update_status USING lv_docnum zglif_dispatcher=&gt;gc_31_processing_fail ls_message.
      ENDIF.

    ENDLOOP.
  ELSE.
    LOOP AT idoc_status ASSIGNING &lt;ls_idoc_status&gt;.
      lv_docnum = &lt;ls_idoc_status&gt;-docnum.
      ls_message = CORRESPONDING zglif_return_message( &lt;ls_idoc_status&gt; ).
      PERFORM update_status USING lv_docnum zglif_dispatcher=&gt;gc_31_processing_fail ls_message.
    ENDLOOP.
  ENDIF.

*
*  IF sy-subrc = 0.  &quot; no technical error
*    ls_return_message = CORRESPONDING #( idoc_status[ 1 ] ).  &quot; copy the return message and idoc status
*    IF idoc_status[ 1 ]-status = 53 AND idoc_status[ 1 ]-msgid = &apos;F1&apos; AND idoc_status[ 1 ]-msgno = 310. &quot; successful posting
*      &quot; Update status for GT_MESS_STAT
*      &lt;lr_processor_idoc&gt;-&gt;set_status(
*        piv_idoc            = idoc_contrl[ 1 ]-docnum
*        piv_status          = zglif_dispatcher=&gt;gc_30_processing_ok
*        pis_return_message  = ls_return_message ).
*    ELSE.
*      &quot; Update status for GT_MESS_STAT
*      &lt;lr_processor_idoc&gt;-&gt;set_status(
*          piv_idoc        = idoc_contrl[ 1 ]-docnum
*          piv_status      = zglif_dispatcher=&gt;gc_31_processing_fail
*          pis_return_message  = ls_return_message ).
*    ENDIF.
*  ELSE. &quot; Error in processing the IDoc (technical error)
*    &quot; Update status for GT_MESS_STAT
*    &lt;lr_processor_idoc&gt;-&gt;set_status(
*        piv_idoc        = idoc_contrl[ 1 ]-docnum
*        piv_status      = zglif_dispatcher=&gt;gc_31_processing_fail
*        pis_return_message  = ls_return_message ).
*  ENDIF.</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="ZGLIF_IDOC_UE_SAPLEDI1_001" STEXT="GLIF: user-exit SAPLEDI1-001 (change IDoc control record)">
    <importing PARAMETER="CONTROL_IN" TYP="EDIDC"/>
    <exporting PARAMETER="CONTROL_OUT" TYP="EDIDC"/>
    <documentation PARAMETER="CONTROL_IN" KIND="P" STEXT="Control record (IDoc)" INDEX=" 001"/>
    <documentation PARAMETER="CONTROL_OUT" KIND="P" STEXT="Control record (IDoc)" INDEX=" 002"/>
    <fm_source_new>*&amp; 2018-09-17 BookNG: Tomas Talpa
*&amp;                    derive idoc control fieds from customizing
*&amp;                    (this allows BookNG to send control records with constants, determined on SAP per system/client/etc)

  control_out = control_in.

  &quot; Get the Dispatcher from ZGLIF_ACTIVATE report
  DATA: ls_dummycust TYPE zglif_convcust,
        lv_fieldname TYPE string.
  FIELD-SYMBOLS: &lt;lr_superconvertor&gt; TYPE REF TO zglif_superconvertor,
                 &lt;lr_convertor_idoc&gt; TYPE REF TO zglif_convertor_idoc.
  lv_fieldname = &apos;(ZGLIF_ACTIVATE)GR_DISPATCHER-&gt;MO_CONVERTOR&apos;.
  TRY.
      DATA(lr_superconvertor) = NEW zglif_superconvertor( ).
      DATA(lr_convertor_idoc) = NEW zglif_convertor_idoc( ls_dummycust ).
      ASSIGN lr_superconvertor TO &lt;lr_superconvertor&gt;.
      ASSIGN lr_convertor_idoc TO &lt;lr_convertor_idoc&gt;.
      ASSIGN (lv_fieldname) TO &lt;lr_superconvertor&gt; CASTING.
      IF &lt;lr_superconvertor&gt; IS ASSIGNED.
        TRY.
            &lt;lr_convertor_idoc&gt; ?= &lt;lr_superconvertor&gt;.  &quot; downcasting
          CATCH cx_root.
        ENDTRY.

        IF &lt;lr_convertor_idoc&gt; IS ASSIGNED.
          IF &lt;lr_convertor_idoc&gt;-&gt;gs_convcust-edi_xactive EQ &apos;X&apos;.
            MOVE:
              &lt;lr_convertor_idoc&gt;-&gt;gs_convcust-edi_rcvpor TO control_out-rcvpor,
              &lt;lr_convertor_idoc&gt;-&gt;gs_convcust-edi_rcvprt TO control_out-rcvprt,
              &lt;lr_convertor_idoc&gt;-&gt;gs_convcust-edi_rcvprn TO control_out-rcvprn,
              &lt;lr_convertor_idoc&gt;-&gt;gs_convcust-edi_sndpor TO control_out-sndpor,
              &lt;lr_convertor_idoc&gt;-&gt;gs_convcust-edi_sndprt TO control_out-sndprt,
              &lt;lr_convertor_idoc&gt;-&gt;gs_convcust-edi_sndprn TO control_out-sndprn.
          ENDIF.

        ENDIF.
      ENDIF.
    CATCH cx_root.
  ENDTRY.</fm_source_new>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR AREA="ZGLIF_MESS_STAT" SPRAS="E" AREAT="Extended Table Maintenance (Generated)">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_MESS_STAT" SQLX="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZGLIF_MESS_STAT" DNUM="0002" FNUM="0002" BZMX="61 " BZBR="255 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Overview Screen ZGLIF_MESS_STAT">
     <dynprofield FNAM="TCTRL_ZGLIF_MESS_STAT" DIDX="003B" FLG1="F8" FLG2="FC" FLG3="00" FILL="T" FMB1="00" FMB2="00" LENG="FF" LINE="01" COLN="02" LTYP="E" LANF="65" LBLK="01" LREP="01" AGLT="00" ADEZ="00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="003C" FLG1="80" FLG2="02" FLG3="88" FMB1="30" FMB2="40" LENG="3C" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-INTERFACE_NAME" DIDX="0010" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Interface Name" RES1="X"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-FILENAME" DIDX="0028" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Original data source name"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-BATCH_ID" DIDX="0008" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Batch ID"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-MESSAGE_ID" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Message ID"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-IDOC_NUMBER" DIDX="0010" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="IDoc Number"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-MESSAGE_STATUS" DIDX="001E" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="M. Status" RES1="X"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-IDOC_STATUS" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="07" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="IDoc Stat."/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-MSGTY" DIDX="0008" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="08" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Msg Type"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-MSGID" DIDX="0014" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="09" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Return Message Class ID"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-MSGNO" DIDX="0008" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0A" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Msg. No."/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-MSGV1" DIDX="0014" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0B" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Return Message Parameter"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-MSGV2" DIDX="0013" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0C" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Return Message Parameter"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-MSGV3" DIDX="0012" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0D" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Return Message Parameter"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-MSGV4" DIDX="0011" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0E" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Return Message Parameter"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-CATEGORY" DIDX="000D" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0F" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Category"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-MESSAGE_CHANGED_ON" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="10" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Changed On" RES1="X"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-MESSAGE_CHANGED_AT" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="11" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Changed At" RES1="X"/>
     <dynprofield FNAM="*ZGLIF_MESS_STAT-MESSAGE_CHANGED_BY" DIDX="000C" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="12" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Changed By User"/>
     <dynprofield FNAM="VIM_MARKED" DIDX="0001" FLG1="80" FLG2="00" FLG3="88" FILL="C" FMB1="00" FMB2="20" LENG="01" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-INTERFACE_NAME" DIDX="0008" FLG1="B1" FLG2="00" FLG3="80" FMB1="30" FMB2="28" LENG="10" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="20" ADEZ="00" STXT="________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-FILENAME" DIDX="000A" FLG1="A1" FLG2="02" FLG3="80" FMB1="30" FMB2="20" LENG="C8" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="FF" ADEZ="00" STXT="____________________________________________________________________________________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-BATCH_ID" DIDX="0008" FLG1="B0" FLG2="02" FLG3="80" FMB1="30" FMB2="20" LENG="05" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" PAID="ZGLIF_BATCH" UCNV="ALPHA" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="14" ADEZ="00" STXT="_____" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-MESSAGE_ID" DIDX="000A" FLG1="B0" FLG2="02" FLG3="80" FMB1="30" FMB2="20" LENG="07" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" UCNV="ALPHA" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="14" ADEZ="00" STXT="_______" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-IDOC_NUMBER" DIDX="0008" FLG1="B1" FLG2="00" FLG3="80" FMB1="30" FMB2="20" LENG="10" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="NUMC" GRP1="KEY" ITYP="N" AGLT="20" ADEZ="00" STXT="________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-MESSAGE_STATUS" DIDX="001E" FLG1="B0" FLG2="02" FLG3="81" FMB1="00" FMB2="08" LENG="02" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="XDL                                    00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-IDOC_STATUS" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="02" LINE="01" COLN="07" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-MSGTY" DIDX="0008" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="01" LINE="01" COLN="08" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="02" ADEZ="00" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-MSGID" DIDX="0014" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="14" LINE="01" COLN="09" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="28" ADEZ="00" STXT="____________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-MSGNO" DIDX="0008" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="03" LINE="01" COLN="0A" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="06" ADEZ="00" STXT="___" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-MSGV1" DIDX="0014" FLG1="B1" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="32" LINE="01" COLN="0B" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="64" ADEZ="00" STXT="__________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-MSGV2" DIDX="0013" FLG1="B1" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="32" LINE="01" COLN="0C" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="64" ADEZ="00" STXT="__________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-MSGV3" DIDX="0012" FLG1="B1" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="32" LINE="01" COLN="0D" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="64" ADEZ="00" STXT="__________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-MSGV4" DIDX="0011" FLG1="B1" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="32" LINE="01" COLN="0E" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="64" ADEZ="00" STXT="__________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-CATEGORY" DIDX="000D" FLG1="B1" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="01" COLN="0F" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="3C" ADEZ="00" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-MESSAGE_CHANGED_ON" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="31" FMB2="08" LENG="0A" LINE="01" COLN="10" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="DATS" ITYP="D" AGLT="10" ADEZ="00" STXT="__________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-MESSAGE_CHANGED_AT" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="31" FMB2="08" LENG="08" LINE="01" COLN="11" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="TIMS" ITYP="T" AGLT="0C" ADEZ="00" STXT="________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_MESS_STAT-MESSAGE_CHANGED_BY" DIDX="000C" FLG1="B0" FLG2="00" FLG3="80" FMB1="31" FMB2="00" LENG="0C" LINE="01" COLN="12" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="18" ADEZ="00" STXT="____________" RES1="                                       00"/>
     <dynprofield FNAM="VIM_POSI_PUSH" DIDX="0000" FLG1="80" FLG2="00" FLG3="88" FILL="P" FMB1="30" FMB2="00" LENG="14" LINE="3D" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                                                                                                                                                        POSI"/>
     <dynprofield FNAM="VIM_POSITION_INFO" DIDX="0000" FLG1="80" FLG2="02" FLG3="88" FMB1="33" FMB2="00" LENG="1E" LINE="3D" COLN="29" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="OK_CODE" DIDX="0000" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE LISTE_INITIALISIEREN.
 LOOP AT EXTRACT WITH CONTROL
  TCTRL_ZGLIF_MESS_STAT CURSOR NEXTLINE.
   MODULE LISTE_SHOW_LISTE.
 ENDLOOP.
*
PROCESS AFTER INPUT.
 MODULE LISTE_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE LISTE_BEFORE_LOOP.
 LOOP AT EXTRACT.
   MODULE LISTE_INIT_WORKAREA.
   CHAIN.
    FIELD ZGLIF_MESS_STAT-INTERFACE_NAME .
    FIELD ZGLIF_MESS_STAT-FILENAME .
    FIELD ZGLIF_MESS_STAT-BATCH_ID .
    FIELD ZGLIF_MESS_STAT-MESSAGE_ID .
    FIELD ZGLIF_MESS_STAT-IDOC_NUMBER .
    FIELD ZGLIF_MESS_STAT-MESSAGE_STATUS .
    FIELD ZGLIF_MESS_STAT-IDOC_STATUS .
    FIELD ZGLIF_MESS_STAT-MSGTY .
    FIELD ZGLIF_MESS_STAT-MSGID .
    FIELD ZGLIF_MESS_STAT-MSGNO .
    FIELD ZGLIF_MESS_STAT-MSGV1 .
    FIELD ZGLIF_MESS_STAT-MSGV2 .
    FIELD ZGLIF_MESS_STAT-MSGV3 .
    FIELD ZGLIF_MESS_STAT-MSGV4 .
    FIELD ZGLIF_MESS_STAT-CATEGORY .
    FIELD ZGLIF_MESS_STAT-MESSAGE_CHANGED_ON .
    FIELD ZGLIF_MESS_STAT-MESSAGE_CHANGED_AT .
    FIELD ZGLIF_MESS_STAT-MESSAGE_CHANGED_BY .
    MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
   ENDCHAIN.
   FIELD VIM_MARKED MODULE LISTE_MARK_CHECKBOX.
   CHAIN.
    FIELD ZGLIF_MESS_STAT-INTERFACE_NAME .
    FIELD ZGLIF_MESS_STAT-FILENAME .
    FIELD ZGLIF_MESS_STAT-BATCH_ID .
    FIELD ZGLIF_MESS_STAT-MESSAGE_ID .
    FIELD ZGLIF_MESS_STAT-IDOC_NUMBER .
    MODULE LISTE_UPDATE_LISTE.
   ENDCHAIN.
 ENDLOOP.
 MODULE LISTE_AFTER_LOOP.</dynproflowsource>
    </dynpro>
   </dynpros>
   <source>* regenerated at 2017-07-03 11:59:32
*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_MESS_STATTOP.               &quot; Global Declarations
  INCLUDE LZGLIF_MESS_STATUXX.               &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_MESS_STATF...               &quot; Subroutines
* INCLUDE LZGLIF_MESS_STATO...               &quot; PBO-Modules
* INCLUDE LZGLIF_MESS_STATI...               &quot; PAI-Modules
* INCLUDE LZGLIF_MESS_STATE...               &quot; Events
* INCLUDE LZGLIF_MESS_STATP...               &quot; Local class implement.
* INCLUDE LZGLIF_MESS_STATT99.               &quot; ABAP Unit tests
  INCLUDE LZGLIF_MESS_STATF00                     . &quot; subprograms
  INCLUDE LZGLIF_MESS_STATI00                     . &quot; PAI modules
  INCLUDE LSVIMFXX                                . &quot; subprograms
  INCLUDE LSVIMOXX                                . &quot; PBO modules
  INCLUDE LSVIMIXX                                . &quot; PAI modules</source>
  </mainprogram>
  <includeprograms/>
  <functionmodules>
   <functionmodule NAME="TABLEFRAME_ZGLIF_MESS_STAT" STEXT="Extended Table Maintenance: Upper Level">
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 002"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 003"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 004"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 005"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tabelle mit dynam. zu deaktivierenden CUA-Funkt." INDEX=" 006"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 007"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 008"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 009"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEFRAME_ZGLIF_MESS_STAT
*   generation date: 2017-07-03 at 11:59:32
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEFRAME TABLES X_HEADER X_NAMTAB DBA_SELLIST DPL_SELLIST
                            EXCL_CUA_FUNCT
                     USING  CORR_NUMBER VIEW_ACTION VIEW_NAME.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="TABLEPROC_ZGLIF_MESS_STAT" GLOBAL="X" STEXT="Lower-level extended table maintenance">
    <importing PARAMETER="FCODE" DEFAULT="&apos;RDED&apos;"/>
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <exporting PARAMETER="LAST_ACT_ENTRY"/>
    <exporting PARAMETER="UCOMM"/>
    <exporting PARAMETER="UPDATE_REQUIRED"/>
    <tables PARAMETER="CORR_KEYTAB" DBSTRUCT="E071K"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="EXTRACT"/>
    <tables PARAMETER="TOTAL"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <exceptions EXCEPTION="SAVING_CORRECTION_FAILED"/>
    <documentation PARAMETER="FCODE" KIND="P" STEXT="gewünschte Funktion des Bausteins" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 002"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 003"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 004"/>
    <documentation PARAMETER="LAST_ACT_ENTRY" KIND="P" STEXT="Index der Cursorposition in der Anzeigetabelle" INDEX=" 005"/>
    <documentation PARAMETER="UCOMM" KIND="P" STEXT="letztes User-command innerhalb der Viewpflege" INDEX=" 006"/>
    <documentation PARAMETER="UPDATE_REQUIRED" KIND="P" STEXT="Flag: Einträge verändert, Sichern erforderlich" INDEX=" 007"/>
    <documentation PARAMETER="CORR_KEYTAB" KIND="P" STEXT="Tabelle mit den Keys der zu transport. Einträge" INDEX=" 008"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 009"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 010"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tab. der nicht zu aktivierenden CUA-Funktionen" INDEX=" 011"/>
    <documentation PARAMETER="EXTRACT" KIND="P" STEXT="Tab. der gerade sichtbaren Daten (Anzeigetabelle" INDEX=" 012"/>
    <documentation PARAMETER="TOTAL" KIND="P" STEXT="Tabelle, mit allen von der DB gelesenen Daten" INDEX=" 013"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 014"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 015"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 016"/>
    <documentation PARAMETER="SAVING_CORRECTION_FAILED" KIND="X" STEXT="Fehler beim Sichern der Korrektureinträge" INDEX=" 017"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEPROC_ZGLIF_MESS_STAT
*   generation date: 2017-07-03 at 11:59:32
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEPROC.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR AREA="ZGLIF_PRCTRCUST" SPRAS="E" AREAT="Extended Table Maintenance (Generated)">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_PRCTRCUST" SQLX="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZGLIF_PRCTRCUST" DNUM="0001" FNUM="0001" BZMX="61 " BZBR="255 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Overview Screen ZGLIF_PRCTRCUST">
     <dynprofield FNAM="TCTRL_ZGLIF_PRCTRCUST" DIDX="003B" FLG1="F8" FLG2="FC" FLG3="00" FILL="T" FMB1="00" FMB2="00" LENG="FF" LINE="01" COLN="02" LTYP="E" LANF="65" LBLK="01" LREP="01" AUTH="101" AGLT="00" ADEZ="00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="003C" FLG1="80" FLG2="02" FLG3="88" FMB1="30" FMB2="40" LENG="3C" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
     <dynprofield FNAM="*ZGLIF_PRCTRCUST-INTERFACE_NAME" DIDX="0010" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A8" LENG="28" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Interface Name" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_PRCTRCUST-VALID_FROM" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="A8" LENG="28" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Valid From" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_PRCTRCUST-VALID_TO" DIDX="000A" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A8" LENG="28" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Valid To" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_PRCTRCUST-BUKRS" DIDX="0004" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="A8" LENG="28" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="4" AGLT="00" ADEZ="00" STXT="CoCd" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_PRCTRCUST-PRCTR_SOURCE" DIDX="000A" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Source Profit Center" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_PRCTRCUST-PRCTR_TARGET" DIDX="000A" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Target Profit Center" RES1="X                                      00"/>
     <dynprofield FNAM="VIM_MARKED" DIDX="0001" FLG1="80" FLG2="00" FLG3="88" FILL="C" FMB1="00" FMB2="20" LENG="01" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="_"/>
     <dynprofield FNAM="ZGLIF_PRCTRCUST-INTERFACE_NAME" DIDX="0008" FLG1="B1" FLG2="00" FLG3="80" FMB1="30" FMB2="28" LENG="10" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="20" ADEZ="00" STXT="________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_PRCTRCUST-VALID_FROM" DIDX="000F" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="28" LENG="0A" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="DATS" GRP1="KEY" ITYP="D" AGLT="10" ADEZ="00" STXT="__________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_PRCTRCUST-VALID_TO" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="28" LENG="0A" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="DATS" GRP1="KEY" ITYP="D" AGLT="10" ADEZ="00" STXT="__________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_PRCTRCUST-BUKRS" DIDX="0004" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="28" LENG="04" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" PAID="BUK" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="08" ADEZ="00" STXT="____" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_PRCTRCUST-PRCTR_SOURCE" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="20" LENG="0A" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_PRCTRCUST-PRCTR_TARGET" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="08" LENG="0A" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" UCNV="ALPHA" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="X                                      00"/>
     <dynprofield FNAM="VIM_POSI_PUSH" DIDX="0014" FLG1="80" FLG2="00" FLG3="88" FILL="P" FMB1="30" FMB2="00" LENG="14" LINE="3D" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                                                                                                                                                        POSI"/>
     <dynprofield FNAM="VIM_POSITION_INFO" DIDX="001E" FLG1="80" FLG2="02" FLG3="88" FMB1="33" FMB2="00" LENG="1E" LINE="3D" COLN="29" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE LISTE_INITIALISIEREN.
 LOOP AT EXTRACT WITH CONTROL
  TCTRL_ZGLIF_PRCTRCUST CURSOR NEXTLINE.
   MODULE LISTE_SHOW_LISTE.
 ENDLOOP.
*
PROCESS AFTER INPUT.
 MODULE LISTE_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE LISTE_BEFORE_LOOP.
 LOOP AT EXTRACT.
   MODULE LISTE_INIT_WORKAREA.
   CHAIN.
    FIELD ZGLIF_PRCTRCUST-INTERFACE_NAME .
    FIELD ZGLIF_PRCTRCUST-VALID_FROM .
    FIELD ZGLIF_PRCTRCUST-VALID_TO .
    FIELD ZGLIF_PRCTRCUST-BUKRS .
    FIELD ZGLIF_PRCTRCUST-PRCTR_SOURCE .
    FIELD ZGLIF_PRCTRCUST-PRCTR_TARGET .
    MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
   ENDCHAIN.
   FIELD VIM_MARKED MODULE LISTE_MARK_CHECKBOX.
   CHAIN.
    FIELD ZGLIF_PRCTRCUST-INTERFACE_NAME .
    FIELD ZGLIF_PRCTRCUST-VALID_FROM .
    FIELD ZGLIF_PRCTRCUST-VALID_TO .
    FIELD ZGLIF_PRCTRCUST-BUKRS .
    FIELD ZGLIF_PRCTRCUST-PRCTR_SOURCE .
    MODULE LISTE_UPDATE_LISTE.
   ENDCHAIN.
 ENDLOOP.
 MODULE LISTE_AFTER_LOOP.</dynproflowsource>
    </dynpro>
   </dynpros>
   <source>* regenerated at 2017-05-02 14:45:07
*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_PRCTRCUSTTOP.               &quot; Global Declarations
  INCLUDE LZGLIF_PRCTRCUSTUXX.               &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_PRCTRCUSTF...               &quot; Subroutines
* INCLUDE LZGLIF_PRCTRCUSTO...               &quot; PBO-Modules
* INCLUDE LZGLIF_PRCTRCUSTI...               &quot; PAI-Modules
* INCLUDE LZGLIF_PRCTRCUSTE...               &quot; Events
* INCLUDE LZGLIF_PRCTRCUSTP...               &quot; Local class implement.
* INCLUDE LZGLIF_PRCTRCUSTT99.               &quot; ABAP Unit tests
  INCLUDE LZGLIF_PRCTRCUSTF00                     . &quot; subprograms
  INCLUDE LZGLIF_PRCTRCUSTI00                     . &quot; PAI modules
  INCLUDE LSVIMFXX                                . &quot; subprograms
  INCLUDE LSVIMOXX                                . &quot; PBO modules
  INCLUDE LSVIMIXX                                . &quot; PAI modules</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZGLIF_PRCTRCUSTF00" SQLX="X" EDTX="X" SUBC="I" LEVL="753" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 20.12.2019 at 17:50:32
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .</include_source>
   </include>
   <include NAME="LZGLIF_PRCTRCUSTI00" SQLX="X" EDTX="X" SUBC="I" LEVL="750" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 2017-05-02 at 14:46:27
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_PRCTRCUSTI00" SQLX="X" EDTX="X" SUBC="I" LEVL="750" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 2017-05-02 at 14:46:27
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_PRCTRCUSTTOP" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
    <include_source>* regenerated at 2017-05-02 14:45:07
FUNCTION-POOL ZGLIF_PRCTRCUST            MESSAGE-ID SV.

* INCLUDE LZGLIF_PRCTRCUSTD...               &quot; Local class definition
  INCLUDE LSVIMDAT                                . &quot;general data decl.
  INCLUDE LZGLIF_PRCTRCUSTT00                     . &quot;view rel. data dcl.</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="TABLEFRAME_ZGLIF_PRCTRCUST" STEXT="Extended Table Maintenance: Upper Level">
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 002"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 003"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 004"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 005"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tabelle mit dynam. zu deaktivierenden CUA-Funkt." INDEX=" 006"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 007"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 008"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 009"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEFRAME_ZGLIF_PRCTRCUST
*   generation date: 2017-05-02 at 16:56:10
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEFRAME TABLES X_HEADER X_NAMTAB DBA_SELLIST DPL_SELLIST
                            EXCL_CUA_FUNCT
                     USING  CORR_NUMBER VIEW_ACTION VIEW_NAME.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="TABLEPROC_ZGLIF_PRCTRCUST" GLOBAL="X" STEXT="Lower-level extended table maintenance">
    <importing PARAMETER="FCODE" DEFAULT="&apos;RDED&apos;"/>
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <exporting PARAMETER="LAST_ACT_ENTRY"/>
    <exporting PARAMETER="UCOMM"/>
    <exporting PARAMETER="UPDATE_REQUIRED"/>
    <tables PARAMETER="CORR_KEYTAB" DBSTRUCT="E071K"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="EXTRACT"/>
    <tables PARAMETER="TOTAL"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <exceptions EXCEPTION="SAVING_CORRECTION_FAILED"/>
    <documentation PARAMETER="FCODE" KIND="P" STEXT="gewünschte Funktion des Bausteins" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 002"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 003"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 004"/>
    <documentation PARAMETER="LAST_ACT_ENTRY" KIND="P" STEXT="Index der Cursorposition in der Anzeigetabelle" INDEX=" 005"/>
    <documentation PARAMETER="UCOMM" KIND="P" STEXT="letztes User-command innerhalb der Viewpflege" INDEX=" 006"/>
    <documentation PARAMETER="UPDATE_REQUIRED" KIND="P" STEXT="Flag: Einträge verändert, Sichern erforderlich" INDEX=" 007"/>
    <documentation PARAMETER="CORR_KEYTAB" KIND="P" STEXT="Tabelle mit den Keys der zu transport. Einträge" INDEX=" 008"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 009"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 010"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tab. der nicht zu aktivierenden CUA-Funktionen" INDEX=" 011"/>
    <documentation PARAMETER="EXTRACT" KIND="P" STEXT="Tab. der gerade sichtbaren Daten (Anzeigetabelle" INDEX=" 012"/>
    <documentation PARAMETER="TOTAL" KIND="P" STEXT="Tabelle, mit allen von der DB gelesenen Daten" INDEX=" 013"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 014"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 015"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 016"/>
    <documentation PARAMETER="SAVING_CORRECTION_FAILED" KIND="X" STEXT="Fehler beim Sichern der Korrektureinträge" INDEX=" 017"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEPROC_ZGLIF_PRCTRCUST
*   generation date: 2017-05-02 at 16:56:10
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEPROC.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR AREA="ZGLIF_PROCCUST" SPRAS="E" AREAT="Extended Table Maintenance (Generated)">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_PROCCUST" SQLX="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZGLIF_PROCCUST" DNUM="0001" FNUM="0001" BZMX="61 " BZBR="255 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Overview Screen ZGLIF_PROCCUST">
     <dynprofield FNAM="TCTRL_ZGLIF_PROCCUST" DIDX="003B" FLG1="F8" FLG2="FC" FLG3="00" FILL="T" FMB1="00" FMB2="00" LENG="FF" LINE="01" COLN="02" LTYP="E" LANF="65" LBLK="01" LREP="01" AUTH="101" AGLT="00" ADEZ="00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="003C" FLG1="80" FLG2="02" FLG3="88" FMB1="30" FMB2="40" LENG="3C" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
     <dynprofield FNAM="*ZGLIF_PROCCUST-INTERFACE_NAME" DIDX="0010" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A8" LENG="28" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Interface Name" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_PROCCUST-ACTIVE" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Active" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_PROCCUST-RFCGR" DIDX="0014" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Server group" RES1="X                                      00"/>
     <dynprofield FNAM="VIM_MARKED" DIDX="0001" FLG1="80" FLG2="00" FLG3="88" FILL="C" FMB1="00" FMB2="20" LENG="01" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="_"/>
     <dynprofield FNAM="ZGLIF_PROCCUST-INTERFACE_NAME" DIDX="0010" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="28" LENG="10" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="20" ADEZ="00" STXT="________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_PROCCUST-ACTIVE" DIDX="000A" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="103" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_PROCCUST-RFCGR" DIDX="0014" FLG1="B0" FLG2="02" FLG3="84" FMB1="00" FMB2="08" LENG="14" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="28" ADEZ="00" STXT="____________________" RES1="X                                      00"/>
     <dynprofield FNAM="VIM_POSI_PUSH" DIDX="0014" FLG1="80" FLG2="00" FLG3="88" FILL="P" FMB1="30" FMB2="00" LENG="14" LINE="3D" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="104" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                                                                                                                                                        POSI"/>
     <dynprofield FNAM="VIM_POSITION_INFO" DIDX="001E" FLG1="80" FLG2="02" FLG3="88" FMB1="33" FMB2="00" LENG="1E" LINE="3D" COLN="29" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE LISTE_INITIALISIEREN.
 LOOP AT EXTRACT WITH CONTROL
  TCTRL_ZGLIF_PROCCUST CURSOR NEXTLINE.
   MODULE LISTE_SHOW_LISTE.
 ENDLOOP.
*
PROCESS AFTER INPUT.
 MODULE LISTE_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE LISTE_BEFORE_LOOP.
 LOOP AT EXTRACT.
   MODULE LISTE_INIT_WORKAREA.
   CHAIN.
    FIELD ZGLIF_PROCCUST-INTERFACE_NAME .
    FIELD ZGLIF_PROCCUST-ACTIVE .
    FIELD ZGLIF_PROCCUST-RFCGR .
    MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
   ENDCHAIN.
   FIELD VIM_MARKED MODULE LISTE_MARK_CHECKBOX.
   CHAIN.
    FIELD ZGLIF_PROCCUST-INTERFACE_NAME .
    MODULE LISTE_UPDATE_LISTE.
   ENDCHAIN.
 ENDLOOP.
 MODULE LISTE_AFTER_LOOP.</dynproflowsource>
    </dynpro>
   </dynpros>
   <source>* regenerated at 2017-06-07 15:32:01
*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_PROCCUSTTOP.                &quot; Global Declarations
  INCLUDE LZGLIF_PROCCUSTUXX.                &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_PROCCUSTF...                &quot; Subroutines
* INCLUDE LZGLIF_PROCCUSTO...                &quot; PBO-Modules
* INCLUDE LZGLIF_PROCCUSTI...                &quot; PAI-Modules
* INCLUDE LZGLIF_PROCCUSTE...                &quot; Events
* INCLUDE LZGLIF_PROCCUSTP...                &quot; Local class implement.
* INCLUDE LZGLIF_PROCCUSTT99.                &quot; ABAP Unit tests
  INCLUDE LZGLIF_PROCCUSTF00                      . &quot; subprograms
  INCLUDE LZGLIF_PROCCUSTI00                      . &quot; PAI modules
  INCLUDE LSVIMFXX                                . &quot; subprograms
  INCLUDE LSVIMOXX                                . &quot; PBO modules
  INCLUDE LSVIMIXX                                . &quot; PAI modules</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZGLIF_PROCCUSTF00" SQLX="X" EDTX="X" SUBC="I" LEVL="750" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 2017-06-07 at 15:32:01
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .</include_source>
   </include>
   <include NAME="LZGLIF_PROCCUSTI00" SQLX="X" EDTX="X" SUBC="I" LEVL="750" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 2017-06-07 at 15:32:01
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_PROCCUSTI00" SQLX="X" EDTX="X" SUBC="I" LEVL="750" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 2017-06-07 at 15:32:01
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_PROCCUSTTOP" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
    <include_source>* regenerated at 2017-06-07 15:32:00
FUNCTION-POOL ZGLIF_PROCCUST             MESSAGE-ID SV.

* INCLUDE LZGLIF_PROCCUSTD...                &quot; Local class definition
  INCLUDE LSVIMDAT                                . &quot;general data decl.
  INCLUDE LZGLIF_PROCCUSTT00                      . &quot;view rel. data dcl.</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="TABLEFRAME_ZGLIF_PROCCUST" STEXT="Extended Table Maintenance: Upper Level">
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 002"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 003"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 004"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 005"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tabelle mit dynam. zu deaktivierenden CUA-Funkt." INDEX=" 006"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 007"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 008"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 009"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEFRAME_ZGLIF_PROCCUST
*   generation date: 2017-06-07 at 15:32:00
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEFRAME TABLES X_HEADER X_NAMTAB DBA_SELLIST DPL_SELLIST
                            EXCL_CUA_FUNCT
                     USING  CORR_NUMBER VIEW_ACTION VIEW_NAME.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="TABLEPROC_ZGLIF_PROCCUST" GLOBAL="X" STEXT="Lower-level extended table maintenance">
    <importing PARAMETER="FCODE" DEFAULT="&apos;RDED&apos;"/>
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <exporting PARAMETER="LAST_ACT_ENTRY"/>
    <exporting PARAMETER="UCOMM"/>
    <exporting PARAMETER="UPDATE_REQUIRED"/>
    <tables PARAMETER="CORR_KEYTAB" DBSTRUCT="E071K"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="EXTRACT"/>
    <tables PARAMETER="TOTAL"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <exceptions EXCEPTION="SAVING_CORRECTION_FAILED"/>
    <documentation PARAMETER="FCODE" KIND="P" STEXT="gewünschte Funktion des Bausteins" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 002"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 003"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 004"/>
    <documentation PARAMETER="LAST_ACT_ENTRY" KIND="P" STEXT="Index der Cursorposition in der Anzeigetabelle" INDEX=" 005"/>
    <documentation PARAMETER="UCOMM" KIND="P" STEXT="letztes User-command innerhalb der Viewpflege" INDEX=" 006"/>
    <documentation PARAMETER="UPDATE_REQUIRED" KIND="P" STEXT="Flag: Einträge verändert, Sichern erforderlich" INDEX=" 007"/>
    <documentation PARAMETER="CORR_KEYTAB" KIND="P" STEXT="Tabelle mit den Keys der zu transport. Einträge" INDEX=" 008"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 009"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 010"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tab. der nicht zu aktivierenden CUA-Funktionen" INDEX=" 011"/>
    <documentation PARAMETER="EXTRACT" KIND="P" STEXT="Tab. der gerade sichtbaren Daten (Anzeigetabelle" INDEX=" 012"/>
    <documentation PARAMETER="TOTAL" KIND="P" STEXT="Tabelle, mit allen von der DB gelesenen Daten" INDEX=" 013"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 014"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 015"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 016"/>
    <documentation PARAMETER="SAVING_CORRECTION_FAILED" KIND="X" STEXT="Fehler beim Sichern der Korrektureinträge" INDEX=" 017"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEPROC_ZGLIF_PROCCUST
*   generation date: 2017-06-07 at 15:32:00
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEPROC.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR AREA="ZGLIF_WORKFLOW" SPRAS="E" AREAT="Workflow related FMs">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_WORKFLOW" VARCL="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <source>*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_WORKFLOWTOP.                &quot; Global Declarations
  INCLUDE LZGLIF_WORKFLOWUXX.                &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_WORKFLOWF...                &quot; Subroutines
* INCLUDE LZGLIF_WORKFLOWO...                &quot; PBO-Modules
* INCLUDE LZGLIF_WORKFLOWI...                &quot; PAI-Modules
* INCLUDE LZGLIF_WORKFLOWE...                &quot; Events
* INCLUDE LZGLIF_WORKFLOWP...                &quot; Local class implement.
* INCLUDE LZGLIF_WORKFLOWT99.                &quot; ABAP Unit tests</source>
  </mainprogram>
  <includeprograms/>
  <functionmodules>
   <functionmodule NAME="ZGLIF_SUBMIT_ERROR_MONITOR" STEXT="Submit report Error Monitor">
    <importing PARAMETER="PIV_BATCH" REFERENCE="X" TYP="ZGLIF_BATCH_ID"/>
    <importing PARAMETER="PIV_CATEGORY" REFERENCE="X" TYP="ZGLIF_CATEGORY_ID"/>
    <documentation PARAMETER="PIV_BATCH" KIND="P" STEXT="GLIF: Batch ID" INDEX=" 001"/>
    <documentation PARAMETER="PIV_CATEGORY" KIND="P" STEXT="GLIF: Category ID" INDEX=" 002"/>
    <fm_source>*&amp;---------------------------------------------------------------------*
*&amp; Transaction code       : N/A
*&amp; Program Name           : ZGLIF_SUBMIT_ERROR_MONITOR
*&amp; Created on             : 2017-05-10
*&amp; Functional Consultant  : Tomas Talpa (HQ_TTA)
*&amp; Developer              : Katerina Streitova (HQ_KST)
*&amp;---------------------------------------------------------------------*
*&amp; Purpose: Run program GLIF: Error Monitor
*&amp;---------------------------------------------------------------------*
*&amp; Change Record (new entries to the bottom)
*&amp; Date        Developer Transport    Descriptions
*&amp; ==========  ========  ===========  =================================*
*&amp; 2017-04-12  HQ_KST    SDXK900028   Initial Development
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; FUNCTION MODULE ZGLIF_SUBMIT_ERROR_MONITOR
*&amp;---------------------------------------------------------------------*

  DATA: gt_rsparams TYPE TABLE OF rsparams.
  FIELD-SYMBOLS: &lt;gs_rsparams&gt; LIKE LINE OF gt_rsparams.

  &quot; Transfer batch select-option
  APPEND INITIAL LINE TO gt_rsparams ASSIGNING &lt;gs_rsparams&gt;.
  &lt;gs_rsparams&gt;-selname = &apos;SO_BATCH&apos;.
  &lt;gs_rsparams&gt;-kind = &apos;S&apos;.
  &lt;gs_rsparams&gt;-sign = &apos;I&apos;.
  &lt;gs_rsparams&gt;-option = &apos;EQ&apos;.
  &lt;gs_rsparams&gt;-low = piv_batch.

  &quot; Transfer category select-option
  APPEND INITIAL LINE TO gt_rsparams ASSIGNING &lt;gs_rsparams&gt;.
  &lt;gs_rsparams&gt;-selname = &apos;SO_CATE&apos;.
  &lt;gs_rsparams&gt;-kind = &apos;S&apos;.
  &lt;gs_rsparams&gt;-sign = &apos;I&apos;.
  &lt;gs_rsparams&gt;-option = &apos;EQ&apos;.
  &lt;gs_rsparams&gt;-low = piv_category.

  &quot; Call the report with correct input parameters
  SUBMIT zglif_error_monitor
  WITH SELECTION-TABLE gt_rsparams.
*and return.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR AREA="ZGLIF_ERRORCUST" SPRAS="E" AREAT="Extended Table Maintenance (Generated)">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_ERRORCUST" SQLX="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZGLIF_ERRORCUST" DNUM="0001" FNUM="0001" BZMX="61 " BZBR="140 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="140 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Overview Screen ZGLIF_ERRORCUST">
     <dynprofield FNAM="TCTRL_ZGLIF_ERRORCUST" DIDX="003B" FLG1="F8" FLG2="FC" FLG3="00" FILL="T" FMB1="00" FMB2="00" LENG="8C" LINE="01" COLN="02" LTYP="E" LANF="65" LBLK="01" LREP="01" AUTH="101" AGLT="00" ADEZ="00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="003C" FLG1="80" FLG2="02" FLG3="88" FMB1="30" FMB2="40" LENG="3C" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
     <dynprofield FNAM="*ZGLIF_ERRORCUST-MESSAGE_STATUS" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="M. Status" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_ERRORCUST-MSGID" DIDX="0014" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Return Message Class ID" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_ERRORCUST-MSGNO" DIDX="0008" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Msg. No." RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_ERRORCUST-CATEGORY" DIDX="0002" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="CategoryID" RES1="X                                      00"/>
     <dynprofield FNAM="VIM_MARKED" DIDX="0001" FLG1="80" FLG2="00" FLG3="88" FILL="C" FMB1="00" FMB2="20" LENG="01" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="_"/>
     <dynprofield FNAM="ZGLIF_ERRORCUST-MESSAGE_STATUS" DIDX="0014" FLG1="B1" FLG2="02" FLG3="81" FMB1="30" FMB2="28" LENG="02" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="XDL                                    00"/>
     <dynprofield FNAM="ZGLIF_ERRORCUST-MSGID" DIDX="0014" FLG1="B0" FLG2="00" FLG3="84" FMB1="30" FMB2="28" LENG="14" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="28" ADEZ="00" STXT="____________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_ERRORCUST-MSGNO" DIDX="0008" FLG1="B0" FLG2="00" FLG3="84" FMB1="30" FMB2="28" LENG="03" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="06" ADEZ="00" STXT="___" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_ERRORCUST-CATEGORY" DIDX="0002" FLG1="B0" FLG2="02" FLG3="84" FMB1="00" FMB2="08" LENG="02" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" PAID="ZGLIF_CATEGORY" TYPE="CHAR" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="X                                      00"/>
     <dynprofield FNAM="VIM_POSI_PUSH" DIDX="0014" FLG1="80" FLG2="00" FLG3="88" FILL="P" FMB1="30" FMB2="00" LENG="14" LINE="3D" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                                                                                                                                                        POSI"/>
     <dynprofield FNAM="VIM_POSITION_INFO" DIDX="001E" FLG1="80" FLG2="02" FLG3="88" FMB1="33" FMB2="00" LENG="1E" LINE="3D" COLN="29" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>* VCL-Modifications
PROCESS BEFORE OUTPUT.
 MODULE LISTE_INITIALISIEREN.
 LOOP AT EXTRACT WITH CONTROL
  TCTRL_ZGLIF_ERRORCUST CURSOR NEXTLINE.
   MODULE LISTE_SHOW_LISTE.
 ENDLOOP.
*
PROCESS AFTER INPUT.
 MODULE LISTE_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE LISTE_BEFORE_LOOP.
 LOOP AT EXTRACT.
   MODULE LISTE_INIT_WORKAREA.
   CHAIN.
    FIELD ZGLIF_ERRORCUST-MESSAGE_STATUS .
    FIELD ZGLIF_ERRORCUST-MSGID .
    FIELD ZGLIF_ERRORCUST-MSGNO .
    FIELD ZGLIF_ERRORCUST-CATEGORY .
    MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
   ENDCHAIN.
   FIELD VIM_MARKED MODULE LISTE_MARK_CHECKBOX.
   CHAIN.
    FIELD ZGLIF_ERRORCUST-MESSAGE_STATUS .
    FIELD ZGLIF_ERRORCUST-MSGID .
    FIELD ZGLIF_ERRORCUST-MSGNO .
    FIELD ZGLIF_ERRORCUST-CATEGORY.
    MODULE LISTE_UPDATE_LISTE.
   ENDCHAIN.
 ENDLOOP.
 MODULE LISTE_AFTER_LOOP.</dynproflowsource>
    </dynpro>
   </dynpros>
   <source>* regenerated at 2017-04-13 15:50:35
*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_ERRORCUSTTOP.               &quot; Global Declarations
  INCLUDE LZGLIF_ERRORCUSTUXX.               &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_ERRORCUSTF...               &quot; Subroutines
* INCLUDE LZGLIF_ERRORCUSTO...               &quot; PBO-Modules
* INCLUDE LZGLIF_ERRORCUSTI...               &quot; PAI-Modules
* INCLUDE LZGLIF_ERRORCUSTE...               &quot; Events
* INCLUDE LZGLIF_ERRORCUSTP...               &quot; Local class implement.
* INCLUDE LZGLIF_ERRORCUSTT99.               &quot; ABAP Unit tests
  INCLUDE LZGLIF_ERRORCUSTF00                     . &quot; subprograms
  INCLUDE LZGLIF_ERRORCUSTI00                     . &quot; PAI modules
  INCLUDE LSVIMFXX                                . &quot; subprograms
  INCLUDE LSVIMOXX                                . &quot; PBO modules
  INCLUDE LSVIMIXX                                . &quot; PAI modules</source>
  </mainprogram>
  <includeprograms/>
  <functionmodules>
   <functionmodule NAME="TABLEFRAME_ZGLIF_ERRORCUST" STEXT="Extended Table Maintenance: Upper Level">
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 002"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 003"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 004"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 005"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tabelle mit dynam. zu deaktivierenden CUA-Funkt." INDEX=" 006"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 007"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 008"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 009"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEFRAME_ZGLIF_ERRORCUST
*   generation date: 2017-05-12 at 17:37:18
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEFRAME TABLES X_HEADER X_NAMTAB DBA_SELLIST DPL_SELLIST
                            EXCL_CUA_FUNCT
                     USING  CORR_NUMBER VIEW_ACTION VIEW_NAME.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="TABLEPROC_ZGLIF_ERRORCUST" GLOBAL="X" STEXT="Lower-level extended table maintenance">
    <importing PARAMETER="FCODE" DEFAULT="&apos;RDED&apos;"/>
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <exporting PARAMETER="LAST_ACT_ENTRY"/>
    <exporting PARAMETER="UCOMM"/>
    <exporting PARAMETER="UPDATE_REQUIRED"/>
    <tables PARAMETER="CORR_KEYTAB" DBSTRUCT="E071K"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="EXTRACT"/>
    <tables PARAMETER="TOTAL"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <exceptions EXCEPTION="SAVING_CORRECTION_FAILED"/>
    <documentation PARAMETER="FCODE" KIND="P" STEXT="gewünschte Funktion des Bausteins" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 002"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 003"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 004"/>
    <documentation PARAMETER="LAST_ACT_ENTRY" KIND="P" STEXT="Index der Cursorposition in der Anzeigetabelle" INDEX=" 005"/>
    <documentation PARAMETER="UCOMM" KIND="P" STEXT="letztes User-command innerhalb der Viewpflege" INDEX=" 006"/>
    <documentation PARAMETER="UPDATE_REQUIRED" KIND="P" STEXT="Flag: Einträge verändert, Sichern erforderlich" INDEX=" 007"/>
    <documentation PARAMETER="CORR_KEYTAB" KIND="P" STEXT="Tabelle mit den Keys der zu transport. Einträge" INDEX=" 008"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 009"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 010"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tab. der nicht zu aktivierenden CUA-Funktionen" INDEX=" 011"/>
    <documentation PARAMETER="EXTRACT" KIND="P" STEXT="Tab. der gerade sichtbaren Daten (Anzeigetabelle" INDEX=" 012"/>
    <documentation PARAMETER="TOTAL" KIND="P" STEXT="Tabelle, mit allen von der DB gelesenen Daten" INDEX=" 013"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 014"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 015"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 016"/>
    <documentation PARAMETER="SAVING_CORRECTION_FAILED" KIND="X" STEXT="Fehler beim Sichern der Korrektureinträge" INDEX=" 017"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEPROC_ZGLIF_ERRORCUST
*   generation date: 2017-05-12 at 17:37:18
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEPROC.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR AREA="ZGLIF_DISPCUST" SPRAS="E" AREAT="Extended Table Maintenance (Generated)">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_DISPCUST" SQLX="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZGLIF_DISPCUST" DNUM="0001" FNUM="0001" BZMX="61 " BZBR="255 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Overview Screen ZGLIF_DISPCUST">
     <dynprofield FNAM="TCTRL_ZGLIF_DISPCUST" DIDX="003B" FLG1="F8" FLG2="FC" FLG3="00" FILL="T" FMB1="00" FMB2="00" LENG="FF" LINE="01" COLN="02" LTYP="E" LANF="65" LBLK="01" LREP="01" AUTH="101" AGLT="00" ADEZ="00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="003C" FLG1="80" FLG2="02" FLG3="88" FMB1="30" FMB2="40" LENG="3C" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
     <dynprofield FNAM="*ZGLIF_DISPCUST-INTERFACE_NAME" DIDX="0010" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A8" LENG="28" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Interface Name" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_DISPCUST-ACTIVE" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Active" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_DISPCUST-FEEDER_CLASS" DIDX="001E" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Feeder Class name" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_DISPCUST-CONVERTOR_CLASS" DIDX="001E" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Convertor Class name" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_DISPCUST-PROCESSOR_CLASS" DIDX="001E" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Processor Class name" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_DISPCUST-ERROR_HANDLER_CLASS" DIDX="001E" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Error Handler Class name" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_DISPCUST-LOG_ACTIVE" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="07" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Log Active" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_DISPCUST-LOG_CREATE_OWN" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="08" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Own Log" RES1="X                                      00"/>
     <dynprofield FNAM="VIM_MARKED" DIDX="0001" FLG1="80" FLG2="00" FLG3="88" FILL="C" FMB1="00" FMB2="20" LENG="01" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="_"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-INTERFACE_NAME" DIDX="0010" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="28" LENG="10" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="20" ADEZ="00" STXT="________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-ACTIVE" DIDX="000A" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="103" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-FEEDER_CLASS" DIDX="001E" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="3C" ADEZ="00" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-CONVERTOR_CLASS" DIDX="001E" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="3C" ADEZ="00" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-PROCESSOR_CLASS" DIDX="001E" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="3C" ADEZ="00" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-ERROR_HANDLER_CLASS" DIDX="001E" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="3C" ADEZ="00" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-LOG_ACTIVE" DIDX="000A" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="01" COLN="07" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="104" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-LOG_CREATE_OWN" DIDX="000A" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="01" COLN="08" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="105" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="VIM_POSI_PUSH" DIDX="0014" FLG1="80" FLG2="00" FLG3="88" FILL="P" FMB1="30" FMB2="00" LENG="14" LINE="3D" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="106" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                                                                                                                                                        POSI"/>
     <dynprofield FNAM="VIM_POSITION_INFO" DIDX="001E" FLG1="80" FLG2="02" FLG3="88" FMB1="33" FMB2="00" LENG="1E" LINE="3D" COLN="29" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE LISTE_INITIALISIEREN.
 LOOP AT EXTRACT WITH CONTROL
  TCTRL_ZGLIF_DISPCUST CURSOR NEXTLINE.
   MODULE LISTE_SHOW_LISTE.
 ENDLOOP.
*
PROCESS AFTER INPUT.
 MODULE LISTE_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE LISTE_BEFORE_LOOP.
 LOOP AT EXTRACT.
   MODULE LISTE_INIT_WORKAREA.
   CHAIN.
    FIELD ZGLIF_DISPCUST-INTERFACE_NAME .
    FIELD ZGLIF_DISPCUST-ACTIVE .
    FIELD ZGLIF_DISPCUST-FEEDER_CLASS .
    FIELD ZGLIF_DISPCUST-CONVERTOR_CLASS .
    FIELD ZGLIF_DISPCUST-PROCESSOR_CLASS .
    FIELD ZGLIF_DISPCUST-ERROR_HANDLER_CLASS .
    FIELD ZGLIF_DISPCUST-LOG_ACTIVE .
    FIELD ZGLIF_DISPCUST-LOG_CREATE_OWN .
    MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
   ENDCHAIN.
   FIELD VIM_MARKED MODULE LISTE_MARK_CHECKBOX.
   CHAIN.
    FIELD ZGLIF_DISPCUST-INTERFACE_NAME .
    MODULE LISTE_UPDATE_LISTE.
   ENDCHAIN.
 ENDLOOP.
 MODULE LISTE_AFTER_LOOP.</dynproflowsource>
    </dynpro>
    <dynpro PROG="SAPLZGLIF_DISPCUST" DNUM="0002" FNUM="0002" BZMX="12 " BZBR="53 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Detail Screen ZGLIF_DISPCUST">
     <dynprofield FNAM="ZGLIF_DISPCUST-INTERFACE_NAME" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="08" LENG="14" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Interface Name" RES1="X                                      00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-INTERFACE_NAME" DIDX="0010" FLG1="A0" FLG2="00" FLG3="80" FMB1="30" FMB2="08" LENG="10" LINE="01" COLN="17" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="20" ADEZ="00" STXT="________________" RES1="X                                      00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="000A" FLG1="80" FLG2="02" FLG3="88" FILL="R" FMB1="30" FMB2="00" LENG="35" LINE="03" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="101" AGLT="00" ADEZ="00" STXT="_____________________________________________________"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-ACTIVE" DIDX="0001" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="04" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="102" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-ACTIVE" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FILL="C" FMB1="30" FMB2="08" LENG="14" LINE="04" COLN="05" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="102" ITYP="2" AGLT="00" ADEZ="00" STXT="Active" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-FEEDER_CLASS" DIDX="000C" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0C" LINE="05" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Feeder Class" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-FEEDER_CLASS" DIDX="001E" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="05" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="3C" ADEZ="00" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-CONVERTOR_CLASS" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="06" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Convertor Class" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-CONVERTOR_CLASS" DIDX="001E" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="06" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="3C" ADEZ="00" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-PROCESSOR_CLASS" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="07" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Processor Class" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-PROCESSOR_CLASS" DIDX="001E" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="07" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="3C" ADEZ="00" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-ERROR_HANDLER_CLASS" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="14" LINE="08" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Error Handler Class" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-ERROR_HANDLER_CLASS" DIDX="001E" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="08" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="3C" ADEZ="00" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-LOG_ACTIVE" DIDX="0001" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="09" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-LOG_ACTIVE" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FILL="C" FMB1="30" FMB2="08" LENG="14" LINE="09" COLN="05" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" ITYP="2" AGLT="00" ADEZ="00" STXT="Log Active" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-LOG_CREATE_OWN" DIDX="0001" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="0A" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="104" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-LOG_CREATE_OWN" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FILL="C" FMB1="30" FMB2="08" LENG="14" LINE="0A" COLN="05" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="104" ITYP="2" AGLT="00" ADEZ="00" STXT="Own Log" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-LOG_DAYS_KEEP" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="14" LINE="0B" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Log Expiration Days" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_DISPCUST-LOG_DAYS_KEEP" DIDX="0003" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="03" LINE="0B" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="INT1" ITYP="X" AGLT="03" ADEZ="00" STXT="___" RES1="                                       00"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE detail_init.
*
PROCESS AFTER INPUT.
 MODULE DETAIL_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE DETAIL_SET_PFSTATUS.
 CHAIN.
    FIELD ZGLIF_DISPCUST-INTERFACE_NAME .
    FIELD ZGLIF_DISPCUST-ACTIVE .
    FIELD ZGLIF_DISPCUST-FEEDER_CLASS .
    FIELD ZGLIF_DISPCUST-CONVERTOR_CLASS .
    FIELD ZGLIF_DISPCUST-PROCESSOR_CLASS .
    FIELD ZGLIF_DISPCUST-ERROR_HANDLER_CLASS .
    FIELD ZGLIF_DISPCUST-LOG_ACTIVE .
    FIELD ZGLIF_DISPCUST-LOG_CREATE_OWN .
    FIELD ZGLIF_DISPCUST-LOG_DAYS_KEEP .
  MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
 endchain.
 chain.
    FIELD ZGLIF_DISPCUST-INTERFACE_NAME .
  module detail_pai.
 endchain.</dynproflowsource>
    </dynpro>
   </dynpros>
   <source>* regenerated at 2017-04-02 16:23:41
*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_DISPCUSTTOP.                &quot; Global Declarations
  INCLUDE LZGLIF_DISPCUSTUXX.                &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_DISPCUSTF...                &quot; Subroutines
* INCLUDE LZGLIF_DISPCUSTO...                &quot; PBO-Modules
* INCLUDE LZGLIF_DISPCUSTI...                &quot; PAI-Modules
* INCLUDE LZGLIF_DISPCUSTE...                &quot; Events
* INCLUDE LZGLIF_DISPCUSTP...                &quot; Local class implement.
* INCLUDE LZGLIF_DISPCUSTT99.                &quot; ABAP Unit tests
  INCLUDE LZGLIF_DISPCUSTF00                      . &quot; subprograms
  INCLUDE LZGLIF_DISPCUSTI00                      . &quot; PAI modules
  INCLUDE LSVIMFXX                                . &quot; subprograms
  INCLUDE LSVIMOXX                                . &quot; PBO modules
  INCLUDE LSVIMIXX                                . &quot; PAI modules</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZGLIF_DISPCUSTF00" SQLX="X" EDTX="X" SUBC="I" LEVL="753" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 12.02.2020 at 12:36:12
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .</include_source>
   </include>
   <include NAME="LZGLIF_DISPCUSTI00" SQLX="X" EDTX="X" SUBC="I" LEVL="753" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 12.02.2020 at 12:36:12
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_DISPCUSTI00" SQLX="X" EDTX="X" SUBC="I" LEVL="753" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 12.02.2020 at 12:36:12
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_DISPCUSTTOP" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
    <include_source>* regenerated at 2017-04-02 16:23:41
FUNCTION-POOL ZGLIF_DISPCUST             MESSAGE-ID SV.

* INCLUDE LZGLIF_DISPCUSTD...                &quot; Local class definition
  INCLUDE LSVIMDAT                                . &quot;general data decl.
  INCLUDE LZGLIF_DISPCUSTT00                      . &quot;view rel. data dcl.</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="TABLEFRAME_ZGLIF_DISPCUST" STEXT="Extended Table Maintenance: Upper Level">
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 002"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 003"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 004"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 005"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tabelle mit dynam. zu deaktivierenden CUA-Funkt." INDEX=" 006"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 007"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 008"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 009"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEFRAME_ZGLIF_DISPCUST
*   generation date: 12.02.2020 at 12:36:11
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEFRAME TABLES X_HEADER X_NAMTAB DBA_SELLIST DPL_SELLIST
                            EXCL_CUA_FUNCT
                     USING  CORR_NUMBER VIEW_ACTION VIEW_NAME.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="TABLEPROC_ZGLIF_DISPCUST" GLOBAL="X" STEXT="Lower-level extended table maintenance">
    <importing PARAMETER="FCODE" DEFAULT="&apos;RDED&apos;"/>
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <exporting PARAMETER="LAST_ACT_ENTRY"/>
    <exporting PARAMETER="UCOMM"/>
    <exporting PARAMETER="UPDATE_REQUIRED"/>
    <tables PARAMETER="CORR_KEYTAB" DBSTRUCT="E071K"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="EXTRACT"/>
    <tables PARAMETER="TOTAL"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <exceptions EXCEPTION="SAVING_CORRECTION_FAILED"/>
    <documentation PARAMETER="FCODE" KIND="P" STEXT="gewünschte Funktion des Bausteins" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 002"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 003"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 004"/>
    <documentation PARAMETER="LAST_ACT_ENTRY" KIND="P" STEXT="Index der Cursorposition in der Anzeigetabelle" INDEX=" 005"/>
    <documentation PARAMETER="UCOMM" KIND="P" STEXT="letztes User-command innerhalb der Viewpflege" INDEX=" 006"/>
    <documentation PARAMETER="UPDATE_REQUIRED" KIND="P" STEXT="Flag: Einträge verändert, Sichern erforderlich" INDEX=" 007"/>
    <documentation PARAMETER="CORR_KEYTAB" KIND="P" STEXT="Tabelle mit den Keys der zu transport. Einträge" INDEX=" 008"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 009"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 010"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tab. der nicht zu aktivierenden CUA-Funktionen" INDEX=" 011"/>
    <documentation PARAMETER="EXTRACT" KIND="P" STEXT="Tab. der gerade sichtbaren Daten (Anzeigetabelle" INDEX=" 012"/>
    <documentation PARAMETER="TOTAL" KIND="P" STEXT="Tabelle, mit allen von der DB gelesenen Daten" INDEX=" 013"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 014"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 015"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 016"/>
    <documentation PARAMETER="SAVING_CORRECTION_FAILED" KIND="X" STEXT="Fehler beim Sichern der Korrektureinträge" INDEX=" 017"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEPROC_ZGLIF_DISPCUST
*   generation date: 12.02.2020 at 12:36:11
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEPROC.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR AREA="ZGLIF_CONVCUST" SPRAS="E" AREAT="Extended Table Maintenance (Generated)">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_CONVCUST" SQLX="X" VARCL="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZGLIF_CONVCUST" DNUM="0001" FNUM="0001" BZMX="61 " BZBR="255 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Overview Screen ZGLIF_CONVCUST">
     <dynprofield FNAM="TCTRL_ZGLIF_CONVCUST" DIDX="003B" FLG1="F8" FLG2="FC" FLG3="00" FILL="T" FMB1="00" FMB2="00" LENG="FF" LINE="01" COLN="02" LTYP="E" LANF="65" LBLK="01" LREP="01" AUTH="101" AGLT="00" ADEZ="00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="003C" FLG1="80" FLG2="02" FLG3="88" FMB1="30" FMB2="40" LENG="3C" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
     <dynprofield FNAM="*ZGLIF_CONVCUST-INTERFACE_NAME" DIDX="0010" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A8" LENG="28" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Interface Name" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_CONVCUST-ACTIVE" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Active" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_CONVCUST-SAP_FOLDER_SOURCE" DIDX="003C" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="SAP Folder" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_CONVCUST-SAP_FOLDER_ERRORS" DIDX="003C" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="SAP Errors Folder" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_CONVCUST-SAP_FOLDER_PROCESSED" DIDX="003C" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="SAP Processed Folder" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_CONVCUST-SAP_PORT" DIDX="000A" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="SAP Port" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_CONVCUST-EDI_XACTIVE" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="07" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="EDICntrMod" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_CONVCUST-EDI_RCVPOR" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="08" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Port" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_CONVCUST-EDI_RCVPRT" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="09" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Partner Type" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_CONVCUST-EDI_RCVPRN" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0A" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Partn.no." RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_CONVCUST-EDI_SNDPOR" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0B" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Port" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_CONVCUST-EDI_SNDPRT" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0C" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Sender type" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_CONVCUST-EDI_SNDPRN" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0D" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Partn.no." RES1="                                       00"/>
     <dynprofield FNAM="VIM_MARKED" DIDX="0001" FLG1="80" FLG2="00" FLG3="88" FILL="C" FMB1="00" FMB2="20" LENG="01" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="_"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-INTERFACE_NAME" DIDX="0010" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="28" LENG="10" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="20" ADEZ="00" STXT="________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-ACTIVE" DIDX="000A" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="103" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-SAP_FOLDER_SOURCE" DIDX="003C" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-SAP_FOLDER_ERRORS" DIDX="003C" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-SAP_FOLDER_PROCESSED" DIDX="003C" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-SAP_PORT" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0A" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_XACTIVE" DIDX="000A" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="01" COLN="07" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="104" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_RCVPOR" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0A" LINE="01" COLN="08" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_RCVPRT" DIDX="000F" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="02" LINE="01" COLN="09" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_RCVPRN" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0A" LINE="01" COLN="0A" LTYP="T" LANF="65" LBLK="01" LREP="01" UCNV="ALPHA" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_SNDPOR" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0A" LINE="01" COLN="0B" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_SNDPRT" DIDX="000F" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="02" LINE="01" COLN="0C" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_SNDPRN" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0A" LINE="01" COLN="0D" LTYP="T" LANF="65" LBLK="01" LREP="01" UCNV="ALPHA" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="VIM_POSI_PUSH" DIDX="0014" FLG1="80" FLG2="00" FLG3="88" FILL="P" FMB1="30" FMB2="00" LENG="14" LINE="3D" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="105" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                                                                                                                                                        POSI"/>
     <dynprofield FNAM="VIM_POSITION_INFO" DIDX="001E" FLG1="80" FLG2="02" FLG3="88" FMB1="33" FMB2="00" LENG="1E" LINE="3D" COLN="29" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE LISTE_INITIALISIEREN.
 LOOP AT EXTRACT WITH CONTROL
  TCTRL_ZGLIF_CONVCUST CURSOR NEXTLINE.
   MODULE LISTE_SHOW_LISTE.
 ENDLOOP.
*
PROCESS AFTER INPUT.
 MODULE LISTE_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE LISTE_BEFORE_LOOP.
 LOOP AT EXTRACT.
   MODULE LISTE_INIT_WORKAREA.
   CHAIN.
    FIELD ZGLIF_CONVCUST-INTERFACE_NAME .
    FIELD ZGLIF_CONVCUST-ACTIVE .
    FIELD ZGLIF_CONVCUST-SAP_FOLDER_SOURCE .
    FIELD ZGLIF_CONVCUST-SAP_FOLDER_ERRORS .
    FIELD ZGLIF_CONVCUST-SAP_FOLDER_PROCESSED .
    FIELD ZGLIF_CONVCUST-SAP_PORT .
    FIELD ZGLIF_CONVCUST-EDI_XACTIVE .
    FIELD ZGLIF_CONVCUST-EDI_RCVPOR .
    FIELD ZGLIF_CONVCUST-EDI_RCVPRT .
    FIELD ZGLIF_CONVCUST-EDI_RCVPRN .
    FIELD ZGLIF_CONVCUST-EDI_SNDPOR .
    FIELD ZGLIF_CONVCUST-EDI_SNDPRT .
    FIELD ZGLIF_CONVCUST-EDI_SNDPRN .
    MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
   ENDCHAIN.
   FIELD VIM_MARKED MODULE LISTE_MARK_CHECKBOX.
   CHAIN.
    FIELD ZGLIF_CONVCUST-INTERFACE_NAME .
    MODULE LISTE_UPDATE_LISTE.
   ENDCHAIN.
 ENDLOOP.
 MODULE LISTE_AFTER_LOOP.</dynproflowsource>
    </dynpro>
    <dynpro PROG="SAPLZGLIF_CONVCUST" DNUM="0002" FNUM="0002" BZMX="16 " BZBR="83 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Detail Screen ZGLIF_CONVCUST">
     <dynprofield FNAM="ZGLIF_CONVCUST-INTERFACE_NAME" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="08" LENG="14" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Interface Name" RES1="X                                      00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-INTERFACE_NAME" DIDX="0010" FLG1="A0" FLG2="00" FLG3="80" FMB1="30" FMB2="08" LENG="10" LINE="01" COLN="17" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="20" ADEZ="00" STXT="________________" RES1="X                                      00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="000E" FLG1="80" FLG2="02" FLG3="88" FILL="R" FMB1="30" FMB2="00" LENG="53" LINE="03" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="101" AGLT="00" ADEZ="00" STXT="___________________________________________________________________________________"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-ACTIVE" DIDX="0001" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="04" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="102" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-ACTIVE" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FILL="C" FMB1="30" FMB2="08" LENG="14" LINE="04" COLN="05" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="102" ITYP="2" AGLT="00" ADEZ="00" STXT="Active" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-SAP_FOLDER_SOURCE" DIDX="0012" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="12" LINE="05" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="SAP Folder" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-SAP_FOLDER_SOURCE" DIDX="003C" FLG1="A0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="05" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-SAP_FOLDER_ERRORS" DIDX="0012" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="12" LINE="06" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="SAP Errors Folder" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-SAP_FOLDER_ERRORS" DIDX="003C" FLG1="A0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="06" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-SAP_FOLDER_PROCESSED" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="14" LINE="07" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="SAP Processed Folder" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-SAP_FOLDER_PROCESSED" DIDX="003C" FLG1="A0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="3C" LINE="07" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="78" ADEZ="00" STXT="____________________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-SAP_PORT" DIDX="0008" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="08" LINE="08" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="SAP Port" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-SAP_PORT" DIDX="000A" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0A" LINE="08" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_XACTIVE" DIDX="0001" FLG1="B0" FLG2="00" FLG3="81" FILL="C" FMB1="00" FMB2="08" LENG="01" LINE="09" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" ITYP="C" AGLT="02" ADEZ="00" STXT="_" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_XACTIVE" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FILL="C" FMB1="30" FMB2="08" LENG="14" LINE="09" COLN="05" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" ITYP="2" AGLT="00" ADEZ="00" STXT="EDI control modify" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_RCVPOR" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="0A" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Receiver port" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_RCVPOR" DIDX="000A" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0A" LINE="0A" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_RCVPRT" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="0B" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Partner Type" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_RCVPRT" DIDX="0002" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="02" LINE="0B" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_RCVPRN" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="0C" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Receiver" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_RCVPRN" DIDX="000A" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0A" LINE="0C" COLN="18" LANF="00" LBLK="00" LREP="00" UCNV="ALPHA" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_SNDPOR" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="0D" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Sender port" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_SNDPOR" DIDX="000A" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0A" LINE="0D" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_SNDPRT" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="0E" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Sender type" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_SNDPRT" DIDX="0002" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="02" LINE="0E" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_SNDPRN" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="0F" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Sender" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_CONVCUST-EDI_SNDPRN" DIDX="000A" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0A" LINE="0F" COLN="18" LANF="00" LBLK="00" LREP="00" UCNV="ALPHA" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE detail_init.
*
PROCESS AFTER INPUT.
 MODULE DETAIL_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE DETAIL_SET_PFSTATUS.
 CHAIN.
    FIELD ZGLIF_CONVCUST-INTERFACE_NAME .
    FIELD ZGLIF_CONVCUST-ACTIVE .
    FIELD ZGLIF_CONVCUST-SAP_FOLDER_SOURCE .
    FIELD ZGLIF_CONVCUST-SAP_FOLDER_ERRORS .
    FIELD ZGLIF_CONVCUST-SAP_FOLDER_PROCESSED .
    FIELD ZGLIF_CONVCUST-SAP_PORT .
    FIELD ZGLIF_CONVCUST-EDI_XACTIVE .
    FIELD ZGLIF_CONVCUST-EDI_RCVPOR .
    FIELD ZGLIF_CONVCUST-EDI_RCVPRT .
    FIELD ZGLIF_CONVCUST-EDI_RCVPRN .
    FIELD ZGLIF_CONVCUST-EDI_SNDPOR .
    FIELD ZGLIF_CONVCUST-EDI_SNDPRT .
    FIELD ZGLIF_CONVCUST-EDI_SNDPRN .
  MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
 endchain.
 chain.
    FIELD ZGLIF_CONVCUST-INTERFACE_NAME .
  module detail_pai.
 endchain.</dynproflowsource>
    </dynpro>
   </dynpros>
   <source>* regenerated at 2017-08-22 11:47:49
*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_CONVCUSTTOP.                &quot; Global Declarations
  INCLUDE LZGLIF_CONVCUSTUXX.                &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_CONVCUSTF...                &quot; Subroutines
* INCLUDE LZGLIF_CONVCUSTO...                &quot; PBO-Modules
* INCLUDE LZGLIF_CONVCUSTI...                &quot; PAI-Modules
* INCLUDE LZGLIF_CONVCUSTE...                &quot; Events
* INCLUDE LZGLIF_CONVCUSTP...                &quot; Local class implement.
* INCLUDE LZGLIF_CONVCUSTT99.                &quot; ABAP Unit tests
  INCLUDE LZGLIF_CONVCUSTF00                      . &quot; subprograms
  INCLUDE LZGLIF_CONVCUSTI00                      . &quot; PAI modules
  INCLUDE LSVIMFXX                                . &quot; subprograms
  INCLUDE LSVIMOXX                                . &quot; PBO modules
  INCLUDE LSVIMIXX                                . &quot; PAI modules</source>
  </mainprogram>
  <includeprograms>
   <include NAME="LZGLIF_CONVCUSTF00" SQLX="X" EDTX="X" SUBC="I" LEVL="753" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related FORM routines
*   generation date: 19.09.2019 at 14:40:05
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

* base table related FORM-routines.............
INCLUDE LSVIMFTX .</include_source>
   </include>
   <include NAME="LZGLIF_CONVCUSTI00" SQLX="X" EDTX="X" SUBC="I" LEVL="753" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 19.09.2019 at 14:40:05
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_CONVCUSTI00" SQLX="X" EDTX="X" SUBC="I" LEVL="753" RLOAD="E">
    <include_source>*---------------------------------------------------------------------*
*    view related PAI modules
*   generation date: 19.09.2019 at 14:40:05
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

INCLUDE LSVIMITX . &quot;base table related PAI modules</include_source>
   </include>
   <include NAME="LZGLIF_CONVCUSTTOP" DBAPL="S" DBNA="D$" SUBC="I" APPL="S" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
    <include_source>* regenerated at 2017-08-22 11:47:48
FUNCTION-POOL ZGLIF_CONVCUST             MESSAGE-ID SV.

* INCLUDE LZGLIF_CONVCUSTD...                &quot; Local class definition
  INCLUDE LSVIMDAT                                . &quot;general data decl.
  INCLUDE LZGLIF_CONVCUSTT00                      . &quot;view rel. data dcl.</include_source>
   </include>
  </includeprograms>
  <functionmodules>
   <functionmodule NAME="TABLEFRAME_ZGLIF_CONVCUST" STEXT="Extended Table Maintenance: Upper Level">
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 002"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 003"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 004"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 005"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tabelle mit dynam. zu deaktivierenden CUA-Funkt." INDEX=" 006"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 007"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 008"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 009"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEFRAME_ZGLIF_CONVCUST
*   generation date: 2017-08-22 at 11:47:48
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEFRAME TABLES X_HEADER X_NAMTAB DBA_SELLIST DPL_SELLIST
                            EXCL_CUA_FUNCT
                     USING  CORR_NUMBER VIEW_ACTION VIEW_NAME.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="TABLEPROC_ZGLIF_CONVCUST" GLOBAL="X" STEXT="Lower-level extended table maintenance">
    <importing PARAMETER="FCODE" DEFAULT="&apos;RDED&apos;"/>
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <exporting PARAMETER="LAST_ACT_ENTRY"/>
    <exporting PARAMETER="UCOMM"/>
    <exporting PARAMETER="UPDATE_REQUIRED"/>
    <tables PARAMETER="CORR_KEYTAB" DBSTRUCT="E071K"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="EXTRACT"/>
    <tables PARAMETER="TOTAL"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <exceptions EXCEPTION="SAVING_CORRECTION_FAILED"/>
    <documentation PARAMETER="FCODE" KIND="P" STEXT="gewünschte Funktion des Bausteins" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 002"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 003"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 004"/>
    <documentation PARAMETER="LAST_ACT_ENTRY" KIND="P" STEXT="Index der Cursorposition in der Anzeigetabelle" INDEX=" 005"/>
    <documentation PARAMETER="UCOMM" KIND="P" STEXT="letztes User-command innerhalb der Viewpflege" INDEX=" 006"/>
    <documentation PARAMETER="UPDATE_REQUIRED" KIND="P" STEXT="Flag: Einträge verändert, Sichern erforderlich" INDEX=" 007"/>
    <documentation PARAMETER="CORR_KEYTAB" KIND="P" STEXT="Tabelle mit den Keys der zu transport. Einträge" INDEX=" 008"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 009"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 010"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tab. der nicht zu aktivierenden CUA-Funktionen" INDEX=" 011"/>
    <documentation PARAMETER="EXTRACT" KIND="P" STEXT="Tab. der gerade sichtbaren Daten (Anzeigetabelle" INDEX=" 012"/>
    <documentation PARAMETER="TOTAL" KIND="P" STEXT="Tabelle, mit allen von der DB gelesenen Daten" INDEX=" 013"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 014"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 015"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 016"/>
    <documentation PARAMETER="SAVING_CORRECTION_FAILED" KIND="X" STEXT="Fehler beim Sichern der Korrektureinträge" INDEX=" 017"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEPROC_ZGLIF_CONVCUST
*   generation date: 2017-08-22 at 11:47:48
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEPROC.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR AREA="ZGLIF_BOOKNG_WS" SPRAS="E" AREAT="Extended Table Maintenance (Generated)">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_BOOKNG_WS" SQLX="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="100" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZGLIF_BOOKNG_WS" DNUM="0001" FNUM="0001" BZMX="61 " BZBR="255 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Overview Screen ZGLIF_BOOKNG_WS">
     <dynprofield FNAM="TCTRL_ZGLIF_BOOKNG_WS" DIDX="003B" FLG1="F8" FLG2="FC" FLG3="00" FILL="T" FMB1="00" FMB2="00" LENG="FF" LINE="01" COLN="02" LTYP="E" LANF="65" LBLK="01" LREP="01" AUTH="101" AGLT="00" ADEZ="00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="003C" FLG1="80" FLG2="02" FLG3="88" FMB1="30" FMB2="40" LENG="3C" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-BATCH_ID" DIDX="000A" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Batch ID" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-MESSAGE_ID" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="MessageID" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-ITEM" DIDX="0006" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="4" AGLT="00" ADEZ="00" STXT="Item" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-MESSAGE_STATUS" DIDX="001E" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="M. Status" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-COMPANY_CODE" DIDX="0004" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="4" AGLT="00" ADEZ="00" STXT="CoCd" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-DOCUMENT_DATE" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="DocDate" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-POSTING_DATE" DIDX="0008" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="07" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="PostDate" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-LEDGER_GROUP" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="08" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Led. Gr. B" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-DEBIT_CREDIT" DIDX="001E" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="09" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Debit/Credit indicator" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-GL_ACCOUNT" DIDX="000A" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0A" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="G/L Account" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-VALUE_DATE" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0B" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Val. Date" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-PROFIT_CENTER" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="88" LENG="28" LINE="01" COLN="0C" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Profit Center" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-BUSINESS_AREA" DIDX="0004" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0D" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="4" AGLT="00" ADEZ="00" STXT="BusA" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-SEGMENT" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0E" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Segment BOOK" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-ITEM_TEXT" DIDX="0032" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="0F" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Text" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_BOOKNG_WS-CHANGED_BY" DIDX="000C" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="10" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="User Name" RES1="                                       00"/>
     <dynprofield FNAM="VIM_MARKED" DIDX="0001" FLG1="80" FLG2="00" FLG3="88" FILL="C" FMB1="00" FMB2="20" LENG="01" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="_"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-BATCH_ID" DIDX="000A" FLG1="B0" FLG2="02" FLG3="80" FMB1="30" FMB2="20" LENG="0A" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" PAID="ZGLIF_BATCH" UCNV="ALPHA" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-MESSAGE_ID" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="20" LENG="0A" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-ITEM" DIDX="0006" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="20" LENG="06" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="NUMC" GRP1="KEY" ITYP="N" AGLT="0C" ADEZ="00" STXT="______" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-MESSAGE_STATUS" DIDX="001E" FLG1="B0" FLG2="02" FLG3="81" FMB1="00" FMB2="08" LENG="02" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="XDL                                    00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-COMPANY_CODE" DIDX="0004" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="08" LENG="04" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" PAID="BUK" TYPE="CHAR" ITYP="C" AGLT="08" ADEZ="00" STXT="____" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-DOCUMENT_DATE" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="08" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="10" ADEZ="00" STXT="________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-POSTING_DATE" DIDX="0008" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="08" LINE="01" COLN="07" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="10" ADEZ="00" STXT="________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-LEDGER_GROUP" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="05" LINE="01" COLN="08" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="0A" ADEZ="00" STXT="_____" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-DEBIT_CREDIT" DIDX="001E" FLG1="B0" FLG2="00" FLG3="81" FMB1="00" FMB2="08" LENG="0A" LINE="01" COLN="09" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="XDL                                    00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-GL_ACCOUNT" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0A" LINE="01" COLN="0A" LTYP="T" LANF="65" LBLK="01" LREP="01" UCNV="ALPHA" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-VALUE_DATE" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="08" LINE="01" COLN="0B" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="10" ADEZ="00" STXT="________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-PROFIT_CENTER" DIDX="000F" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="08" LENG="0A" LINE="01" COLN="0C" LTYP="T" LANF="65" LBLK="01" LREP="01" PAID="PRC" UCNV="ALPHA" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-BUSINESS_AREA" DIDX="0004" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="04" LINE="01" COLN="0D" LTYP="T" LANF="65" LBLK="01" LREP="01" PAID="GSB" TYPE="CHAR" ITYP="C" AGLT="08" ADEZ="00" STXT="____" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-SEGMENT" DIDX="000F" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="0A" LINE="01" COLN="0E" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="28" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-ITEM_TEXT" DIDX="0032" FLG1="B0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="32" LINE="01" COLN="0F" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="64" ADEZ="00" STXT="__________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-CHANGED_BY" DIDX="000C" FLG1="B0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0C" LINE="01" COLN="10" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="18" ADEZ="00" STXT="____________" RES1="                                       00"/>
     <dynprofield FNAM="VIM_POSI_PUSH" DIDX="0014" FLG1="80" FLG2="00" FLG3="88" FILL="P" FMB1="30" FMB2="00" LENG="14" LINE="3D" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                                                                                                                                                        POSI"/>
     <dynprofield FNAM="VIM_POSITION_INFO" DIDX="001E" FLG1="80" FLG2="02" FLG3="88" FMB1="33" FMB2="00" LENG="1E" LINE="3D" COLN="29" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE LISTE_INITIALISIEREN.
 LOOP AT EXTRACT WITH CONTROL
  TCTRL_ZGLIF_BOOKNG_WS CURSOR NEXTLINE.
   MODULE LISTE_SHOW_LISTE.
 ENDLOOP.
*
PROCESS AFTER INPUT.
 MODULE LISTE_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE LISTE_BEFORE_LOOP.
 LOOP AT EXTRACT.
   MODULE LISTE_INIT_WORKAREA.
   CHAIN.
    FIELD ZGLIF_BOOKNG_WS-BATCH_ID .
    FIELD ZGLIF_BOOKNG_WS-MESSAGE_ID .
    FIELD ZGLIF_BOOKNG_WS-ITEM .
    FIELD ZGLIF_BOOKNG_WS-MESSAGE_STATUS .
    FIELD ZGLIF_BOOKNG_WS-COMPANY_CODE .
    FIELD ZGLIF_BOOKNG_WS-DOCUMENT_DATE .
    FIELD ZGLIF_BOOKNG_WS-POSTING_DATE .
    FIELD ZGLIF_BOOKNG_WS-LEDGER_GROUP .
    FIELD ZGLIF_BOOKNG_WS-DEBIT_CREDIT .
    FIELD ZGLIF_BOOKNG_WS-GL_ACCOUNT .
    FIELD ZGLIF_BOOKNG_WS-VALUE_DATE .
    FIELD ZGLIF_BOOKNG_WS-PROFIT_CENTER .
    FIELD ZGLIF_BOOKNG_WS-BUSINESS_AREA .
    FIELD ZGLIF_BOOKNG_WS-SEGMENT .
    FIELD ZGLIF_BOOKNG_WS-ITEM_TEXT .
    FIELD ZGLIF_BOOKNG_WS-CHANGED_BY .
    MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
   ENDCHAIN.
   FIELD VIM_MARKED MODULE LISTE_MARK_CHECKBOX.
   CHAIN.
    FIELD ZGLIF_BOOKNG_WS-BATCH_ID .
    FIELD ZGLIF_BOOKNG_WS-MESSAGE_ID .
    FIELD ZGLIF_BOOKNG_WS-ITEM .
    MODULE LISTE_UPDATE_LISTE.
   ENDCHAIN.
 ENDLOOP.
 MODULE LISTE_AFTER_LOOP.</dynproflowsource>
    </dynpro>
    <dynpro PROG="SAPLZGLIF_BOOKNG_WS" DNUM="0002" FNUM="0002" BZMX="22 " BZBR="83 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="255 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Detail Screen ZGLIF_BOOKNG_WS">
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-BATCH_ID" DIDX="0008" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="08" LINE="01" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Batch ID" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-BATCH_ID" DIDX="000A" FLG1="A0" FLG2="02" FLG3="80" FMB1="30" FMB2="00" LENG="0A" LINE="01" COLN="17" LANF="00" LBLK="00" LREP="00" PAID="ZGLIF_BATCH" UCNV="ALPHA" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-MESSAGE_ID" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="14" LINE="02" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Message ID" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-MESSAGE_ID" DIDX="000A" FLG1="A0" FLG2="00" FLG3="80" FMB1="30" FMB2="00" LENG="0A" LINE="02" COLN="17" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-ITEM" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="14" LINE="03" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Item" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-ITEM" DIDX="0006" FLG1="A0" FLG2="00" FLG3="80" FMB1="30" FMB2="00" LENG="06" LINE="03" COLN="17" LANF="00" LBLK="00" LREP="00" TYPE="NUMC" GRP1="KEY" ITYP="N" AGLT="0C" ADEZ="00" STXT="______" RES1="                                       00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="0012" FLG1="80" FLG2="02" FLG3="88" FILL="R" FMB1="30" FMB2="00" LENG="53" LINE="05" COLN="02" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="101" AGLT="00" ADEZ="00" STXT="___________________________________________________________________________________"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-MESSAGE_STATUS" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="08" LENG="14" LINE="06" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Message Status" RES1="X                                      00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-MESSAGE_STATUS" DIDX="003C" FLG1="A0" FLG2="02" FLG3="81" FMB1="00" FMB2="08" LENG="02" LINE="06" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="XDL                                    00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-COMPANY_CODE" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="08" LENG="0F" LINE="07" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Company Code" RES1="X                                      00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-COMPANY_CODE" DIDX="0004" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="08" LENG="04" LINE="07" COLN="18" LANF="00" LBLK="00" LREP="00" PAID="BUK" TYPE="CHAR" ITYP="C" AGLT="08" ADEZ="00" STXT="____" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-DOCUMENT_DATE" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="14" LINE="08" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Document Date" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-DOCUMENT_DATE" DIDX="0008" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="08" LINE="08" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="10" ADEZ="00" STXT="________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-POSTING_DATE" DIDX="000C" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0C" LINE="09" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Posting Date" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-POSTING_DATE" DIDX="0008" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="08" LINE="09" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="10" ADEZ="00" STXT="________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-LEDGER_GROUP" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="14" LINE="0A" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Ledger Group BOOK" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-LEDGER_GROUP" DIDX="0005" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="05" LINE="0A" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="0A" ADEZ="00" STXT="_____" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-DEBIT_CREDIT" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="08" LENG="14" LINE="0B" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Debit/Credit indicat" RES1="X                                      00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-DEBIT_CREDIT" DIDX="003C" FLG1="A0" FLG2="00" FLG3="81" FMB1="00" FMB2="08" LENG="0A" LINE="0B" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="XDL                                    00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-GL_ACCOUNT" DIDX="000C" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0C" LINE="0C" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="G/L Acct" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-GL_ACCOUNT" DIDX="000A" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0A" LINE="0C" COLN="18" LANF="00" LBLK="00" LREP="00" UCNV="ALPHA" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-AMOUNT" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="0D" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Amount" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-AMOUNT" DIDX="001E" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="1E" LINE="0D" COLN="18" LANF="00" LBLK="00" LREP="00" UCNV="AU132" TYPE="CURR" WNAM="BKPF-WAERS" ITYP="P" AGLT="17" ADEZ="02" STXT="______________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-VALUE_DATE" DIDX="0014" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="14" LINE="0E" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Values Date" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-VALUE_DATE" DIDX="0008" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="08" LINE="0E" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="10" ADEZ="00" STXT="________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-PROFIT_CENTER" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="08" LENG="0F" LINE="0F" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Profit Center" RES1="X                                      00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-PROFIT_CENTER" DIDX="000A" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="08" LENG="0A" LINE="0F" COLN="18" LANF="00" LBLK="00" LREP="00" PAID="PRC" UCNV="ALPHA" TYPE="CHAR" ITYP="C" AGLT="14" ADEZ="00" STXT="__________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-BUSINESS_AREA" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="10" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Business Area" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-BUSINESS_AREA" DIDX="0004" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="04" LINE="10" COLN="18" LANF="00" LBLK="00" LREP="00" PAID="GSB" TYPE="CHAR" ITYP="C" AGLT="08" ADEZ="00" STXT="____" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-SEGMENT" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="11" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Segment BOOK" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-SEGMENT" DIDX="000A" FLG1="A1" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="14" LINE="11" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="28" ADEZ="00" STXT="____________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-ITEM_TEXT" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="12" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Text" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-ITEM_TEXT" DIDX="0032" FLG1="A0" FLG2="02" FLG3="80" FMB1="00" FMB2="00" LENG="32" LINE="12" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="64" ADEZ="00" STXT="__________________________________________________" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-CHANGED_ON" DIDX="0005" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="08" LENG="05" LINE="13" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Date" RES1="X                                      00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-CHANGED_ON" DIDX="000A" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="08" LENG="0A" LINE="13" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="DATS" ITYP="D" AGLT="10" ADEZ="00" STXT="__________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-CHANGED_AT" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="08" LENG="0F" LINE="14" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Time" RES1="X                                      00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-CHANGED_AT" DIDX="0008" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="08" LENG="08" LINE="14" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="TIMS" ITYP="T" AGLT="0C" ADEZ="00" STXT="________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-CHANGED_BY" DIDX="000F" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="00" LENG="0F" LINE="15" COLN="03" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="User Name" RES1="                                       00                                                                                                                                                                                                               X"/>
     <dynprofield FNAM="ZGLIF_BOOKNG_WS-CHANGED_BY" DIDX="000C" FLG1="A0" FLG2="00" FLG3="80" FMB1="00" FMB2="00" LENG="0C" LINE="15" COLN="18" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" ITYP="C" AGLT="18" ADEZ="00" STXT="____________" RES1="                                       00"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE detail_init.
*
PROCESS AFTER INPUT.
 MODULE DETAIL_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE DETAIL_SET_PFSTATUS.
 CHAIN.
    FIELD ZGLIF_BOOKNG_WS-BATCH_ID .
    FIELD ZGLIF_BOOKNG_WS-MESSAGE_ID .
    FIELD ZGLIF_BOOKNG_WS-ITEM .
    FIELD ZGLIF_BOOKNG_WS-MESSAGE_STATUS .
    FIELD ZGLIF_BOOKNG_WS-COMPANY_CODE .
    FIELD ZGLIF_BOOKNG_WS-DOCUMENT_DATE .
    FIELD ZGLIF_BOOKNG_WS-POSTING_DATE .
    FIELD ZGLIF_BOOKNG_WS-LEDGER_GROUP .
    FIELD ZGLIF_BOOKNG_WS-DEBIT_CREDIT .
    FIELD ZGLIF_BOOKNG_WS-GL_ACCOUNT .
    FIELD ZGLIF_BOOKNG_WS-AMOUNT .
    FIELD ZGLIF_BOOKNG_WS-VALUE_DATE .
    FIELD ZGLIF_BOOKNG_WS-PROFIT_CENTER .
    FIELD ZGLIF_BOOKNG_WS-BUSINESS_AREA .
    FIELD ZGLIF_BOOKNG_WS-SEGMENT .
    FIELD ZGLIF_BOOKNG_WS-ITEM_TEXT .
    FIELD ZGLIF_BOOKNG_WS-CHANGED_ON .
    FIELD ZGLIF_BOOKNG_WS-CHANGED_AT .
    FIELD ZGLIF_BOOKNG_WS-CHANGED_BY .
  MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
 endchain.
 chain.
    FIELD ZGLIF_BOOKNG_WS-BATCH_ID .
    FIELD ZGLIF_BOOKNG_WS-MESSAGE_ID .
    FIELD ZGLIF_BOOKNG_WS-ITEM .
  module detail_pai.
 endchain.</dynproflowsource>
    </dynpro>
   </dynpros>
   <source>* regenerated at 2019-04-18 16:59:37
*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_BOOKNG_WSTOP.               &quot; Global Declarations
  INCLUDE LZGLIF_BOOKNG_WSUXX.               &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_BOOKNG_WSF...               &quot; Subroutines
* INCLUDE LZGLIF_BOOKNG_WSO...               &quot; PBO-Modules
* INCLUDE LZGLIF_BOOKNG_WSI...               &quot; PAI-Modules
* INCLUDE LZGLIF_BOOKNG_WSE...               &quot; Events
* INCLUDE LZGLIF_BOOKNG_WSP...               &quot; Local class implement.
* INCLUDE LZGLIF_BOOKNG_WST99.               &quot; ABAP Unit tests
  INCLUDE LZGLIF_BOOKNG_WSF00                     . &quot; subprograms
  INCLUDE LZGLIF_BOOKNG_WSI00                     . &quot; PAI modules
  INCLUDE LSVIMFXX                                . &quot; subprograms
  INCLUDE LSVIMOXX                                . &quot; PBO modules
  INCLUDE LSVIMIXX                                . &quot; PAI modules</source>
  </mainprogram>
  <includeprograms/>
  <functionmodules>
   <functionmodule NAME="TABLEFRAME_ZGLIF_BOOKNG_WS" STEXT="Extended Table Maintenance: Upper Level">
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 002"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 003"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 004"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 005"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tabelle mit dynam. zu deaktivierenden CUA-Funkt." INDEX=" 006"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 007"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 008"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 009"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEFRAME_ZGLIF_BOOKNG_WS
*   generation date: 2019-04-18 at 18:37:11
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEFRAME TABLES X_HEADER X_NAMTAB DBA_SELLIST DPL_SELLIST
                            EXCL_CUA_FUNCT
                     USING  CORR_NUMBER VIEW_ACTION VIEW_NAME.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="TABLEPROC_ZGLIF_BOOKNG_WS" GLOBAL="X" STEXT="Lower-level extended table maintenance">
    <importing PARAMETER="FCODE" DEFAULT="&apos;RDED&apos;"/>
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <exporting PARAMETER="LAST_ACT_ENTRY"/>
    <exporting PARAMETER="UCOMM"/>
    <exporting PARAMETER="UPDATE_REQUIRED"/>
    <tables PARAMETER="CORR_KEYTAB" DBSTRUCT="E071K"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="EXTRACT"/>
    <tables PARAMETER="TOTAL"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <exceptions EXCEPTION="SAVING_CORRECTION_FAILED"/>
    <documentation PARAMETER="FCODE" KIND="P" STEXT="gewünschte Funktion des Bausteins" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 002"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 003"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 004"/>
    <documentation PARAMETER="LAST_ACT_ENTRY" KIND="P" STEXT="Index der Cursorposition in der Anzeigetabelle" INDEX=" 005"/>
    <documentation PARAMETER="UCOMM" KIND="P" STEXT="letztes User-command innerhalb der Viewpflege" INDEX=" 006"/>
    <documentation PARAMETER="UPDATE_REQUIRED" KIND="P" STEXT="Flag: Einträge verändert, Sichern erforderlich" INDEX=" 007"/>
    <documentation PARAMETER="CORR_KEYTAB" KIND="P" STEXT="Tabelle mit den Keys der zu transport. Einträge" INDEX=" 008"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 009"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 010"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tab. der nicht zu aktivierenden CUA-Funktionen" INDEX=" 011"/>
    <documentation PARAMETER="EXTRACT" KIND="P" STEXT="Tab. der gerade sichtbaren Daten (Anzeigetabelle" INDEX=" 012"/>
    <documentation PARAMETER="TOTAL" KIND="P" STEXT="Tabelle, mit allen von der DB gelesenen Daten" INDEX=" 013"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 014"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 015"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 016"/>
    <documentation PARAMETER="SAVING_CORRECTION_FAILED" KIND="X" STEXT="Fehler beim Sichern der Korrektureinträge" INDEX=" 017"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEPROC_ZGLIF_BOOKNG_WS
*   generation date: 2019-04-18 at 18:37:11
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEPROC.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <FUGR AREA="ZGLIF_BATCH_STAT" SPRAS="E" AREAT="Extended Table Maintenance (Generated)">
  <functionGroupDocumentation/>
  <mainprogram NAME="SAPLZGLIF_BATCH_STAT" SQLX="X" DBAPL="S" DBNA="D$" SUBC="F" APPL="S" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
   <textPool/>
   <dynpros>
    <dynpro PROG="SAPLZGLIF_BATCH_STAT" DNUM="0001" FNUM="0001" BZMX="61 " BZBR="83 " MILI="192 " MICO="37 " MALI="0 " MACO="0 " NOLI="61 " NOCO="83 " VALP="0 " CUAN="G" SPRA="E" DTEXT="View Maintenance: Overview Screen ZGLIF_BATCH_STAT">
     <dynprofield FNAM="TCTRL_ZGLIF_BATCH_STAT" DIDX="003B" FLG1="F8" FLG2="FC" FLG3="00" FILL="T" FMB1="00" FMB2="00" LENG="53" LINE="01" COLN="02" LTYP="E" LANF="65" LBLK="01" LREP="01" AUTH="101" AGLT="00" ADEZ="00"/>
     <dynprofield FNAM="VIM_FRAME_FIELD" DIDX="003C" FLG1="80" FLG2="02" FLG3="88" FMB1="30" FMB2="40" LENG="3C" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________________________________________________"/>
     <dynprofield FNAM="*ZGLIF_BATCH_STAT-INTERFACE_NAME" DIDX="0010" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Interface Name" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_BATCH_STAT-BATCH_ID" DIDX="0008" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="A0" LENG="28" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="2" AGLT="00" ADEZ="00" STXT="Batch ID" RES1="                                       00"/>
     <dynprofield FNAM="*ZGLIF_BATCH_STAT-BATCH_STATUS" DIDX="001E" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Status" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_BATCH_STAT-BATCH_CHANGED_ON" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Changed On" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_BATCH_STAT-BATCH_CHANGED_AT" DIDX="000A" FLG1="30" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="1" AGLT="00" ADEZ="00" STXT="Changed At" RES1="X                                      00"/>
     <dynprofield FNAM="*ZGLIF_BATCH_STAT-BATCH_CHANGED_BY" DIDX="000C" FLG1="20" FLG2="00" FLG3="00" FMB1="30" FMB2="80" LENG="28" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="3" AGLT="00" ADEZ="00" STXT="Changed By User" RES1="                                       00"/>
     <dynprofield FNAM="VIM_MARKED" DIDX="0001" FLG1="80" FLG2="00" FLG3="88" FILL="C" FMB1="00" FMB2="20" LENG="01" LINE="01" COLN="00" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" AUTH="102" AGLT="00" ADEZ="00" STXT="_"/>
     <dynprofield FNAM="ZGLIF_BATCH_STAT-INTERFACE_NAME" DIDX="0010" FLG1="B0" FLG2="00" FLG3="80" FMB1="30" FMB2="28" LENG="10" LINE="01" COLN="01" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="20" ADEZ="00" STXT="________________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_BATCH_STAT-BATCH_ID" DIDX="0008" FLG1="B0" FLG2="02" FLG3="80" FMB1="30" FMB2="20" LENG="05" LINE="01" COLN="02" LTYP="T" LANF="65" LBLK="01" LREP="01" PAID="ZGLIF_BATCH" UCNV="ALPHA" TYPE="CHAR" GRP1="KEY" ITYP="C" AGLT="14" ADEZ="00" STXT="_____" RES1="                                       00"/>
     <dynprofield FNAM="ZGLIF_BATCH_STAT-BATCH_STATUS" DIDX="001E" FLG1="B0" FLG2="02" FLG3="81" FMB1="00" FMB2="08" LENG="02" LINE="01" COLN="03" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="04" ADEZ="00" STXT="__" RES1="XDL                                    00"/>
     <dynprofield FNAM="ZGLIF_BATCH_STAT-BATCH_CHANGED_ON" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="31" FMB2="08" LENG="0A" LINE="01" COLN="04" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="DATS" ITYP="D" AGLT="10" ADEZ="00" STXT="__________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_BATCH_STAT-BATCH_CHANGED_AT" DIDX="000A" FLG1="B0" FLG2="00" FLG3="80" FMB1="31" FMB2="08" LENG="08" LINE="01" COLN="05" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="TIMS" ITYP="T" AGLT="0C" ADEZ="00" STXT="________" RES1="X                                      00"/>
     <dynprofield FNAM="ZGLIF_BATCH_STAT-BATCH_CHANGED_BY" DIDX="000C" FLG1="B0" FLG2="00" FLG3="80" FMB1="31" FMB2="00" LENG="0C" LINE="01" COLN="06" LTYP="T" LANF="65" LBLK="01" LREP="01" TYPE="CHAR" ITYP="C" AGLT="18" ADEZ="00" STXT="____________" RES1="                                       00"/>
     <dynprofield FNAM="VIM_POSI_PUSH" DIDX="0014" FLG1="80" FLG2="00" FLG3="88" FILL="P" FMB1="30" FMB2="00" LENG="14" LINE="3D" COLN="14" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AUTH="103" AGLT="00" ADEZ="00" STXT="____________________" RES1="                                                                                                                                                                        POSI"/>
     <dynprofield FNAM="VIM_POSITION_INFO" DIDX="001E" FLG1="80" FLG2="02" FLG3="88" FMB1="33" FMB2="00" LENG="1E" LINE="3D" COLN="29" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="______________________________"/>
     <dynprofield FNAM="OK_CODE" DIDX="0014" FLG1="80" FLG2="10" FLG3="08" FMB1="00" FMB2="00" LENG="14" LINE="FF" COLN="01" LTYP="O" LANF="00" LBLK="00" LREP="00" TYPE="CHAR" AGLT="00" ADEZ="00" STXT="____________________"/>
     <dynproflowsource>PROCESS BEFORE OUTPUT.
 MODULE LISTE_INITIALISIEREN.
 LOOP AT EXTRACT WITH CONTROL
  TCTRL_ZGLIF_BATCH_STAT CURSOR NEXTLINE.
   MODULE LISTE_SHOW_LISTE.
 ENDLOOP.
*
PROCESS AFTER INPUT.
 MODULE LISTE_EXIT_COMMAND AT EXIT-COMMAND.
 MODULE LISTE_BEFORE_LOOP.
 LOOP AT EXTRACT.
   MODULE LISTE_INIT_WORKAREA.
   CHAIN.
    FIELD ZGLIF_BATCH_STAT-INTERFACE_NAME .
    FIELD ZGLIF_BATCH_STAT-BATCH_ID .
    FIELD ZGLIF_BATCH_STAT-BATCH_STATUS .
    FIELD ZGLIF_BATCH_STAT-BATCH_CHANGED_ON .
    FIELD ZGLIF_BATCH_STAT-BATCH_CHANGED_AT .
    FIELD ZGLIF_BATCH_STAT-BATCH_CHANGED_BY .
    MODULE SET_UPDATE_FLAG ON CHAIN-REQUEST.
   ENDCHAIN.
   FIELD VIM_MARKED MODULE LISTE_MARK_CHECKBOX.
   CHAIN.
    FIELD ZGLIF_BATCH_STAT-INTERFACE_NAME .
    FIELD ZGLIF_BATCH_STAT-BATCH_ID .
    MODULE LISTE_UPDATE_LISTE.
   ENDCHAIN.
 ENDLOOP.
 MODULE LISTE_AFTER_LOOP.</dynproflowsource>
    </dynpro>
   </dynpros>
   <source>* regenerated at 2017-07-03 12:05:04
*******************************************************************
*   System-defined Include-files.                                 *
*******************************************************************
  INCLUDE LZGLIF_BATCH_STATTOP.              &quot; Global Declarations
  INCLUDE LZGLIF_BATCH_STATUXX.              &quot; Function Modules

*******************************************************************
*   User-defined Include-files (if necessary).                    *
*******************************************************************
* INCLUDE LZGLIF_BATCH_STATF...              &quot; Subroutines
* INCLUDE LZGLIF_BATCH_STATO...              &quot; PBO-Modules
* INCLUDE LZGLIF_BATCH_STATI...              &quot; PAI-Modules
* INCLUDE LZGLIF_BATCH_STATE...              &quot; Events
* INCLUDE LZGLIF_BATCH_STATP...              &quot; Local class implement.
* INCLUDE LZGLIF_BATCH_STATT99.              &quot; ABAP Unit tests
  INCLUDE LZGLIF_BATCH_STATF00                    . &quot; subprograms
  INCLUDE LZGLIF_BATCH_STATI00                    . &quot; PAI modules
  INCLUDE LSVIMFXX                                . &quot; subprograms
  INCLUDE LSVIMOXX                                . &quot; PBO modules
  INCLUDE LSVIMIXX                                . &quot; PAI modules</source>
  </mainprogram>
  <includeprograms/>
  <functionmodules>
   <functionmodule NAME="TABLEFRAME_ZGLIF_BATCH_STAT" STEXT="Extended Table Maintenance: Upper Level">
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 002"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 003"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 004"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 005"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tabelle mit dynam. zu deaktivierenden CUA-Funkt." INDEX=" 006"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 007"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 008"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 009"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEFRAME_ZGLIF_BATCH_STAT
*   generation date: 2017-07-03 at 12:05:04
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEFRAME TABLES X_HEADER X_NAMTAB DBA_SELLIST DPL_SELLIST
                            EXCL_CUA_FUNCT
                     USING  CORR_NUMBER VIEW_ACTION VIEW_NAME.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
   <functionmodule NAME="TABLEPROC_ZGLIF_BATCH_STAT" GLOBAL="X" STEXT="Lower-level extended table maintenance">
    <importing PARAMETER="FCODE" DEFAULT="&apos;RDED&apos;"/>
    <importing PARAMETER="VIEW_ACTION" DEFAULT="&apos;S&apos;"/>
    <importing PARAMETER="VIEW_NAME" DBFIELD="DD02V-TABNAME"/>
    <importing PARAMETER="CORR_NUMBER" DBFIELD="E070-TRKORR" DEFAULT="&apos; &apos;"/>
    <exporting PARAMETER="LAST_ACT_ENTRY"/>
    <exporting PARAMETER="UCOMM"/>
    <exporting PARAMETER="UPDATE_REQUIRED"/>
    <tables PARAMETER="CORR_KEYTAB" DBSTRUCT="E071K"/>
    <tables PARAMETER="DBA_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="DPL_SELLIST" DBSTRUCT="VIMSELLIST"/>
    <tables PARAMETER="EXCL_CUA_FUNCT" DBSTRUCT="VIMEXCLFUN"/>
    <tables PARAMETER="EXTRACT"/>
    <tables PARAMETER="TOTAL"/>
    <tables PARAMETER="X_HEADER" DBSTRUCT="VIMDESC"/>
    <tables PARAMETER="X_NAMTAB" DBSTRUCT="VIMNAMTAB"/>
    <exceptions EXCEPTION="MISSING_CORR_NUMBER"/>
    <exceptions EXCEPTION="SAVING_CORRECTION_FAILED"/>
    <documentation PARAMETER="FCODE" KIND="P" STEXT="gewünschte Funktion des Bausteins" INDEX=" 001"/>
    <documentation PARAMETER="VIEW_ACTION" KIND="P" STEXT="Aktion mit Tabelle: anz./änd./transp. (S/U/T)" INDEX=" 002"/>
    <documentation PARAMETER="VIEW_NAME" KIND="P" STEXT="Name der Tabelle" INDEX=" 003"/>
    <documentation PARAMETER="CORR_NUMBER" KIND="P" STEXT="Korrekturnummer für durchgeführte Änderungen" INDEX=" 004"/>
    <documentation PARAMETER="LAST_ACT_ENTRY" KIND="P" STEXT="Index der Cursorposition in der Anzeigetabelle" INDEX=" 005"/>
    <documentation PARAMETER="UCOMM" KIND="P" STEXT="letztes User-command innerhalb der Viewpflege" INDEX=" 006"/>
    <documentation PARAMETER="UPDATE_REQUIRED" KIND="P" STEXT="Flag: Einträge verändert, Sichern erforderlich" INDEX=" 007"/>
    <documentation PARAMETER="CORR_KEYTAB" KIND="P" STEXT="Tabelle mit den Keys der zu transport. Einträge" INDEX=" 008"/>
    <documentation PARAMETER="DBA_SELLIST" KIND="P" STEXT="Selektionsbedingungen für den DB-Zugriff" INDEX=" 009"/>
    <documentation PARAMETER="DPL_SELLIST" KIND="P" STEXT="Selektionsbedingungen für die Anzeige" INDEX=" 010"/>
    <documentation PARAMETER="EXCL_CUA_FUNCT" KIND="P" STEXT="Tab. der nicht zu aktivierenden CUA-Funktionen" INDEX=" 011"/>
    <documentation PARAMETER="EXTRACT" KIND="P" STEXT="Tab. der gerade sichtbaren Daten (Anzeigetabelle" INDEX=" 012"/>
    <documentation PARAMETER="TOTAL" KIND="P" STEXT="Tabelle, mit allen von der DB gelesenen Daten" INDEX=" 013"/>
    <documentation PARAMETER="X_HEADER" KIND="P" STEXT="Kontrollblocktabelle für die Tabelle" INDEX=" 014"/>
    <documentation PARAMETER="X_NAMTAB" KIND="P" STEXT="Kontrollblocktabelle für die Tabellen-Felder" INDEX=" 015"/>
    <documentation PARAMETER="MISSING_CORR_NUMBER" KIND="X" STEXT="Korrekturnummer fehlt" INDEX=" 016"/>
    <documentation PARAMETER="SAVING_CORRECTION_FAILED" KIND="X" STEXT="Fehler beim Sichern der Korrektureinträge" INDEX=" 017"/>
    <fm_source>*---------------------------------------------------------------------*
*    program for:   TABLEPROC_ZGLIF_BATCH_STAT
*   generation date: 2017-07-03 at 12:05:04
*   view maintenance generator version: #001407#
*---------------------------------------------------------------------*

  PERFORM TABLEPROC.</fm_source>
    <functionModuleDocumentation/>
   </functionmodule>
  </functionmodules>
 </FUGR>
 <MSAG ARBGB="ZGLIF_MESSAGES" MASTERLANG="E" RESPUSER="HQ_KST" STEXT="Messages for GLIF HQ development">
  <t100 SPRSL="E" ARBGB="ZGLIF_MESSAGES" MSGNR="001" TEXT="Technical error in &amp;1 processing of the IDoc &amp;2."/>
  <t100 SPRSL="E" ARBGB="ZGLIF_MESSAGES" MSGNR="004"/>
  <t100 SPRSL="E" ARBGB="ZGLIF_MESSAGES" MSGNR="002" TEXT="IDoc &amp;1 has been canceled because of corrections. New iDoc was created"/>
  <t100 SPRSL="E" ARBGB="ZGLIF_MESSAGES" MSGNR="003" TEXT="iDoc &amp;1 has been canceled. Only zero items"/>
  <t100 SPRSL="E" ARBGB="ZGLIF_MESSAGES" MSGNR="000" TEXT="IDoc would be posted successfully. Use GLIF to post the document."/>
  <t100 SPRSL="1" ARBGB="ZGLIF_MESSAGES" MSGNR="001" TEXT="Technical error in &amp;1 processing of the IDoc &amp;2."/>
  <t100 SPRSL="1" ARBGB="ZGLIF_MESSAGES" MSGNR="000" TEXT="IDoc would be posted successfully. Use GLIF to post the document."/>
  <t100t SPRSL="1" ARBGB="ZGLIF_MESSAGES" STEXT="Messages for GLIF HQ development"/>
  <t100t SPRSL="E" ARBGB="ZGLIF_MESSAGES" STEXT="Messages for GLIF HQ development"/>
 </MSAG>
 <PARA PARAMID="ZGLIF_BATCH">
  <parat PARAMID="ZGLIF_BATCH" SPRACHE="1" PARTEXT="GLIF: Batch"/>
  <parat PARAMID="ZGLIF_BATCH" SPRACHE="E" PARTEXT="GLIF: Batch"/>
 </PARA>
 <PARA PARAMID="ZGLIF_CATEGORY">
  <parat PARAMID="ZGLIF_CATEGORY" SPRACHE="1" PARTEXT="GLIF: Error Category"/>
  <parat PARAMID="ZGLIF_CATEGORY" SPRACHE="E" PARTEXT="GLIF: Error Category"/>
 </PARA>
 <PARA PARAMID="ZGLIF_INTERFACE">
  <parat PARAMID="ZGLIF_INTERFACE" SPRACHE="1" PARTEXT="GLIF: Interface name"/>
  <parat PARAMID="ZGLIF_INTERFACE" SPRACHE="E" PARTEXT="GLIF: Interface name"/>
 </PARA>
 <PDAC OBJECT="AC91000001">
  <HRS1000>
   <item OTYPE="AC" OBJID="91000001" LANGU="1" AEDTM="20170421" UNAME="HQ_TTA" SHORT="ZGLIF_ERR" STEXT="GLIF: Agent per Error Category" MC_SHORT="ZGLIF_ERR" MC_STEXT="GLIF: AGENT PER ERROR CATEGORY"/>
   <item OTYPE="AC" OBJID="91000001" LANGU="E" AEDTM="20170421" UNAME="HQ_TTA" SHORT="ZGLIF_ERR" STEXT="GLIF: Agent per Error Category" MC_SHORT="ZGLIF_ERR" MC_STEXT="GLIF: AGENT PER ERROR CATEGORY"/>
  </HRS1000>
  <HRS1203>
   <item OTYPE="AC" OBJID="91000001" AEDTM="20170421" UNAME="HQ_TTA" ENFORCE="X" ACTOR_FLAG="R"/>
  </HRS1203>
  <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
   <asx:values>
    <CONTAINER href="#o279"/>
   </asx:values>
   <asx:heap xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:abap="http://www.sap.com/abapxml/types/built-in" xmlns:cls="http://www.sap.com/abapxml/classes/global" xmlns:dic="http://www.sap.com/abapxml/types/dictionary">
    <cls:CL_SWF_CNT_CONTAINER id="o279">
     <CL_SWF_CNT_CONTAINER>
      <META>
       <LPOR>
        <INSTID>AC91000001</INSTID>
        <TYPEID>CL_SWF_CNT_HRS_PERSISTENCE</TYPEID>
        <CATID>CL</CATID>
       </LPOR>
       <PROPERTIES>22</PROPERTIES>
       <LTEXTS>  000</LTEXTS>
      </META>
      <ELMT>
       <SWFDELMDEFXML>
        <NAME>CATEGORYID</NAME>
        <PARAMKIND>I</PARAMKIND>
        <EDITELEM>CategoryID</EDITELEM>
        <TYPE>::ZGLIF_ERR_CATEG-ID:C:2:0</TYPE>
        <PROPS>0C003001</PROPS>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>INTERFACENAME</NAME>
        <PARAMKIND>I</PARAMKIND>
        <EDITELEM>InterfaceName</EDITELEM>
        <TYPE>::ZGLIF_PROCCUST-INTERFACE_NAME:C:16:0</TYPE>
        <PROPS>0C003001</PROPS>
       </SWFDELMDEFXML>
      </ELMT>
     </CL_SWF_CNT_CONTAINER>
    </cls:CL_SWF_CNT_CONTAINER>
   </asx:heap>
  </asx:abap>
  <rule_attributes ACT_SHORT="ZGLIF_ERR" ACT_STEXT="GLIF: Agent per Error Category" EXECUTE_ENFORCE="X" RESPONSIBLE_FLAG="X" ROLETYPE="R"/>
  <rule_container>
   <item ELEMENT="CATEGORYID" EDITORDER="0001" REFTYPE="D" REFSTRUCT="ZGLIF_ERR_CATEG" REFFIELD="ID" EDITELEM="CategoryID" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="CategoryID" SHORTTEXT="GLIF: Category ID" OLETYPE="00000" ELEMTYPE="I" OBLIGIMP="X" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="INTERFACENAME" EDITORDER="0002" REFTYPE="D" REFSTRUCT="ZGLIF_PROCCUST" REFFIELD="INTERFACE_NAME" EDITELEM="InterfaceName" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="InterfaceName" SHORTTEXT="GLIF: Interface Name" OLETYPE="00000" ELEMTYPE="I" OBLIGIMP="X" SORTORDER="0000" COUNTPARAM="00"/>
  </rule_container>
 </PDAC>
 <PDTS OBJECT="TS91000036">
  <HRS1000>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" AEDTM="20170609" UNAME="HQ_TTA" SHORT="ZGLIF_ERRCOR" STEXT="GLIF: Error correction" MC_SHORT="ZGLIF_ERRCOR" MC_STEXT="GLIF: ERROR CORRECTION"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" AEDTM="20170609" UNAME="HQ_TTA" SHORT="ZGLIF_ERRCOR" STEXT="GLIF: Error correction" MC_SHORT="ZGLIF_ERRCOR" MC_STEXT="GLIF: ERROR CORRECTION"/>
  </HRS1000>
  <HRS1212>
   <item OTYPE="TS" OBJID="91000036" SUBTY="0002" CLSTYP="BO" OBJTYP="ZGLIF_ERR" EVENT="BATCHCANCELLED" DATAFLOW="E" TAB_INDEX="000001" AEDTM="20170616" UNAME="HQ_TTA" EV_ELEMENT="_WI_OBJECT_ID" ELEMLENGTH="000" EXPR="&amp;_EVT_OBJECT&amp;" FLENG="000" SOURCETYPE="S" TARGETTYPE="S" TARGETEXPR="&amp;_WI_OBJECT_ID&amp;" OPERATION="ASN" OPCLASS="E"/>
   <item OTYPE="TS" OBJID="91000036" SUBTY="0002" CLSTYP="BO" OBJTYP="ZGLIF_ERR" EVENT="ERRORCORRECTED" DATAFLOW="E" TAB_INDEX="000001" AEDTM="20170616" UNAME="HQ_TTA" EV_ELEMENT="_WI_OBJECT_ID" ELEMLENGTH="000" EXPR="&amp;_EVT_OBJECT&amp;" FLENG="000" SOURCETYPE="S" TARGETTYPE="S" TARGETEXPR="&amp;_WI_OBJECT_ID&amp;" OPERATION="ASN" OPCLASS="E"/>
  </HRS1212>
  <HRS1201>
   <item OTYPE="TS" OBJID="91000036" AEDTM="20170609" UNAME="HQ_TTA" SWOTP="ZGLIF_ERR" SWMTD="CALLERRORREPORT" METHTYPE="BO" TSKRELSTAT="R"/>
  </HRS1201>
  <HRS1002>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000001" AEDTM="20170609" UNAME="HQ_TTA" TLINE='Error occured in &lt;H&gt;GLIF &quot;GL Universal Interface&quot;&lt;/&gt; for  interface' TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000002" AEDTM="20170609" UNAME="HQ_TTA" TLINE="&amp;_WI_OBJECT_ID.INTERFACENAME&amp; &lt;H&gt;batch no. &amp;_WI_OBJECT_ID.BATCHID&amp;&lt;/&gt;"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000003" AEDTM="20170609" UNAME="HQ_TTA" TLINE='within category &lt;H&gt;&amp;_WI_OBJECT_ID.CATEGORYID&amp;  &quot;'/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000004" AEDTM="20170609" UNAME="HQ_TTA" TLINE='&amp;_WI_OBJECT_ID.CATEGORYDESC&amp;&quot;&lt;/&gt;, for which you are defined  as'/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000005" AEDTM="20170609" UNAME="HQ_TTA" TLINE="responsible person."/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000006" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000007" AEDTM="20170609" UNAME="HQ_TTA" TLINE="You can run the &lt;H&gt;ZGLIF_MONITOR: GLIF Monitor&lt;/&gt;  by executing this" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000008" AEDTM="20170609" UNAME="HQ_TTA" TLINE="task. Once the  errors are resolved, mark them as such in Error"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000009" AEDTM="20170609" UNAME="HQ_TTA" TLINE="Correction report via Operation &quot;Set status &apos;Corrected&apos;&quot;  --  then next"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000010" AEDTM="20170609" UNAME="HQ_TTA" TLINE="automatic run of GLIF interface will then attempt to process  these"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000011" AEDTM="20170609" UNAME="HQ_TTA" TLINE="messages again."/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000012" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000013" AEDTM="20170609" UNAME="HQ_TTA" TLINE='Alternatively, you can also cancel the whole batch via Operation &quot;Set' TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000014" AEDTM="20170609" UNAME="HQ_TTA" TLINE="status &apos;Cancelled&apos;&quot; -- be extremely carefull with this!!  The whole data"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000015" AEDTM="20170609" UNAME="HQ_TTA" TLINE="batch will be cancelled and can be uploaded again only when source"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000016" AEDTM="20170609" UNAME="HQ_TTA" TLINE="system sends new data!"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000017" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000018" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000019" AEDTM="20170609" UNAME="HQ_TTA" TLINE="This workitem will be finished once this marking as is done." TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000020" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000021" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000022" AEDTM="20170609" UNAME="HQ_TTA" TLINE="If you choose &lt;H&gt;Cancel&lt;/&gt;, the user decision remains in your inbox for" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000023" AEDTM="20170609" UNAME="HQ_TTA" TLINE="processing."/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000024" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000025" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000026" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000027" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000028" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000029" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000030" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" SUBTY="0120" TABSEQNR="000031" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000001" AEDTM="20170609" UNAME="HQ_TTA" TLINE='Error occured in &lt;H&gt;GLIF &quot;GL Universal Interface&quot;&lt;/&gt; for  interface' TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000002" AEDTM="20170609" UNAME="HQ_TTA" TLINE="&amp;_WI_OBJECT_ID.INTERFACENAME&amp; &lt;H&gt;batch no. &amp;_WI_OBJECT_ID.BATCHID&amp;&lt;/&gt;"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000003" AEDTM="20170609" UNAME="HQ_TTA" TLINE='within category &lt;H&gt;&amp;_WI_OBJECT_ID.CATEGORYID&amp;  &quot;'/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000004" AEDTM="20170609" UNAME="HQ_TTA" TLINE='&amp;_WI_OBJECT_ID.CATEGORYDESC&amp;&quot;&lt;/&gt;, for which you are defined  as'/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000005" AEDTM="20170609" UNAME="HQ_TTA" TLINE="responsible person."/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000006" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000007" AEDTM="20170609" UNAME="HQ_TTA" TLINE="You can run the &lt;H&gt;ZGLIF_MONITOR: GLIF Monitor&lt;/&gt;  by executing this" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000008" AEDTM="20170609" UNAME="HQ_TTA" TLINE="task. Once the  errors are resolved, mark them as such in Error"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000009" AEDTM="20170609" UNAME="HQ_TTA" TLINE="Correction report via Operation &quot;Set status &apos;Corrected&apos;&quot;  --  then next"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000010" AEDTM="20170609" UNAME="HQ_TTA" TLINE="automatic run of GLIF interface will then attempt to process  these"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000011" AEDTM="20170609" UNAME="HQ_TTA" TLINE="messages again."/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000012" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000013" AEDTM="20170609" UNAME="HQ_TTA" TLINE='Alternatively, you can also cancel the whole batch via Operation &quot;Set' TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000014" AEDTM="20170609" UNAME="HQ_TTA" TLINE="status &apos;Cancelled&apos;&quot; -- be extremely carefull with this!!  The whole data"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000015" AEDTM="20170609" UNAME="HQ_TTA" TLINE="batch will be cancelled and can be uploaded again only when source"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000016" AEDTM="20170609" UNAME="HQ_TTA" TLINE="system sends new data!"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000017" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000018" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000019" AEDTM="20170609" UNAME="HQ_TTA" TLINE="This workitem will be finished once this marking as is done." TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000020" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000021" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000022" AEDTM="20170609" UNAME="HQ_TTA" TLINE="If you choose &lt;H&gt;Cancel&lt;/&gt;, the user decision remains in your inbox for" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000023" AEDTM="20170609" UNAME="HQ_TTA" TLINE="processing."/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000024" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000025" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000026" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000027" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000028" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000029" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000030" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" SUBTY="0120" TABSEQNR="000031" AEDTM="20170609" UNAME="HQ_TTA" TFORMAT="*"/>
  </HRS1002>
  <HRS1206>
   <item OTYPE="TS" OBJID="91000036" LANGU="1" AEDTM="20170609" UNAME="HQ_TTA" WITEXT="GLIF: Error correction for interface &amp;_WI_OBJECT_ID.INTERFACENAME&amp; / batch &amp;_WI_OBJECT_ID.BATCHID&amp;"/>
   <item OTYPE="TS" OBJID="91000036" LANGU="E" AEDTM="20170609" UNAME="HQ_TTA" WITEXT="GLIF: Error correction for interface &amp;_WI_OBJECT_ID.INTERFACENAME&amp; / batch &amp;_WI_OBJECT_ID.BATCHID&amp;"/>
  </HRS1206>
  <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
   <asx:values>
    <CONTAINER href="#o341"/>
   </asx:values>
   <asx:heap xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:abap="http://www.sap.com/abapxml/types/built-in" xmlns:cls="http://www.sap.com/abapxml/classes/global" xmlns:dic="http://www.sap.com/abapxml/types/dictionary">
    <cls:CL_SWF_CNT_CONTAINER id="o341">
     <CL_SWF_CNT_CONTAINER>
      <META>
       <LPOR>
        <INSTID>TS91000036</INSTID>
        <TYPEID>CL_SWF_CNT_HRS_PERSISTENCE</TYPEID>
        <CATID>CL</CATID>
       </LPOR>
       <PROPERTIES>23</PROPERTIES>
       <DEF_EXTENSION>
        <NAME>_DEF_EXT</NAME>
        <CONTPOR>
         <INSTID>DIALOG_STEP_CONTAINER</INSTID>
         <TYPEID>CL_SWF_CNT_PERSISTENCE_DEF_EXT</TYPEID>
         <CATID>CL</CATID>
        </CONTPOR>
       </DEF_EXTENSION>
       <LTEXTS>  000</LTEXTS>
      </META>
      <ELMT>
       <SWFDELMDEFXML>
        <NAME>_ADHOC_OBJECTS</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Adhoc_Objects</EDITELEM>
        <TYPE>:BO::h:0:0</TYPE>
        <PROPS>0C905A51</PROPS>
        <LTEXTS>EE014Ad Hoc ObjectsAd Hoc Objects of Workflow Instance</LTEXTS>
        <EDITORDER>1</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_ATTACH_OBJECTS</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Attach_Objects</EDITELEM>
        <TYPE>SOFM:BO::h:0:0</TYPE>
        <PROPS>0C905A51</PROPS>
        <LTEXTS>EE011AttachmentsAttachments of Workflow Instance</LTEXTS>
        <EDITORDER>2</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WI_ACTUAL_AGENT</NAME>
        <PARAMKIND>E</PARAMKIND>
        <EDITELEM>_Wi_Actual_Agent</EDITELEM>
        <TYPE>::WFSYST-AGENT:C:0:0</TYPE>
        <PROPS>0C002A11</PROPS>
        <LTEXTS>EE005AgentActual Agent of Workflow Activity</LTEXTS>
        <EDITORDER>3</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WI_GROUP_ID</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Wi_Group_ID</EDITELEM>
        <TYPE>:BO::u:0:0</TYPE>
        <PROPS>0C901A11</PROPS>
        <LTEXTS>EE018Grouping CharacterGrouping Characteristic for Workflow Instances</LTEXTS>
        <EDITORDER>4</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WORKITEM</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Workitem</EDITELEM>
        <TYPE>WORKINGWI:BO:::0:0</TYPE>
        <PROPS>0C901A11</PROPS>
        <LTEXTS>EE004StepStep Instance</LTEXTS>
        <EDITORDER>5</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WF_TICKET</NAME>
        <EDITELEM>_Wf_Ticket</EDITELEM>
        <TYPE>::SWWTTICKET:h:0:0</TYPE>
        <PROPS>0C000271</PROPS>
        <LTEXTS>EE018Transaction TicketTransaction Ticket</LTEXTS>
        <EDITORDER>6</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_RULE_RESULT</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Rule_Result</EDITELEM>
        <TYPE>AAGENT:BO::u:0:0</TYPE>
        <PROPS>0C901A11</PROPS>
        <LTEXTS>EE006AgentsResult of Agent Determination</LTEXTS>
        <EDITORDER>7</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_RFC_DESTINATION</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Rfc_Destination</EDITELEM>
        <TYPE>::RFCDEST:C:0:0</TYPE>
        <PROPS>0C001231</PROPS>
        <LTEXTS>EE015RFC DestinationRFC Destination</LTEXTS>
        <EDITORDER>8</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_ATTACH_COMMENT_OBJECTS</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Attach_Comment_Objects</EDITELEM>
        <TYPE>SOFM:BO::h:0:0</TYPE>
        <PROPS>0C905A71</PROPS>
        <LTEXTS>EE007CommentComment</LTEXTS>
        <EDITORDER>9</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_METHOD_OBJECTS</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Method_Objects</EDITELEM>
        <TYPE>:BO::h:0:0</TYPE>
        <PROPS>0C905A51</PROPS>
        <LTEXTS>EE020Second.Method ObjectSecondary Method Objects of Workflow Activity</LTEXTS>
        <EDITORDER>10</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_START_EVENT_IDENTIFIER</NAME>
        <EDITELEM>_Start_Event_Identifier</EDITELEM>
        <TYPE>CL_SWF_UTL_EVT_IDENTIFIER:CL::h:0:0</TYPE>
        <PROPS>0CC00231</PROPS>
        <LTEXTS>EE017ID of Start EventID of Start Event</LTEXTS>
        <EDITORDER>11</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WF_TYPENAME_MAPPING</NAME>
        <EDITELEM>_WF_Typename_Mapping</EDITELEM>
        <TYPE>::SWF_CNT_MAPPING_TAB:h:0:0</TYPE>
        <PROPS>0C100271</PROPS>
        <LTEXTS>EE022Relation of Type NamesRelation of Type Names (Original and Copy)</LTEXTS>
        <EDITORDER>12</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_HEALTH_CHECK_MESSAGE</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Health_Check_Message</EDITELEM>
        <TYPE>CL_SWF_FLEX_RUN_MESSAGE:CL::h:0:0</TYPE>
        <PROPS>0CC05A71</PROPS>
        <LTEXTS>EE018Healthcheck ObjectHealthcheck Object</LTEXTS>
        <EDITORDER>13</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WI_OBJECT_ID</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Wi_Object_ID</EDITELEM>
        <TYPE>ZGLIF_ERR:BO::u:0:0</TYPE>
        <PROPS>0C921A11</PROPS>
       </SWFDELMDEFXML>
      </ELMT>
     </CL_SWF_CNT_CONTAINER>
    </cls:CL_SWF_CNT_CONTAINER>
   </asx:heap>
  </asx:abap>
  <task_attributes BEGDA="19000101" ENDDA="99991231" SHORT="ZGLIF_ERRCOR" STEXT="GLIF: Error correction" SWOTP="ZGLIF_ERR" SWMTD="CALLERRORREPORT" METHTYPE="BO" TCLASS="NO_CLASS" GENERAL="X" WITEXT="GLIF: Error correction for interface &amp;_WI_OBJECT_ID.INTERFACENAME&amp; / batch &amp;_WI_OBJECT_ID.BATCHID&amp;" ACTIV_DATE="00000000" ACTIV_TIME="000000" WI_TYPE="W"/>
  <act_cont_def>
   <item ELEMENT="_WI_OBJECT_ID" EDITORDER="0001" REFTYPE="O" REFOBJTYPE="ZGLIF_ERR" EDITELEM="_Wi_Object_ID" OLEINDEX="0000000000" WINHLPIND="0000000000" OLETYPE="00000" ELEMTYPE="A" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="_ADHOC_OBJECTS" EDITORDER="0002" REFTYPE="O" EDITELEM="_Adhoc_Objects" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="Ad Hoc Objects" SHORTTEXT="Ad Hoc Objects of Workflow Instance" OLETYPE="00000" ELEMTYPE="A" TABELEM="X" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="_ATTACH_OBJECTS" EDITORDER="0003" REFTYPE="O" REFOBJTYPE="SOFM" EDITELEM="_Attach_Objects" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="Attachments" SHORTTEXT="Attachments of Workflow Instance" OLETYPE="00000" ELEMTYPE="A" TABELEM="X" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="_WI_ACTUAL_AGENT" EDITORDER="0004" REFTYPE="D" REFSTRUCT="WFSYST" REFFIELD="AGENT" EDITELEM="_Wi_Actual_Agent" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="Agent" SHORTTEXT="Actual Agent of Workflow Activity" OLETYPE="00000" ELEMTYPE="E" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="_WI_GROUP_ID" EDITORDER="0005" REFTYPE="O" EDITELEM="_Wi_Group_ID" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="Grouping Character" SHORTTEXT="Grouping Characteristic for Workflow Instances" OLETYPE="00000" ELEMTYPE="A" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="_WORKITEM" EDITORDER="0006" REFTYPE="O" REFOBJTYPE="WORKINGWI" EDITELEM="_Workitem" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="Step" SHORTTEXT="Step Instance" OLETYPE="00000" ELEMTYPE="A" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="_WF_TICKET" EDITORDER="0007" REFTYPE="D" REFFIELD="SWWTTICKET" EDITELEM="_Wf_Ticket" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="Transaction Ticket" SHORTTEXT="Transaction Ticket" OLETYPE="00000" TABELEM="X" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="_RULE_RESULT" EDITORDER="0008" REFTYPE="O" REFOBJTYPE="AAGENT" EDITELEM="_Rule_Result" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="Agents" SHORTTEXT="Result of Agent Determination" OLETYPE="00000" ELEMTYPE="A" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="_RFC_DESTINATION" EDITORDER="0009" REFTYPE="D" REFFIELD="RFCDEST" EDITELEM="_Rfc_Destination" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="RFC Destination" SHORTTEXT="RFC Destination" OLETYPE="00000" ELEMTYPE="I" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="_ATTACH_COMMENT_OBJECTS" EDITORDER="0010" REFTYPE="O" REFOBJTYPE="SOFM" EDITELEM="_Attach_Comment_Objects" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="Comment" SHORTTEXT="Comment" OLETYPE="00000" ELEMTYPE="A" TABELEM="X" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="_METHOD_OBJECTS" EDITORDER="0011" REFTYPE="O" EDITELEM="_Method_Objects" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="Second.Method Object" SHORTTEXT="Secondary Method Objects of Workflow Activity" OLETYPE="00000" ELEMTYPE="A" TABELEM="X" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="_START_EVENT_IDENTIFIER" EDITORDER="0012" REFTYPE="D" EDITELEM="_Start_Event_Identifier" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="ID of Start Event" SHORTTEXT="ID of Start Event" OLETYPE="00000" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="_WF_TYPENAME_MAPPING" EDITORDER="0013" REFTYPE="O" EDITELEM="_WF_Typename_Mapping" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="Relation of Type Nam" SHORTTEXT="Relation of Type Names (Original and Copy)" OLETYPE="00000" TABELEM="X" SORTORDER="0000" COUNTPARAM="00"/>
   <item ELEMENT="_HEALTH_CHECK_MESSAGE" EDITORDER="0014" REFTYPE="D" EDITELEM="_Health_Check_Message" OLEINDEX="0000000000" WINHLPIND="0000000000" DESCRIPT="Healthcheck Object" SHORTTEXT="Healthcheck Object" OLETYPE="00000" ELEMTYPE="A" TABELEM="X" SORTORDER="0000" COUNTPARAM="00"/>
  </act_cont_def>
  <term_events>
   <item CLSTYP="BO" OBJTYP="ZGLIF_ERR" EVENT="BATCHCANCELLED" EV_ELEMENT="_WI_OBJECT_ID"/>
   <item CLSTYP="BO" OBJTYP="ZGLIF_ERR" EVENT="ERRORCORRECTED" EV_ELEMENT="_WI_OBJECT_ID"/>
  </term_events>
  <event_binding>
   <item OTYPE="TS" OBJID="91000036" SUBTY="0002" CLSTYP="BO" OBJTYP="ZGLIF_ERR" EVENT="BATCHCANCELLED" DATAFLOW="E" TAB_INDEX="000001" AEDTM="20170616" UNAME="HQ_TTA" EV_ELEMENT="_WI_OBJECT_ID" ELEMLENGTH="000" EXPR="&amp;_EVT_OBJECT&amp;" FLENG="000" SOURCETYPE="S" TARGETTYPE="S" TARGETEXPR="&amp;_WI_OBJECT_ID&amp;" OPERATION="ASN" OPCLASS="E"/>
   <item OTYPE="TS" OBJID="91000036" SUBTY="0002" CLSTYP="BO" OBJTYP="ZGLIF_ERR" EVENT="ERRORCORRECTED" DATAFLOW="E" TAB_INDEX="000001" AEDTM="20170616" UNAME="HQ_TTA" EV_ELEMENT="_WI_OBJECT_ID" ELEMLENGTH="000" EXPR="&amp;_EVT_OBJECT&amp;" FLENG="000" SOURCETYPE="S" TARGETTYPE="S" TARGETEXPR="&amp;_WI_OBJECT_ID&amp;" OPERATION="ASN" OPCLASS="E"/>
  </event_binding>
 </PDTS>
 <PDWS OBJECT="WS91000010">
  <HRS1000>
   <item OTYPE="WS" OBJID="91000010" LANGU="1" AEDTM="20170421" UNAME="HQ_TTA" SHORT="ZGLIF_ERR" STEXT="GLIF: Error Handler Workflow" MC_SHORT="ZGLIF_ERR" MC_STEXT="GLIF: ERROR HANDLER WORKFLOW"/>
   <item OTYPE="WS" OBJID="91000010" LANGU="E" AEDTM="20170421" UNAME="HQ_TTA" SHORT="ZGLIF_ERR" STEXT="GLIF: Error Handler Workflow" MC_SHORT="ZGLIF_ERR" MC_STEXT="GLIF: ERROR HANDLER WORKFLOW"/>
  </HRS1000>
  <HRS1212>
   <item OTYPE="WS" OBJID="91000010" SUBTY="0001" CLSTYP="BO" OBJTYP="ZGLIF_ERR" EVENT="ERRORRAISED" DATAFLOW="E" TAB_INDEX="000002" AEDTM="20170616" UNAME="HQ_TTA" ELEMLENGTH="000" EXPR="&amp;_EVT_OBJECT&amp;" FLENG="000" TARGETEXPR="&amp;ZGLIF_ERR&amp;" OPERATION="ASN" OPCLASS="E"/>
   <item OTYPE="WS" OBJID="91000010" SUBTY="0001" CLSTYP="BO" OBJTYP="ZGLIF_ERR" EVENT="ERRORRAISED" DATAFLOW="E" TAB_INDEX="000001" AEDTM="20170616" UNAME="HQ_TTA" ELEMLENGTH="000" EXPR="&amp;_EVT_CREATOR&amp;" FLENG="000" TARGETEXPR="&amp;_WF_INITIATOR&amp;" OPERATION="ASN" OPCLASS="E"/>
  </HRS1212>
  <HRS1201>
   <item OTYPE="WS" OBJID="91000010" AEDTM="20170421" UNAME="HQ_TTA"/>
  </HRS1201>
  <HRS1205>
   <item OTYPE="WS" OBJID="91000010" WFD_ID="WS91000010" VERSION="0000" AEDTM="20200609" UNAME="DDIC" ACTIVE="X" ACTIV_DATE="20200609" ACTIV_TIME="133456" SAPRL="754"/>
  </HRS1205>
  <HRS1206>
   <item OTYPE="WS" OBJID="91000010" LANGU="1" AEDTM="20170421" UNAME="HQ_TTA" WITEXT='GLIF: Error workflow for batch &amp;ZGLIF_ERR.BATCHID&amp;, category &amp;ZGLIF_ERR.CATEGORYID&amp; &quot;&amp;ZGLIF_ERR.CATEGORYDESC&amp;&quot;'/>
   <item OTYPE="WS" OBJID="91000010" LANGU="E" AEDTM="20170421" UNAME="HQ_TTA" WITEXT='GLIF: Error workflow for batch &amp;ZGLIF_ERR.BATCHID&amp;, category &amp;ZGLIF_ERR.CATEGORYID&amp; &quot;&amp;ZGLIF_ERR.CATEGORYDESC&amp;&quot;'/>
  </HRS1206>
  <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
   <asx:values>
    <CONTAINER href="#o320"/>
   </asx:values>
   <asx:heap xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:abap="http://www.sap.com/abapxml/types/built-in" xmlns:cls="http://www.sap.com/abapxml/classes/global" xmlns:dic="http://www.sap.com/abapxml/types/dictionary">
    <cls:CL_SWF_CNT_CONTAINER id="o320">
     <CL_SWF_CNT_CONTAINER>
      <META>
       <LPOR>
        <INSTID>WS91000010</INSTID>
        <TYPEID>CL_SWF_CNT_HRS_PERSISTENCE</TYPEID>
        <CATID>CL</CATID>
       </LPOR>
       <PROPERTIES>23</PROPERTIES>
       <DEF_EXTENSION>
        <NAME>_DEF_EXT</NAME>
        <CONTPOR>
         <INSTID>STANDARD_FLOW_CONTAINER</INSTID>
         <TYPEID>CL_SWF_CNT_PERSISTENCE_DEF_EXT</TYPEID>
         <CATID>CL</CATID>
        </CONTPOR>
       </DEF_EXTENSION>
       <LTEXTS>  000</LTEXTS>
      </META>
      <ELMT>
       <SWFDELMDEFXML>
        <NAME>_ADHOC_OBJECTS</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Adhoc_Objects</EDITELEM>
        <TYPE>:BO::h:0:0</TYPE>
        <PROPS>0C905A51</PROPS>
        <LTEXTS>EE014Ad Hoc ObjectsAd Hoc Objects of Workflow Instance</LTEXTS>
        <EDITORDER>1</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_ATTACH_OBJECTS</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Attach_Objects</EDITELEM>
        <TYPE>SOFM:BO::h:0:0</TYPE>
        <PROPS>0C905A51</PROPS>
        <LTEXTS>EE011AttachmentsAttachments of Workflow Instance</LTEXTS>
        <EDITORDER>2</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WF_INITIATOR</NAME>
        <PARAMKIND>I</PARAMKIND>
        <EDITELEM>_Wf_Initiator</EDITELEM>
        <TYPE>::WFSYST-INITIATOR:C:0:0</TYPE>
        <PROPS>0C003211</PROPS>
        <EDITORDER>3</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WF_PRIORITY</NAME>
        <PARAMKIND>C</PARAMKIND>
        <VALUE href="#d78"/>
        <EDITELEM>_Wf_Priority</EDITELEM>
        <TYPE>::SWFCN_TYPE_PRIORITY:N:0:0</TYPE>
        <PROPS>0C001A1</PROPS>
        <EDITORDER>4</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WI_GROUP_ID</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Wi_Group_ID</EDITELEM>
        <TYPE>:BO::u:0:0</TYPE>
        <PROPS>0C901A11</PROPS>
        <LTEXTS>EE018Grouping CharacterGrouping Characteristic for Workflow Instances</LTEXTS>
        <EDITORDER>5</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WORKITEM</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Workitem</EDITELEM>
        <TYPE>FLOWITEM:BO::u:0:0</TYPE>
        <PROPS>0C901A11</PROPS>
        <LTEXTS>EE008WorkflowWorkflow Instance</LTEXTS>
        <EDITORDER>6</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WF_VERSION</NAME>
        <PARAMKIND>E</PARAMKIND>
        <EDITELEM>_Wf_Version</EDITELEM>
        <TYPE>::SWD_VERSIO:C:0:0</TYPE>
        <PROPS>0C000A11</PROPS>
        <EDITORDER>7</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WF_NESTING_LEVEL</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_WF_Nesting_Level</EDITELEM>
        <TYPE>::SYINDEX:I:0:0</TYPE>
        <PROPS>0C001A31</PROPS>
        <EDITORDER>8</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_PREDECESSOR_WI</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Predecessor_Wi</EDITELEM>
        <TYPE>WORKITEM:BO::u:0:0</TYPE>
        <PROPS>0C900011</PROPS>
        <LTEXTS>EE011PredecessorPrevious Work Item</LTEXTS>
        <EDITORDER>9</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_RFC_DESTINATION</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Rfc_Destination</EDITELEM>
        <TYPE>::RFCDEST:C:0:0</TYPE>
        <PROPS>0C001231</PROPS>
        <EDITORDER>10</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_ATTACH_COMMENT_OBJECTS</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Attach_Comment_Objects</EDITELEM>
        <TYPE>SOFM:BO::h:0:0</TYPE>
        <PROPS>0C905A71</PROPS>
        <LTEXTS>EE007CommentComment</LTEXTS>
        <EDITORDER>11</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_START_EVENT_IDENTIFIER</NAME>
        <EDITELEM>_Start_Event_Identifier</EDITELEM>
        <TYPE>CL_SWF_UTL_EVT_IDENTIFIER:CL::h:0:0</TYPE>
        <PROPS>0CC00231</PROPS>
        <LTEXTS>EE017ID of Start EventID of Start Event</LTEXTS>
        <EDITORDER>12</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WF_TYPENAME_MAPPING</NAME>
        <EDITELEM>_WF_Typename_Mapping</EDITELEM>
        <TYPE>::SWF_CNT_MAPPING_TAB:h:0:0</TYPE>
        <PROPS>0C100271</PROPS>
        <LTEXTS>EE022Relation of Type NamesRelation of Type Names (Original and Copy)</LTEXTS>
        <EDITORDER>13</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WF_START_QUERY</NAME>
        <PARAMKIND>I</PARAMKIND>
        <EDITELEM>_WF_Start_Query</EDITELEM>
        <TYPE>::SWF_STRING:g:0:0</TYPE>
        <PROPS>0C001231</PROPS>
        <LTEXTS>EE011Start QueryWorkflow Start Query in URL Syntax</LTEXTS>
        <EDITORDER>14</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WF_LAST_CALLBACK_WI</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_WF_Last_Callback_Wi</EDITELEM>
        <TYPE>WORKITEM:BO::u:0:0</TYPE>
        <PROPS>0C900031</PROPS>
        <LTEXTS>EE018Callback Work ItemCallback Work Item</LTEXTS>
        <EDITORDER>15</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_HEALTH_CHECK_MESSAGE</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Health_Check_Message</EDITELEM>
        <TYPE>CL_SWF_FLEX_RUN_MESSAGE:CL::h:0:0</TYPE>
        <PROPS>0CC05A71</PROPS>
        <LTEXTS>EE018Healthcheck ObjectHealthcheck Object</LTEXTS>
        <EDITORDER>16</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_COMPLETION_TEMPLATE</NAME>
        <EDITELEM>_Completion_Template</EDITELEM>
        <TYPE>::SWF_FLEX_ENOTIF_MAIL_TAB:h:0:0</TYPE>
        <PROPS>0C000271</PROPS>
        <LTEXTS>EE019Completion TemplateCompletion Template</LTEXTS>
        <EDITORDER>17</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>_WF_Result</NAME>
        <PARAMKIND>C</PARAMKIND>
        <EDITELEM>_Workflow_Result</EDITELEM>
        <TYPE>::SWD_RESDSC:C:0:0</TYPE>
        <PROPS>0C000031</PROPS>
        <LTEXTS>EE015Workflow ResultWorkflow Result</LTEXTS>
        <EDITORDER>18</EDITORDER>
       </SWFDELMDEFXML>
       <SWFDELMDEFXML>
        <NAME>ZGLIF_ERR</NAME>
        <PARAMKIND>C</PARAMKIND>
        <TYPE>ZGLIF_ERR:BO::u:0:0</TYPE>
        <PROPS>0C921801</PROPS>
       </SWFDELMDEFXML>
      </ELMT>
     </CL_SWF_CNT_CONTAINER>
    </cls:CL_SWF_CNT_CONTAINER>
    <abap:digits maxLength="1" id="d78">5</abap:digits>
   </asx:heap>
  </asx:abap>
  <wf_definition WFD_ID="WS91000010" VERSION="0000" EXETYP="S">
   <workflow_exchange xmlns="http://www.sap.com/bc/bmt/wfm/def" type="internal" release="754" version="1.0" xml:lang="EN">
    <workflow id="WS91000010(0000)S">
     <task>
      <TASK>WS91000010</TASK>
      <SHORT>ZGLIF_ERR</SHORT>
      <STEXT>GLIF: Error Handler Workflow</STEXT>
      <WI_TEXT>GLIF: Error workflow for batch &amp;ZGLIF_ERR.BATCHID&amp;, category &amp;ZGLIF_ERR.CATEGORYID&amp; &quot;&amp;ZGLIF_ERR.CATEGORYDESC&amp;&quot;</WI_TEXT>
      <STARTING_EVENTS>
       <item>
        <EVT_OTYPE>ZGLIF_ERR</EVT_OTYPE>
        <EVT_CATID>BO</EVT_CATID>
        <EVENT>ERRORRAISED</EVENT>
        <BINDING>
         <item>
          <DATAFLOW>E</DATAFLOW>
          <TAB_INDEX>000001</TAB_INDEX>
          <EXPR>&amp;_EVT_CREATOR&amp;</EXPR>
          <TARGETEXPR>&amp;_WF_INITIATOR&amp;</TARGETEXPR>
          <OPERATION>ASN</OPERATION>
          <OPCLASS>E</OPCLASS>
         </item>
         <item>
          <DATAFLOW>E</DATAFLOW>
          <TAB_INDEX>000002</TAB_INDEX>
          <EXPR>&amp;_EVT_OBJECT&amp;</EXPR>
          <TARGETEXPR>&amp;ZGLIF_ERR&amp;</TARGETEXPR>
          <OPERATION>ASN</OPERATION>
          <OPCLASS>E</OPCLASS>
         </item>
        </BINDING>
       </item>
      </STARTING_EVENTS>
     </task>
     <header>
      <WFD_ID>WS91000010</WFD_ID>
      <VERSION>0000</VERSION>
      <EXETYP>S</EXETYP>
      <OBJID>91000010</OBJID>
      <ACTIV>X</ACTIV>
      <LANGUAGE>E</LANGUAGE>
      <TASK>WS91000010</TASK>
      <CREATED_BY>HQ_TTA</CREATED_BY>
      <CREATED_ON>2017-06-09</CREATED_ON>
      <CREATED_AT>16:55:35</CREATED_AT>
      <CREATED_RL>750</CREATED_RL>
      <CHANGED_BY>HQ_TTA</CHANGED_BY>
      <CHANGED_ON>2017-06-16</CHANGED_ON>
      <CHANGED_AT>14:20:38</CHANGED_AT>
      <CHANGED_RL>754</CHANGED_RL>
      <ACTIVAT_BY>HQ_TTA</ACTIVAT_BY>
      <ACTIVAT_ON>2017-06-16</ACTIVAT_ON>
      <ACTIVAT_AT>14:20:38</ACTIVAT_AT>
      <ACTIVAT_RL>750</ACTIVAT_RL>
      <ORIG_VERS>0002</ORIG_VERS>
      <PRS_PROFIL>0002</PRS_PROFIL>
     </header>
     <workflow_container>
      <CONTAINER>
       <PROPERTIES>
        <OWN_ID>
         <INSTID>WS910000100000S</INSTID>
         <TYPEID>CL_SWF_CNT_WS_PERSISTENCE</TYPEID>
         <CATID>CL</CATID>
        </OWN_ID>
        <INCLUDES>
         <item>
          <NAME>_TASK_HRS_CONTAINER</NAME>
          <POR>
           <INSTID>WS91000010</INSTID>
           <TYPEID>CL_SWF_CNT_HRS_PERSISTENCE</TYPEID>
           <CATID>CL</CATID>
          </POR>
         </item>
        </INCLUDES>
        <PROPSTRING>23</PROPSTRING>
        <XMLVERSION>0002</XMLVERSION>
        <INTERNAL>X</INTERNAL>
       </PROPERTIES>
       <ELEMENTS>
        <A NAME="_ADHOC_OBJECTS:_Adhoc_Objects:" TYPE=":BO::h:0:0" PROPS="0C925A51" LTEXTS="EE014Ad Hoc ObjectsAd Hoc Objects of Workflow Instance" CHGDTA="754:20210725142523:VN00045399::00000000000000:"/>
        <B NAME="_ATTACH_OBJECTS:_Attach_Objects:" TYPE="SOFM:BO::h:0:0" PROPS="0C925A51" LTEXTS="EE011AttachmentsAttachments of Workflow Instance" CHGDTA="754:20210725142523:VN00045399::00000000000000:"/>
        <C NAME="_WF_INITIATOR:_Wf_Initiator:" TYPE="::WFSYST-INITIATOR:C:0:0" PROPS="0C003211" CHGDTA="750:20170421082610:HQ_TTA::00000000000000:"/>
        <D NAME="_WF_PRIORITY:_Wf_Priority:" TYPE="::SWFCN_TYPE_PRIORITY:N:0:0" PROPS="0C001A1" CHGDTA="750:20170421082610:HQ_TTA::00000000000000:">5</D>
        <E NAME="_WI_GROUP_ID:_Wi_Group_ID:" TYPE=":BO::u:0:0" PROPS="0C921A11" LTEXTS="EE018Grouping CharacterGrouping Characteristic for Workflow Instances" CHGDTA="754:20210725142523:VN00045399::00000000000000:"/>
        <F NAME="_WORKITEM:_Workitem:" TYPE="FLOWITEM:BO::u:0:0" PROPS="0C921A11" LTEXTS="EE008WorkflowWorkflow Instance" CHGDTA="754:20210725142523:VN00045399::00000000000000:"/>
        <G NAME="_WF_VERSION:_Wf_Version:" TYPE="::SWD_VERSIO:C:0:0" PROPS="0C000A11" CHGDTA="750:20170421082610:HQ_TTA::00000000000000:"/>
        <H NAME="_WF_NESTING_LEVEL:_WF_Nesting_Level:" TYPE="::SYINDEX:I:0:0" PROPS="0C001A31" CHGDTA="750:20170421082610:HQ_TTA::00000000000000:"/>
        <I NAME="_PREDECESSOR_WI:_Predecessor_Wi:" TYPE="WORKITEM:BO::u:0:0" PROPS="0C920011" LTEXTS="EE011PredecessorPrevious Work Item" CHGDTA="754:20210725142523:VN00045399::00000000000000:"/>
        <J NAME="_RFC_DESTINATION:_Rfc_Destination:" TYPE="::RFCDEST:C:0:0" PROPS="0C001231" CHGDTA="750:20170421082610:HQ_TTA::00000000000000:"/>
        <K NAME="_ATTACH_COMMENT_OBJECTS:_Attach_Comment_Objects:" TYPE="SOFM:BO::h:0:0" PROPS="0C925A71" LTEXTS="EE007CommentComment" CHGDTA="754:20210725142523:VN00045399::00000000000000:"/>
        <L NAME="_START_EVENT_IDENTIFIER:_Start_Event_Identifier:" TYPE="CL_SWF_UTL_EVT_IDENTIFIER:CL::h:0:0" PROPS="0CC20231" LTEXTS="EE017ID of Start EventID of Start Event" CHGDTA="754:20210725142523:VN00045399::00000000000000:"/>
        <M NAME="_WF_TYPENAME_MAPPING:_WF_Typename_Mapping:" TYPE="::SWF_CNT_MAPPING_TAB:h:0:0" PROPS="0C120271" LTEXTS="EE022Relation of Type NamesRelation of Type Names (Original and Copy)" CHGDTA="754:20210725142523:VN00045399::00000000000000:"/>
        <N NAME="_WF_START_QUERY:_WF_Start_Query:" TYPE="::SWF_STRING:g:0:0" PROPS="0C001231" LTEXTS="EE011Start QueryWorkflow Start Query in URL Syntax" CHGDTA="754:20210725142523:VN00045399::00000000000000:"/>
        <O NAME="_WF_LAST_CALLBACK_WI:_WF_Last_Callback_Wi:" TYPE="WORKITEM:BO::u:0:0" PROPS="0C920031" LTEXTS="EE018Callback Work ItemCallback Work Item" CHGDTA="754:20210725142523:VN00045399::00000000000000:"/>
        <P NAME="_HEALTH_CHECK_MESSAGE:_Health_Check_Message:" TYPE="CL_SWF_FLEX_RUN_MESSAGE:CL::h:0:0" PROPS="0CC25A71" LTEXTS="EE018Healthcheck ObjectHealthcheck Object" CHGDTA="754:20210725142523:VN00045399::00000000000000:"/>
        <Q NAME="_COMPLETION_TEMPLATE:_Completion_Template:" TYPE="::SWF_FLEX_ENOTIF_MAIL_TAB:h:0:0" PROPS="0C000271" LTEXTS="EE019Completion TemplateCompletion Template" CHGDTA="754:20210725142523:VN00045399::00000000000000:"/>
        <R NAME="_WF_Result:_Workflow_Result:" TYPE="::SWD_RESDSC:C:0:0" PROPS="0C000031" LTEXTS="EE015Workflow ResultWorkflow Result" CHGDTA="754:20210725142523:VN00045399::00000000000000:"/>
        <S NAME="ZGLIF_ERR::" TYPE="ZGLIF_ERR:BO::u:0:0" PROPS="0C921801" CHGDTA="750:20170421082043:HQ_TTA:750:20170421082451:HQ_TTA"/>
       </ELEMENTS>
      </CONTAINER>
     </workflow_container>
     <texts>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>1</LANGUAGE>
       <NODEID>0000000041</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>para: wait for Cancell</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>1</LANGUAGE>
       <NODEID>0000000048</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>GLIF: error correction worfklow</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>1</LANGUAGE>
       <NODEID>0000000051</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>Error Corrected in GLIF Monitor</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>1</LANGUAGE>
       <NODEID>0000000060</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>wait for BatchCancellation</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>1</LANGUAGE>
       <NODEID>0000000063</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>BatchCancelled</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>1</LANGUAGE>
       <NODEID>0000999501</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>Error Raised in GLIF Error Handler</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>1</LANGUAGE>
       <NODEID>0000999505</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>Error Raised in GLIF Error Handler</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>1</LANGUAGE>
       <NODEID>0000999998</NODEID>
       <TEXTTYP>ND</TEXTTYP>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>E</LANGUAGE>
       <NODEID>0000000041</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>para: wait for Cancell</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>E</LANGUAGE>
       <NODEID>0000000048</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>GLIF: error correction worfklow</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>E</LANGUAGE>
       <NODEID>0000000051</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>Error Corrected in GLIF Monitor</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>E</LANGUAGE>
       <NODEID>0000000060</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>wait for BatchCancellation</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>E</LANGUAGE>
       <NODEID>0000000063</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>BatchCancelled</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>E</LANGUAGE>
       <NODEID>0000999501</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>Error Raised in GLIF Error Handler</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>E</LANGUAGE>
       <NODEID>0000999505</NODEID>
       <TEXTTYP>ND</TEXTTYP>
       <WFD_TEXT>Error Raised in GLIF Error Handler</WFD_TEXT>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <LANGUAGE>E</LANGUAGE>
       <NODEID>0000999998</NODEID>
       <TEXTTYP>ND</TEXTTYP>
      </item>
     </texts>
     <bindings>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000048</NODEID>
       <BINDTYPE>WR</BINDTYPE>
       <DATAFLOW>E</DATAFLOW>
       <CONT_INDEX>000001</CONT_INDEX>
       <EXPR>&amp;ZGLIF_ERR.INTERFACENAME&amp;</EXPR>
       <TARGETEXPR>&amp;INTERFACENAME&amp;</TARGETEXPR>
       <OPERATION>ASN</OPERATION>
       <OPCLASS>E</OPCLASS>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000048</NODEID>
       <BINDTYPE>WR</BINDTYPE>
       <DATAFLOW>E</DATAFLOW>
       <CONT_INDEX>000002</CONT_INDEX>
       <EXPR>&amp;ZGLIF_ERR.CATEGORYID&amp;</EXPR>
       <TARGETEXPR>&amp;CATEGORYID&amp;</TARGETEXPR>
       <OPERATION>ASN</OPERATION>
       <OPCLASS>E</OPCLASS>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000048</NODEID>
       <BINDTYPE>WW</BINDTYPE>
       <DATAFLOW>E</DATAFLOW>
       <CONT_INDEX>000001</CONT_INDEX>
       <EXPR>&amp;ZGLIF_ERR&amp;</EXPR>
       <SOURCETYPE>S</SOURCETYPE>
       <TARGETTYPE>S</TARGETTYPE>
       <TARGETEXPR>&amp;_WI_OBJECT_ID&amp;</TARGETEXPR>
       <OPERATION>ASN</OPERATION>
       <OPCLASS>E</OPCLASS>
      </item>
     </bindings>
     <steps>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000001</NODEID>
       <DESCRIPT>XOR</DESCRIPT>
       <NODETYPE>STRT</NODETYPE>
       <MODELEMENT>O</MODELEMENT>
       <EXP_TOKENS>002</EXP_TOKENS>
       <BLOCKID>0000000001</BLOCKID>
       <NEST_LEVEL>01</NEST_LEVEL>
       <START_NODE>X</START_NODE>
       <XOR_FLAG>X</XOR_FLAG>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-04-21</CREATED_ON>
       <CREATED_AT>10:26:08</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
       <CHANGED_BY>VN00045399</CHANGED_BY>
       <CHANGED_ON>2021-07-25</CHANGED_ON>
       <CHANGED_AT>16:25:18</CHANGED_AT>
       <CHANGED_RL>754</CHANGED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000041</NODEID>
       <DESCRIPT>para: wait for Cancell</DESCRIPT>
       <NODETYPE>FORK</NODETYPE>
       <MODELEMENT>O</MODELEMENT>
       <FORK_TOKEN>002</FORK_TOKEN>
       <BLOCKID>0000000041</BLOCKID>
       <PAR_BLCKID>0000000001</PAR_BLCKID>
       <NEST_LEVEL>02</NEST_LEVEL>
       <START_NODE>X</START_NODE>
       <VCXPOS>1</VCXPOS>
       <VCYPOS>3</VCYPOS>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-06-16</CREATED_ON>
       <CREATED_AT>14:16:00</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
       <CHANGED_BY>HQ_TTA</CHANGED_BY>
       <CHANGED_ON>2017-06-16</CHANGED_ON>
       <CHANGED_AT>14:20:38</CHANGED_AT>
       <CHANGED_RL>750</CHANGED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000042</NODEID>
       <DESCRIPT>Join</DESCRIPT>
       <NODETYPE>JOIN</NODETYPE>
       <MODELEMENT>O</MODELEMENT>
       <MIN_TOKENS>001</MIN_TOKENS>
       <EXP_TOKENS>002</EXP_TOKENS>
       <BLOCKID>0000000041</BLOCKID>
       <PAR_BLCKID>0000000001</PAR_BLCKID>
       <NEST_LEVEL>02</NEST_LEVEL>
       <END_NODE>X</END_NODE>
       <VCXPOS>1</VCXPOS>
       <VCYPOS>7</VCYPOS>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-06-16</CREATED_ON>
       <CREATED_AT>14:16:00</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
       <CHANGED_BY>HQ_TTA</CHANGED_BY>
       <CHANGED_ON>2017-06-16</CHANGED_ON>
       <CHANGED_AT>14:20:38</CHANGED_AT>
       <CHANGED_RL>750</CHANGED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000048</NODEID>
       <DESCRIPT>GLIF: error correction worfklow</DESCRIPT>
       <NODETYPE>FUNC</NODETYPE>
       <MODELEMENT>S</MODELEMENT>
       <TASK>TS91000036</TASK>
       <TASK_STEXT>GLIF: Error correction</TASK_STEXT>
       <ASYNC_TASK>X</ASYNC_TASK>
       <CONFRM_EVT>X</CONFRM_EVT>
       <DES_ST_U>MIN</DES_ST_U>
       <LATE_ST_U>MIN</LATE_ST_U>
       <DES_END_U>MIN</DES_END_U>
       <LATE_END_U>MIN</LATE_END_U>
       <PRIORITY>5</PRIORITY>
       <BLOCKID>0000000048</BLOCKID>
       <PAR_BLCKID>0000000041</PAR_BLCKID>
       <NEST_LEVEL>03</NEST_LEVEL>
       <START_NODE>X</START_NODE>
       <VCXPOS>1</VCXPOS>
       <VCYPOS>5</VCYPOS>
       <DES_SZ_EXP>%ZONLO%</DES_SZ_EXP>
       <LAT_SZ_EXP>%ZONLO%</LAT_SZ_EXP>
       <DES_EZ_EXP>%ZONLO%</DES_EZ_EXP>
       <LAT_EZ_EXP>%ZONLO%</LAT_EZ_EXP>
       <AGNT_EXPR>AC91000001</AGNT_EXPR>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-06-09</CREATED_ON>
       <CREATED_AT>16:52:09</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
       <CHANGED_BY>HQ_TTA</CHANGED_BY>
       <CHANGED_ON>2017-06-16</CHANGED_ON>
       <CHANGED_AT>14:20:38</CHANGED_AT>
       <CHANGED_RL>750</CHANGED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000049</NODEID>
       <DESCRIPT>XOR</DESCRIPT>
       <NODETYPE>XOR</NODETYPE>
       <MODELEMENT>O</MODELEMENT>
       <FORK_TOKEN>001</FORK_TOKEN>
       <BLOCKID>0000000048</BLOCKID>
       <PAR_BLCKID>0000000041</PAR_BLCKID>
       <NEST_LEVEL>03</NEST_LEVEL>
       <XOR_FLAG>X</XOR_FLAG>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-06-09</CREATED_ON>
       <CREATED_AT>16:52:09</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
       <CHANGED_BY>HQ_TTA</CHANGED_BY>
       <CHANGED_ON>2017-06-16</CHANGED_ON>
       <CHANGED_AT>14:16:14</CHANGED_AT>
       <CHANGED_RL>750</CHANGED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000050</NODEID>
       <DESCRIPT>End</DESCRIPT>
       <NODETYPE>ECAS</NODETYPE>
       <MODELEMENT>O</MODELEMENT>
       <EXP_TOKENS>001</EXP_TOKENS>
       <BLOCKID>0000000048</BLOCKID>
       <PAR_BLCKID>0000000041</PAR_BLCKID>
       <NEST_LEVEL>03</NEST_LEVEL>
       <END_NODE>X</END_NODE>
       <XOR_FLAG>X</XOR_FLAG>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-06-09</CREATED_ON>
       <CREATED_AT>16:52:09</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
       <CHANGED_BY>HQ_TTA</CHANGED_BY>
       <CHANGED_ON>2017-06-16</CHANGED_ON>
       <CHANGED_AT>14:16:14</CHANGED_AT>
       <CHANGED_RL>750</CHANGED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000051</NODEID>
       <DESCRIPT>Error Corrected in GLIF Monitor</DESCRIPT>
       <NODETYPE>TEVT</NODETYPE>
       <MODELEMENT>E</MODELEMENT>
       <RETURN>0000</RETURN>
       <TASK>TS91000036</TASK>
       <TASK_STEXT>GLIF: Error correction</TASK_STEXT>
       <ASYNC_TASK>X</ASYNC_TASK>
       <CONFRM_EVT>X</CONFRM_EVT>
       <EVT_TYPE>ERRORCORRECTED</EVT_TYPE>
       <EVT_OTYPE>ZGLIF_ERR</EVT_OTYPE>
       <EVT_CATID>BO</EVT_CATID>
       <EVT_CONTEL>_WI_OBJECT_ID</EVT_CONTEL>
       <BLOCKID>0000000048</BLOCKID>
       <PAR_BLCKID>0000000041</PAR_BLCKID>
       <NEST_LEVEL>03</NEST_LEVEL>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-06-09</CREATED_ON>
       <CREATED_AT>16:52:09</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
       <CHANGED_BY>HQ_TTA</CHANGED_BY>
       <CHANGED_ON>2017-06-16</CHANGED_ON>
       <CHANGED_AT>14:16:14</CHANGED_AT>
       <CHANGED_RL>750</CHANGED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000060</NODEID>
       <DESCRIPT>wait for BatchCancellation</DESCRIPT>
       <REC_COUNT>0001</REC_COUNT>
       <NODETYPE>WAIT</NODETYPE>
       <MODELEMENT>S</MODELEMENT>
       <DES_ST_U>MIN</DES_ST_U>
       <LATE_ST_U>MIN</LATE_ST_U>
       <DES_END_U>MIN</DES_END_U>
       <LATE_END_U>MIN</LATE_END_U>
       <PRIORITY>5</PRIORITY>
       <EVT_TYPE>BATCHCANCELLED</EVT_TYPE>
       <EVT_OTYPE>ZGLIF_ERR</EVT_OTYPE>
       <EVT_CATID>BO</EVT_CATID>
       <EVT_CONTEL>ZGLIF_ERR</EVT_CONTEL>
       <BLOCKID>0000000060</BLOCKID>
       <PAR_BLCKID>0000000041</PAR_BLCKID>
       <NEST_LEVEL>03</NEST_LEVEL>
       <START_NODE>X</START_NODE>
       <VCXPOS>2</VCXPOS>
       <VCYPOS>5</VCYPOS>
       <DES_SZ_EXP>%ZONLO%</DES_SZ_EXP>
       <LAT_SZ_EXP>%ZONLO%</LAT_SZ_EXP>
       <DES_EZ_EXP>%ZONLO%</DES_EZ_EXP>
       <LAT_EZ_EXP>%ZONLO%</LAT_EZ_EXP>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-06-16</CREATED_ON>
       <CREATED_AT>14:20:36</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
       <CHANGED_BY>HQ_TTA</CHANGED_BY>
       <CHANGED_ON>2017-06-16</CHANGED_ON>
       <CHANGED_AT>14:20:38</CHANGED_AT>
       <CHANGED_RL>750</CHANGED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000061</NODEID>
       <DESCRIPT>XOR</DESCRIPT>
       <NODETYPE>XOR</NODETYPE>
       <MODELEMENT>O</MODELEMENT>
       <FORK_TOKEN>001</FORK_TOKEN>
       <BLOCKID>0000000060</BLOCKID>
       <PAR_BLCKID>0000000041</PAR_BLCKID>
       <NEST_LEVEL>03</NEST_LEVEL>
       <XOR_FLAG>X</XOR_FLAG>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-06-16</CREATED_ON>
       <CREATED_AT>14:20:36</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
       <CHANGED_BY>HQ_TTA</CHANGED_BY>
       <CHANGED_ON>2017-06-16</CHANGED_ON>
       <CHANGED_AT>14:20:36</CHANGED_AT>
       <CHANGED_RL>750</CHANGED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000062</NODEID>
       <DESCRIPT>End</DESCRIPT>
       <NODETYPE>ECAS</NODETYPE>
       <MODELEMENT>O</MODELEMENT>
       <EXP_TOKENS>001</EXP_TOKENS>
       <BLOCKID>0000000060</BLOCKID>
       <PAR_BLCKID>0000000041</PAR_BLCKID>
       <NEST_LEVEL>03</NEST_LEVEL>
       <END_NODE>X</END_NODE>
       <XOR_FLAG>X</XOR_FLAG>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-06-16</CREATED_ON>
       <CREATED_AT>14:20:36</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
       <CHANGED_BY>HQ_TTA</CHANGED_BY>
       <CHANGED_ON>2017-06-16</CHANGED_ON>
       <CHANGED_AT>14:20:36</CHANGED_AT>
       <CHANGED_RL>750</CHANGED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000000063</NODEID>
       <DESCRIPT>BatchCancelled</DESCRIPT>
       <NODETYPE>WEVT</NODETYPE>
       <MODELEMENT>E</MODELEMENT>
       <RETURN>0000</RETURN>
       <BLOCKID>0000000060</BLOCKID>
       <PAR_BLCKID>0000000041</PAR_BLCKID>
       <NEST_LEVEL>03</NEST_LEVEL>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-06-16</CREATED_ON>
       <CREATED_AT>14:20:36</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
       <CHANGED_BY>HQ_TTA</CHANGED_BY>
       <CHANGED_ON>2017-06-16</CHANGED_ON>
       <CHANGED_AT>14:20:36</CHANGED_AT>
       <CHANGED_RL>750</CHANGED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000999503</NODEID>
       <DESCRIPT>Complete Workflow</DESCRIPT>
       <NODETYPE>EFUN</NODETYPE>
       <MODELEMENT>S</MODELEMENT>
       <BLOCKID>0000000001</BLOCKID>
       <NEST_LEVEL>01</NEST_LEVEL>
       <START_NODE>X</START_NODE>
       <DES_SZ_EXP>%ZONLO%</DES_SZ_EXP>
       <LAT_SZ_EXP>%ZONLO%</LAT_SZ_EXP>
       <DES_EZ_EXP>%ZONLO%</DES_EZ_EXP>
       <LAT_EZ_EXP>%ZONLO%</LAT_EZ_EXP>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-04-21</CREATED_ON>
       <CREATED_AT>10:26:08</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000999504</NODEID>
       <DESCRIPT>Workflow completed</DESCRIPT>
       <NODETYPE>EVTG</NODETYPE>
       <MODELEMENT>E</MODELEMENT>
       <BLOCKID>0000000001</BLOCKID>
       <NEST_LEVEL>01</NEST_LEVEL>
       <VCXPOS>1</VCXPOS>
       <VCYPOS>9</VCYPOS>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-04-21</CREATED_ON>
       <CREATED_AT>10:26:08</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
       <CHANGED_BY>HQ_TTA</CHANGED_BY>
       <CHANGED_ON>2017-06-16</CHANGED_ON>
       <CHANGED_AT>14:20:38</CHANGED_AT>
       <CHANGED_RL>750</CHANGED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000999998</NODEID>
       <NODETYPE>OFF</NODETYPE>
       <MODELEMENT>O</MODELEMENT>
       <BLOCKID>0000000001</BLOCKID>
       <XOR_FLAG>X</XOR_FLAG>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-04-21</CREATED_ON>
       <CREATED_AT>10:26:08</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
      </item>
      <item>
       <WFD_ID>WS91000010</WFD_ID>
       <VERSION>0000</VERSION>
       <EXETYP>S</EXETYP>
       <NODEID>0000999999</NODEID>
       <DESCRIPT>XOR</DESCRIPT>
       <NODETYPE>END</NODETYPE>
       <MODELEMENT>O</MODELEMENT>
       <FORK_TOKEN>001</FORK_TOKEN>
       <BLOCKID>0000000001</BLOCKID>
       <NEST_LEVEL>01</NEST_LEVEL>
       <END_NODE>X</END_NODE>
       <XOR_FLAG>X</XOR_FLAG>
       <CREATED_BY>HQ_TTA</CREATED_BY>
       <CREATED_ON>2017-04-21</CREATED_ON>
       <CREATED_AT>10:26:08</CREATED_AT>
       <CREATED_RL>750</CREATED_RL>
       <CHANGED_BY>HQ_TTA</CHANGED_BY>
       <CHANGED_ON>2017-04-21</CHANGED_ON>
       <CHANGED_AT>10:26:08</CHANGED_AT>
       <CHANGED_RL>750</CHANGED_RL>
      </item>
      <item>
       <NODEID>0000999505</NODEID>
       <DESCRIPT>Error Raised in GLIF Error Handler</DESCRIPT>
       <NODETYPE>SEVT</NODETYPE>
       <MODELEMENT>E</MODELEMENT>
       <EVT_TYPE>ERRORRAISED</EVT_TYPE>
       <EVT_OTYPE>ZGLIF_ERR</EVT_OTYPE>
       <EVT_CATID>BO</EVT_CATID>
       <BLOCKID>0000000001</BLOCKID>
       <NEST_LEVEL>01</NEST_LEVEL>
       <CREATED_BY>VN00045399</CREATED_BY>
       <CREATED_ON>2021-07-25</CREATED_ON>
       <CREATED_AT>16:25:18</CREATED_AT>
       <CREATED_RL>754</CREATED_RL>
      </item>
      <item>
       <NODEID>0000999506</NODEID>
       <DESCRIPT>Workflow started</DESCRIPT>
       <NODETYPE>SGVT</NODETYPE>
       <MODELEMENT>E</MODELEMENT>
       <BLOCKID>0000000001</BLOCKID>
       <NEST_LEVEL>01</NEST_LEVEL>
       <CREATED_BY>VN00045399</CREATED_BY>
       <CREATED_ON>2021-07-25</CREATED_ON>
       <CREATED_AT>16:25:18</CREATED_AT>
       <CREATED_RL>754</CREATED_RL>
      </item>
     </steps>
     <lines>
      <item>
       <LINEID>0000000002</LINEID>
       <PRED_NODE>0000000001</PRED_NODE>
       <SUCC_NODE>0000000041</SUCC_NODE>
      </item>
      <item>
       <LINEID>0000000003</LINEID>
       <PRED_NODE>0000000041</PRED_NODE>
       <SUCC_NODE>0000000048</SUCC_NODE>
       <LCXPOS>1</LCXPOS>
       <LCYPOS>4</LCYPOS>
      </item>
      <item>
       <LINEID>0000000004</LINEID>
       <PRED_NODE>0000000041</PRED_NODE>
       <SUCC_NODE>0000000060</SUCC_NODE>
       <LCXPOS>2</LCXPOS>
       <LCYPOS>4</LCYPOS>
      </item>
      <item>
       <LINEID>0000000005</LINEID>
       <PRED_NODE>0000000042</PRED_NODE>
       <SUCC_NODE>0000999999</SUCC_NODE>
      </item>
      <item>
       <LINEID>0000000006</LINEID>
       <PRED_NODE>0000000048</PRED_NODE>
       <SUCC_NODE>0000000049</SUCC_NODE>
      </item>
      <item>
       <LINEID>0000000007</LINEID>
       <PRED_NODE>0000000049</PRED_NODE>
       <SUCC_NODE>0000000051</SUCC_NODE>
      </item>
      <item>
       <LINEID>0000000008</LINEID>
       <PRED_NODE>0000000050</PRED_NODE>
       <SUCC_NODE>0000000042</SUCC_NODE>
      </item>
      <item>
       <LINEID>0000000009</LINEID>
       <PRED_NODE>0000000051</PRED_NODE>
       <SUCC_NODE>0000000050</SUCC_NODE>
      </item>
      <item>
       <LINEID>0000000010</LINEID>
       <PRED_NODE>0000000060</PRED_NODE>
       <SUCC_NODE>0000000061</SUCC_NODE>
      </item>
      <item>
       <LINEID>0000000011</LINEID>
       <PRED_NODE>0000000061</PRED_NODE>
       <SUCC_NODE>0000000063</SUCC_NODE>
      </item>
      <item>
       <LINEID>0000000012</LINEID>
       <PRED_NODE>0000000062</PRED_NODE>
       <SUCC_NODE>0000000042</SUCC_NODE>
      </item>
      <item>
       <LINEID>0000000013</LINEID>
       <PRED_NODE>0000000063</PRED_NODE>
       <SUCC_NODE>0000000062</SUCC_NODE>
       <ASYNC>X</ASYNC>
      </item>
      <item>
       <LINEID>0000000014</LINEID>
       <PRED_NODE>0000999503</PRED_NODE>
       <SUCC_NODE>0000999504</SUCC_NODE>
      </item>
      <item>
       <LINEID>0000000015</LINEID>
       <PRED_NODE>0000999999</PRED_NODE>
       <SUCC_NODE>0000999503</SUCC_NODE>
      </item>
      <item>
       <LINEID>0000999501</LINEID>
       <PRED_NODE>0000999505</PRED_NODE>
       <SUCC_NODE>0000000001</SUCC_NODE>
      </item>
      <item>
       <LINEID>0000999502</LINEID>
       <PRED_NODE>0000999506</PRED_NODE>
       <SUCC_NODE>0000000001</SUCC_NODE>
      </item>
     </lines>
    </workflow>
   </workflow_exchange>
  </wf_definition>
 </PDWS>
 <PROG NAME="ZGLIF_ERR_BOR" CLAS="SWOP" SUBC="S" APPL="F" RMAND="000" FIXPT="X" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Program for object type ZGLIF_ERR : ZGLIF_ERR" LENGTH="45 "/>
   </language>
  </textPool>
  <source>*****           Implementation of object type ZGLIF_ERR            *****
INCLUDE &lt;object&gt;.
BEGIN_DATA OBJECT. &quot; Do not change.. DATA is generated
* only private members may be inserted into structure private
DATA:
&quot; begin of private,
&quot;   to declare private attributes remove comments and
&quot;   insert private attributes here ...
&quot; end of private,
  BEGIN OF KEY,
      INTERFACENAME LIKE ZGLIF_BATCH_STAT-INTERFACE_NAME,
      BATCHID LIKE ZGLIF_BATCH_STAT-BATCH_ID,
      CATEGORYID LIKE ZGLIF_ERR_CATEG-ID,
  END OF KEY,
      BORNAME TYPE ZGLIF_ERR_BOR_DATA-BORNAME,
      _ZGLIF_ERR_CATEG LIKE ZGLIF_ERR_CATEG.
END_DATA OBJECT. &quot; Do not change.. DATA is generated

TABLES zglif_err_categ.
*
get_table_property zglif_err_categ.
DATA subrc LIKE sy-subrc.
* Fill TABLES ZGLIF_ERR_CATEG to enable Object Manager Access to Table
* Properties
PERFORM select_table_zglif_err_categ USING subrc.
IF subrc NE 0.
  exit_object_not_found.
ENDIF.
end_property.
*
* Use Form also for other(virtual) Properties to fill TABLES
* ZGLIF_ERR_CATEG
FORM select_table_zglif_err_categ USING subrc LIKE sy-subrc.
* Select single * from ZGLIF_ERR_CATEG, if OBJECT-_ZGLIF_ERR_CATEG is
* initial
  IF object-_zglif_err_categ-mandt IS INITIAL
  AND object-_zglif_err_categ-id IS INITIAL.
    SELECT SINGLE *
        FROM zglif_err_categ CLIENT SPECIFIED
        WHERE mandt           = sy-mandt
          AND interface_name  = object-key-interfacename
          AND id              = object-key-categoryid.
    subrc = sy-subrc.
    IF subrc NE 0. EXIT. ENDIF.
    object-_zglif_err_categ = zglif_err_categ.
  ELSE.
    subrc = 0.
    zglif_err_categ = object-_zglif_err_categ.
  ENDIF.

ENDFORM.

get_property borname changing container.
&quot;human readable BOR name
DATA subrc LIKE sy-subrc.
PERFORM select_table_zglif_err_categ USING subrc. &quot;trigger db atrr read (virt attr called before db attrs)
IF subrc EQ 0.
  CONCATENATE object-key-interfacename  &apos; &apos;
              object-key-batchid        &apos; &apos;
              object-key-categoryid     &apos; &apos;
              object-_zglif_err_categ-category_description INTO object-borname RESPECTING BLANKS.
  swc_set_element container &apos;BORName&apos; object-borname.
ENDIF.
end_property.

begin_method callerrorreport changing container.
&quot; Call report GLIF: Error Monitor with correct input data
SET PARAMETER ID &apos;ZGLIF_INTERFACE&apos;    FIELD object-key-interfacename.
SET PARAMETER ID &apos;ZGLIF_BATCH&apos;        FIELD object-key-batchid.
SET PARAMETER ID &apos;ZGLIF_CATEGORY&apos;     FIELD object-key-categoryid.

CALL TRANSACTION &apos;ZGLIF_MONITOR&apos;. &quot; AND SKIP FIRST SCREEN.


&quot; CALL FUNCTION &apos;ZGLIF_SUBMIT_ERROR_MONITOR&apos;
&quot;  EXPORTING
&quot;    piv_batch    = object-key-batchid
&quot;    piv_category = object-key-categoryid.


end_method.</source>
 </PROG>
 <PROG NAME="ZGLIF_DEMO_WF_EVENT" VARCL="X" SUBC="1" RSTAT="T" RMAND="300" RLOAD="E" FIXPT="X" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="ZGLIF_DEMO_WF_EVENT" LENGTH="19 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp; Report ZGLIF_DEMO_WF_EVENT
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;---------------------------------------------------------------------*
REPORT zglif_demo_wf_event.



DATA object_type       TYPE swr_struct-object_typ.
DATA object_key        TYPE swr_struct-object_key.
DATA event             TYPE swr_struct-event.
*DATA COMMIT_WORK       TYPE SWR_STRUCT-COMMITFLAG.
*DATA EVENT_LANGUAGE    TYPE SY-LANGU.
*DATA LANGUAGE          TYPE SYLANGU.
*DATA USER              TYPE SYUNAME.
*DATA IFS_XML_CONTAINER TYPE XSTRING.
DATA return_code       TYPE sy-subrc.
DATA event_id          TYPE swr_struct-event_id.
DATA input_container   TYPE STANDARD TABLE OF swr_cont.
DATA message_lines     TYPE STANDARD TABLE OF swr_messag.
DATA message_struct    TYPE STANDARD TABLE OF swr_mstruc.

PARAMETERS: p_inter TYPE zglif_batch_stat-interface_name,
            p_batch TYPE zglif_batch_stat-batch_id,
            p_categ TYPE zglif_err_categ-id.


CONCATENATE p_inter p_batch p_categ INTO object_key RESPECTING BLANKS.
MOVE: &apos;ZGLIF_ERR&apos;     TO object_type,
      &apos;ErrorRaised&apos;   TO event.


CALL FUNCTION &apos;SAP_WAPI_CREATE_EVENT&apos;
  EXPORTING
    object_type     = object_type
    object_key      = object_key
    event           = event
*   COMMIT_WORK     = &apos;X&apos;
*   EVENT_LANGUAGE  = SY-LANGU
*   LANGUAGE        = SY-LANGU
*   USER            = SY-UNAME
*   IFS_XML_CONTAINER       = IFS_XML_CONTAINER
  IMPORTING
    return_code     = return_code
    event_id        = event_id
  TABLES
    input_container = input_container
    message_lines   = message_lines
    message_struct  = message_struct.

WRITE: / |Sy-subrc =  { sy-subrc } |.</source>
 </PROG>
 <PROG NAME="ZGLIF_ACTIVATE_TOP" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Top definitions for GLIF Activate" LENGTH="33 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include  zglif_activate_top
*&amp;---------------------------------------------------------------------*

  DATA: gs_functxt TYPE smp_dyntxt.</source>
 </PROG>
 <PROG NAME="ZGLIF_MONITOR_ALV" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" LEVL="750" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="ALV related forms for GLIF Error Monitor" LENGTH="40 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include  zglif_error_monitor_alv
*&amp;---------------------------------------------------------------------*
FORM prepare_data USING put_btch_msg TYPE zglif_btch_msg_tt CHANGING pct_output TYPE zglif_error_monitor_output_tt.
  DATA: lt_batch_status_texts   TYPE TABLE OF dd07v,
        lt_message_status_texts TYPE TABLE OF dd07v.

  &quot; Check whether we have any data and overtake them for output modification
  CHECK put_btch_msg IS NOT INITIAL.
  pct_output = CORRESPONDING #( put_btch_msg ).

  &quot; Get value for idoc statuses
  SELECT status, langua, descrp
    FROM teds2
    INTO TABLE @DATA(lt_idoc_status_texts)
    FOR ALL ENTRIES IN @pct_output
    WHERE status = @pct_output-idoc_status.

  &quot; Get values for categories
  DATA(lv_interface_name) = pct_output[ 1 ]-interface_name.
  SELECT *
    FROM zglif_err_categ
    INTO TABLE @DATA(lt_category_desc)
    WHERE interface_name  = @lv_interface_name.

  CALL FUNCTION &apos;DD_DOMVALUES_GET&apos;
    EXPORTING
      domname        = &apos;ZGLIF_BATCH_STATUS_DOM&apos;
      text           = abap_true
      langu          = sy-langu
    TABLES
      dd07v_tab      = lt_batch_status_texts
    EXCEPTIONS
      wrong_textflag = 1
      OTHERS         = 2.

  CALL FUNCTION &apos;DD_DOMVALUES_GET&apos;
    EXPORTING
      domname        = &apos;ZGLIF_MESSAGE_STATUS_DOM&apos;
      text           = abap_true
      langu          = sy-langu
    TABLES
      dd07v_tab      = lt_message_status_texts
    EXCEPTIONS
      wrong_textflag = 1
      OTHERS         = 2.

  &quot; Translate status number to human readable text
  LOOP AT pct_output ASSIGNING FIELD-SYMBOL(&lt;ls_output&gt;).

    TRY.
        &lt;ls_output&gt;-batch_status_text      = lt_batch_status_texts[ domvalue_l = &lt;ls_output&gt;-batch_status ]-ddtext.
      CATCH cx_sy_itab_line_not_found.
    ENDTRY.
    TRY.
        &lt;ls_output&gt;-message_status_text    = lt_message_status_texts[ domvalue_l = &lt;ls_output&gt;-message_status ]-ddtext.
      CATCH cx_sy_itab_line_not_found.
    ENDTRY.


    &quot; Translate Idoc status into human readable form
    TRY.
        &lt;ls_output&gt;-idoc_status_text       = lt_idoc_status_texts[ status = &lt;ls_output&gt;-idoc_status langua = sy-langu ]-descrp.
      CATCH cx_sy_itab_line_not_found.
    ENDTRY.

    &quot; Get return message text in human readable form
    DATA(ls_btch_msg) = VALUE zglif_btch_msg( put_btch_msg[ batch_id = &lt;ls_output&gt;-batch_id message_id = &lt;ls_output&gt;-message_id ] ).
    CALL FUNCTION &apos;MESSAGE_TEXT_BUILD&apos;
      EXPORTING
        msgid               = ls_btch_msg-msgid    &quot; Message ID
        msgnr               = ls_btch_msg-msgno    &quot; Number of message
        msgv1               = ls_btch_msg-msgv1    &quot; Parameter 1
        msgv2               = ls_btch_msg-msgv2    &quot; Parameter 2
        msgv3               = ls_btch_msg-msgv3    &quot; Parameter 3
        msgv4               = ls_btch_msg-msgv4    &quot; Parameter 4
      IMPORTING
        message_text_output = &lt;ls_output&gt;-return_message.    &quot; Output message text

    &quot; Get Error Category in human readable form - if possible and the description exists. If not, keep the number
    IF &lt;ls_output&gt;-category IS NOT INITIAL.

      READ TABLE lt_category_desc
      INTO DATA(ls_category_desc)
      WITH KEY interface_name = lv_interface_name
               id = &lt;ls_output&gt;-category.

      CHECK ls_category_desc-category_description IS NOT INITIAL.
      &lt;ls_output&gt;-category_text = ls_category_desc-category_description.
    ENDIF.
  ENDLOOP.

  PERFORM prepare_data_group CHANGING pct_output.

ENDFORM.

FORM prepare_data_group CHANGING pct_output TYPE zglif_error_monitor_output_tt.

  DATA: lt_output_grouped LIKE pct_output,
        ls_output_grouped LIKE LINE OF lt_output_grouped,
        lv_index          TYPE zglif_error_monitor_output-group_number VALUE 1.

  FIELD-SYMBOLS: &lt;ls_output_grouped&gt; LIKE LINE OF lt_output_grouped.

  &quot; Check grouping
  CASE gv_grouping.
    WHEN gc_group_none.       &quot; No grouping
      &quot; no grouping requested, none delivered
      EXIT.
    WHEN gc_group_batch.
      LOOP AT pct_output
        INTO ls_output_grouped
        GROUP BY (  interface_name      = ls_output_grouped-interface_name
                    batch_id            = ls_output_grouped-batch_id
                    batch_status        = ls_output_grouped-batch_status
                    batch_status_text   = ls_output_grouped-batch_status_text ) ASCENDING.

        APPEND INITIAL LINE TO lt_output_grouped ASSIGNING &lt;ls_output_grouped&gt;.
        &lt;ls_output_grouped&gt; = CORRESPONDING #( ls_output_grouped ).
        &lt;ls_output_grouped&gt;-group_number = lv_index.    &quot; Number of group - grouped entry

        &quot; clear not relevant columns
        CLEAR:  &lt;ls_output_grouped&gt;-filename,
                &lt;ls_output_grouped&gt;-idoc_number,
                &lt;ls_output_grouped&gt;-idoc_status,
                &lt;ls_output_grouped&gt;-idoc_status_text,
                &lt;ls_output_grouped&gt;-message_id,
                &lt;ls_output_grouped&gt;-message_status,
                &lt;ls_output_grouped&gt;-message_status_text,
                &lt;ls_output_grouped&gt;-return_message,
                &lt;ls_output_grouped&gt;-msgid,
                &lt;ls_output_grouped&gt;-msgno,
                &lt;ls_output_grouped&gt;-msgty,
                &lt;ls_output_grouped&gt;-msgv1,
                &lt;ls_output_grouped&gt;-msgv2,
                &lt;ls_output_grouped&gt;-msgv3,
                &lt;ls_output_grouped&gt;-msgv4,
                &lt;ls_output_grouped&gt;-category,
                &lt;ls_output_grouped&gt;-category_text,
                &lt;ls_output_grouped&gt;-message_changed_on,
                &lt;ls_output_grouped&gt;-message_changed_at,
                &lt;ls_output_grouped&gt;-message_changed_by.
        &quot; assign group ID to the members
        LOOP AT GROUP ls_output_grouped ASSIGNING FIELD-SYMBOL(&lt;ls_members_batch&gt;).
          &lt;ls_members_batch&gt;-group_number = lv_index. &quot; Number of group - members
        ENDLOOP.
        lv_index = lv_index + 1.
      ENDLOOP.
    WHEN gc_group_category.   &quot; Group by category
      LOOP AT pct_output
        INTO ls_output_grouped
        GROUP BY (  interface_name  = ls_output_grouped-interface_name
                    batch_id        = ls_output_grouped-batch_id
                    category        = ls_output_grouped-category ) ASCENDING.

        APPEND INITIAL LINE TO lt_output_grouped ASSIGNING &lt;ls_output_grouped&gt;.
        &lt;ls_output_grouped&gt; = CORRESPONDING #( ls_output_grouped ).
        &lt;ls_output_grouped&gt;-group_number = lv_index.    &quot; Number of group - grouped entry

        &quot; clear not relevant columns
        CLEAR:  &lt;ls_output_grouped&gt;-filename,
                &lt;ls_output_grouped&gt;-idoc_number,
                &lt;ls_output_grouped&gt;-idoc_status,
                &lt;ls_output_grouped&gt;-idoc_status_text,
                &lt;ls_output_grouped&gt;-message_id,
                &lt;ls_output_grouped&gt;-message_status,
                &lt;ls_output_grouped&gt;-message_status_text,
                &lt;ls_output_grouped&gt;-return_message,
                &lt;ls_output_grouped&gt;-msgid,
                &lt;ls_output_grouped&gt;-msgno,
                &lt;ls_output_grouped&gt;-msgty,
                &lt;ls_output_grouped&gt;-msgv1,
                &lt;ls_output_grouped&gt;-msgv2,
                &lt;ls_output_grouped&gt;-msgv3,
                &lt;ls_output_grouped&gt;-msgv4,
                &lt;ls_output_grouped&gt;-message_changed_on,
                &lt;ls_output_grouped&gt;-message_changed_at,
                &lt;ls_output_grouped&gt;-message_changed_by.
        &quot; assign group ID to the members
        LOOP AT GROUP ls_output_grouped ASSIGNING FIELD-SYMBOL(&lt;ls_members_category&gt;).
          &lt;ls_members_category&gt;-group_number = lv_index. &quot; Number of group - members
        ENDLOOP.
        lv_index = lv_index + 1.
      ENDLOOP.
    WHEN gc_group_message.    &quot; Group by message
      LOOP AT pct_output
        INTO ls_output_grouped
        GROUP BY (  interface_name  = ls_output_grouped-interface_name
                    batch_id        = ls_output_grouped-batch_id
                    msgty           = ls_output_grouped-msgty
                    msgid           = ls_output_grouped-msgid
                    msgno           = ls_output_grouped-msgno
                    msgv1           = ls_output_grouped-msgv1
                    msgv2           = ls_output_grouped-msgv2
                    msgv3           = ls_output_grouped-msgv3
                    msgv4           = ls_output_grouped-msgv4 ) ASCENDING.

        APPEND INITIAL LINE TO lt_output_grouped ASSIGNING &lt;ls_output_grouped&gt;.
        &lt;ls_output_grouped&gt; = CORRESPONDING #( ls_output_grouped ).
        &lt;ls_output_grouped&gt;-group_number = lv_index.    &quot; Number of group - grouped entry

        &quot; clear not relevant columns
        CLEAR:  &lt;ls_output_grouped&gt;-filename,
                &lt;ls_output_grouped&gt;-idoc_number,
                &lt;ls_output_grouped&gt;-idoc_status,
                &lt;ls_output_grouped&gt;-idoc_status_text,
                &lt;ls_output_grouped&gt;-message_id,
                &lt;ls_output_grouped&gt;-message_status,
                &lt;ls_output_grouped&gt;-message_status_text,
                &lt;ls_output_grouped&gt;-message_changed_on,
                &lt;ls_output_grouped&gt;-message_changed_at,
                &lt;ls_output_grouped&gt;-message_changed_by.
        &quot; assign group ID to the members
        LOOP AT GROUP ls_output_grouped ASSIGNING FIELD-SYMBOL(&lt;ls_members_message&gt;).
          &lt;ls_members_message&gt;-group_number = lv_index. &quot; Number of group - members
        ENDLOOP.
        lv_index = lv_index + 1.
      ENDLOOP.
    WHEN OTHERS.
      &quot; not possible
  ENDCASE.
  gt_output_all = pct_output.          &quot; save all the entries with indication of the group they belong to
  pct_output    = lt_output_grouped.    &quot; display only the grouped entries
ENDFORM.

FORM display_data   USING put_output TYPE zglif_error_monitor_output_tt.
  &quot; Display data
  IF gr_batch_msg_alv IS BOUND. &quot; # TODO: ugly solution, cl_salv-&gt;set_data dumps
    gr_batch_msg_alv-&gt;close_screen( ).
    FREE gr_batch_msg_alv.
  ENDIF.
  TRY.
      cl_salv_table=&gt;factory(
      &quot; EXPORTING
      &quot;   list_display   = IF_SALV_C_BOOL_SAP=&gt;FALSE    &quot; ALV Displayed in List Mode
      &quot;   r_container    =     &quot; Abstract Container for GUI Controls
      &quot;   container_name =
        IMPORTING
          r_salv_table   = gr_batch_msg_alv   &quot; Basis Class Simple ALV Tables
        CHANGING
          t_table        = put_output
      ).
    CATCH cx_salv_msg.
  ENDTRY.

  &quot; Functions
  DATA(lr_functions) = gr_batch_msg_alv-&gt;get_functions( ).
  PERFORM alv_set_functions CHANGING lr_functions.

  &quot; Layout and Toobar
  DATA(lr_layout) = gr_batch_msg_alv-&gt;get_layout( ).
  PERFORM alv_set_layout CHANGING lr_layout.

  SET PF-STATUS &apos;ZGLIF_MONITOR_PF&apos;.
  gr_batch_msg_alv-&gt;set_screen_status(
    pfstatus      =  &apos;ZGLIF_MONITOR_PF&apos;
    report        =  sy-repid
    set_functions = gr_batch_msg_alv-&gt;c_functions_all ).

  &quot; Columns
  DATA(lr_columns) = gr_batch_msg_alv-&gt;get_columns( ).
  PERFORM alv_set_columns CHANGING lr_columns.

  &quot; Set sorts
  DATA(lr_sorts) = gr_batch_msg_alv-&gt;get_sorts( ).
  PERFORM alv_set_sorts CHANGING lr_sorts.

  &quot; Set selections
  DATA(lr_selections) = gr_batch_msg_alv-&gt;get_selections( ).
  lr_selections-&gt;set_selection_mode( if_salv_c_selection_mode=&gt;row_column ).

  &quot; Create Event Handler
  gr_event_handler = NEW #( ).

  &quot; Get event list and register the handler
  DATA(lr_events) = gr_batch_msg_alv-&gt;get_event( ).

  SET HANDLER gr_event_handler-&gt;on_double_click FOR lr_events.
  SET HANDLER gr_event_handler-&gt;on_single_click FOR lr_events.
  SET HANDLER gr_event_handler-&gt;on_click        FOR lr_events.

  gr_batch_msg_alv-&gt;display( ).

ENDFORM.

FORM alv_set_functions CHANGING pcr_functions TYPE REF TO cl_salv_functions_list.
  pcr_functions-&gt;set_all( abap_true ).
*  pcr_functions-&gt;set_print( abap_true ).
*  pcr_functions-&gt;set_print_preview( abap_true ).
*
*  pcr_functions-&gt;set_layout_change( abap_true ).
*  pcr_functions-&gt;set_layout_load( abap_true ).
*  pcr_functions-&gt;set_layout_maintain( abap_true ).
*  pcr_functions-&gt;set_layout_save( abap_true ).
*
*  pcr_functions-&gt;set_export_folder( abap_true ).
*  pcr_functions-&gt;set_export_html( abap_true ).
*  pcr_functions-&gt;set_export_localfile( abap_true ).
*  pcr_functions-&gt;set_export_mail( abap_true ).
*  pcr_functions-&gt;set_export_send( abap_true ).
*  pcr_functions-&gt;set_export_spreadsheet( abap_true ).
*  pcr_functions-&gt;set_export_wordprocessor( abap_true ).
*  pcr_functions-&gt;set_export_xml( abap_true ).
*
*  pcr_functions-&gt;set_filter( abap_true ).
*  pcr_functions-&gt;set_filter_delete( abap_true ).
ENDFORM.

FORM alv_set_layout CHANGING pcr_layout TYPE REF TO cl_salv_layout.
  DATA: ls_layout_key TYPE salv_s_layout_key.
  ls_layout_key-report = sy-repid.
  pcr_layout-&gt;set_key( ls_layout_key ).
  pcr_layout-&gt;set_save_restriction( cl_salv_layout=&gt;restrict_none ).

  pcr_layout-&gt;set_initial_layout( gv_layout ).

ENDFORM.

FORM alv_set_columns CHANGING pcr_columns TYPE REF TO cl_salv_columns_table.
  DATA: lr_column TYPE REF TO cl_salv_column_table,
        ls_color  TYPE lvc_s_colo.

  pcr_columns-&gt;set_optimize( abap_true ).

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;GROUP_NUMBER&apos; ).
      lr_column-&gt;set_short_text( value = TEXT-038 ).
      lr_column-&gt;set_medium_text( value = TEXT-039 ).
      lr_column-&gt;set_long_text( value = TEXT-040 ).
      lr_column-&gt;set_technical( value = if_salv_c_bool_sap=&gt;true ). &quot; only internal number for grouped layouts
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;MANDT&apos; ).
      lr_column-&gt;set_visible( value = if_salv_c_bool_sap=&gt;false ).
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column     ?= pcr_columns-&gt;get_column( &apos;BATCH_ID&apos; ).
      lr_column-&gt;set_alignment( if_salv_c_alignment=&gt;right ).
      ls_color-col  = col_key.
      lr_column-&gt;set_color( ls_color ).
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;BATCH_CHANGED_ON&apos; ).
      lr_column-&gt;set_short_text( value = TEXT-026 ).
      lr_column-&gt;set_medium_text( value = TEXT-027 ).
      lr_column-&gt;set_long_text( value = TEXT-028 ).
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;BATCH_CHANGED_AT&apos; ).
      lr_column-&gt;set_short_text( value = TEXT-029 ).
      lr_column-&gt;set_medium_text( value = TEXT-030 ).
      lr_column-&gt;set_long_text( value = TEXT-031 ).
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;BATCH_CHANGED_BY&apos; ).
      lr_column-&gt;set_short_text( value = TEXT-041 ).
      lr_column-&gt;set_medium_text( value = TEXT-042 ).
      lr_column-&gt;set_long_text( value = TEXT-043 ).
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;BATCH_STATUS&apos; ).
      ls_color-col  = col_group.
      lr_column-&gt;set_color( ls_color ).
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;BATCH_STATUS_TEXT&apos; ).
      lr_column-&gt;set_short_text( value = TEXT-015 ).
      lr_column-&gt;set_medium_text( value = TEXT-016 ).
      lr_column-&gt;set_long_text( value = TEXT-016 ).
      ls_color-col  = col_group.
      lr_column-&gt;set_color( ls_color ).
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;MESSAGE_ID&apos; ).
      lr_column-&gt;set_alignment( if_salv_c_alignment=&gt;right ).
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;MESSAGE_CHANGED_ON&apos; ).
      lr_column-&gt;set_short_text( value = TEXT-032 ).
      lr_column-&gt;set_medium_text( value = TEXT-033 ).
      lr_column-&gt;set_long_text( value = TEXT-034 ).
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;MESSAGE_CHANGED_AT&apos; ).
      lr_column-&gt;set_short_text( value = TEXT-035 ).
      lr_column-&gt;set_medium_text( value = TEXT-036 ).
      lr_column-&gt;set_long_text( value = TEXT-037 ).
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;MESSAGE_CHANGED_BY&apos; ).
      lr_column-&gt;set_short_text( value = TEXT-044 ).
      lr_column-&gt;set_medium_text( value = TEXT-045 ).
      lr_column-&gt;set_long_text( value = TEXT-046 ).
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;MESSAGE_STATUS_TEXT&apos; ).
      lr_column-&gt;set_short_text( value = TEXT-018 ).
      lr_column-&gt;set_medium_text( value = TEXT-019 ).
      lr_column-&gt;set_long_text( value = TEXT-019 ).
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;IDOC_NUMBER&apos;  ).
      lr_column-&gt;set_cell_type( value = if_salv_c_cell_type=&gt;hotspot ).
    CATCH cx_salv_not_found.
    CATCH cx_salv_data_error.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;IDOC_STATUS&apos; ).
      lr_column-&gt;set_alignment( if_salv_c_alignment=&gt;right ).
    CATCH cx_salv_not_found.
  ENDTRY.

  TRY.
      lr_column ?= pcr_columns-&gt;get_column( &apos;RETURN_MESSAGE&apos; ).
      lr_column-&gt;set_short_text( value = TEXT-010 ).
      lr_column-&gt;set_medium_text( value = TEXT-011 ).
      lr_column-&gt;set_long_text( value = TEXT-011 ).
    CATCH cx_salv_not_found.
  ENDTRY.
ENDFORM.

FORM alv_set_sorts CHANGING pcr_sort TYPE REF TO cl_salv_sorts.
  TRY.
      pcr_sort-&gt;add_sort( EXPORTING columnname      = &apos;INTERFACE_NAME&apos;
                                    sequence        = if_salv_c_sort=&gt;sort_up
                                    group           = if_salv_c_sort=&gt;group_with_newpage ).
      pcr_sort-&gt;add_sort( EXPORTING columnname      = &apos;BATCH_ID&apos;
                                    sequence        = if_salv_c_sort=&gt;sort_up
                                    group           = if_salv_c_sort=&gt;group_with_newpage ).
      pcr_sort-&gt;add_sort( EXPORTING columnname      = &apos;BATCH_STATUS&apos;
                                    sequence        = if_salv_c_sort=&gt;sort_up
                                    group           = if_salv_c_sort=&gt;group_with_newpage ).
      pcr_sort-&gt;add_sort( EXPORTING columnname      = &apos;BATCH_STATUS_TEXT&apos;
                                    sequence        = if_salv_c_sort=&gt;sort_up
                                    group           = if_salv_c_sort=&gt;group_with_newpage ).
      pcr_sort-&gt;add_sort( EXPORTING columnname      = &apos;BATCH_CHANGED_ON&apos;
                                    sequence        = if_salv_c_sort=&gt;sort_up
                                    group           = if_salv_c_sort=&gt;group_with_newpage ).
      pcr_sort-&gt;add_sort( EXPORTING columnname      = &apos;BATCH_CHANGED_AT&apos;
                                    sequence        = if_salv_c_sort=&gt;sort_up
                                    group           = if_salv_c_sort=&gt;group_with_newpage ).
      pcr_sort-&gt;add_sort( EXPORTING columnname      = &apos;BATCH_CHANGED_BY&apos;
                                    sequence        = if_salv_c_sort=&gt;sort_up
                                    group           = if_salv_c_sort=&gt;group_with_newpage ).
      pcr_sort-&gt;add_sort( EXPORTING columnname      = &apos;MESSAGE_ID&apos;
                                    sequence        = if_salv_c_sort=&gt;sort_up
                                    group           = if_salv_c_sort=&gt;group_none ).

    CATCH cx_salv_not_found.    &quot;
    CATCH cx_salv_existing.    &quot;
    CATCH cx_salv_data_error.    &quot;
  ENDTRY.
ENDFORM.</source>
 </PROG>
 <PROG NAME="ZGLIF_ACTIVATE_FORMS" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Several forms used in ZGLIF_ACTIVATE" LENGTH="36 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include  zglif_activate_forms
*&amp;---------------------------------------------------------------------*
FORM fill_dropdown.
  DATA: lv_name  TYPE vrm_id VALUE &apos;PA_INTER&apos;,
        lt_value TYPE vrm_values,
        ls_value LIKE LINE OF lt_value.

  &quot; Get all active interfaces
  SELECT *
  FROM zglif_dispcust
  INTO TABLE @DATA(lt_dispcust)
  WHERE active = @abap_true.

  lt_value = VALUE #( FOR ls_dispcust IN lt_dispcust ( key = ls_dispcust-interface_name  text = ls_dispcust-interface_name ) ).

  CALL FUNCTION &apos;VRM_SET_VALUES&apos; EXPORTING id = lv_name values = lt_value.

ENDFORM.

FORM sel_screen_buttons_fill.
  gs_functxt-icon_id        = icon_table_settings.
  gs_functxt-quickinfo      = TEXT-003. &quot; Customize the behavior of Interface components
  gs_functxt-icon_text      = TEXT-002. &quot; Customization
  sscrfields-functxt_01     = gs_functxt.

  CLEAR gs_functxt.
  gs_functxt-icon_id        = icon_agent.
  gs_functxt-quickinfo      = TEXT-005. &quot; Workflow Responsibilities
  gs_functxt-icon_text      = TEXT-006. &quot; WF Responsibilities
  sscrfields-functxt_02     = gs_functxt.
ENDFORM.

FORM sel_screen_buttons_handle.
  CASE sscrfields-ucomm.
    WHEN &apos;FC01&apos;.    &quot; GLIF Customization
      CALL TRANSACTION &apos;ZGLIF_CUSTOMIZATION&apos; WITH AUTHORITY-CHECK.
    WHEN &apos;FC02&apos;.    &quot; Workflow Responsibilities customization
      DATA gv_param_id TYPE objektid VALUE &apos;91000001&apos;.
      DATA(gs_options) = VALUE ctu_params( dismode = &apos;E&apos; ).

      DATA(gt_bdc) = VALUE bdcdata_tab(
        ( program = &apos;SAPLRHUZ&apos; dynpro = &apos;0410&apos; dynbegin = &apos;X&apos; fnam = &apos;P1000-OBJID&apos; fval = gv_param_id )
        ( program = &apos;SAPLRHUZ&apos; dynpro = &apos;0410&apos; dynbegin = &apos;&apos; fnam = &apos;BDC_OKCODE&apos; fval = &apos;/00&apos; )
        ).

      CALL TRANSACTION &apos;OOCU_RESP&apos; WITH AUTHORITY-CHECK USING gt_bdc OPTIONS FROM gs_options.
    WHEN OTHERS.
  ENDCASE.
ENDFORM.

FORM show_picture.
  DATA: lr_docking         TYPE REF TO cl_gui_docking_container,
        lr_picture_control TYPE REF TO cl_gui_picture,
        lv_url             TYPE c LENGTH 256,
        lt_query           TYPE TABLE OF w3query,
        lt_html            TYPE TABLE OF w3html,
        lv_return          TYPE  w3param-ret_code,
        lv_content_type    TYPE  w3param-cont_type,
        lv_content_length  TYPE  w3param-cont_len,
        lt_pic_data        TYPE w3mime OCCURS 0,
        lv_pic_size        TYPE i.

  CHECK lr_picture_control IS NOT BOUND.
  CREATE OBJECT lr_picture_control EXPORTING parent = lr_docking.
  CHECK sy-subrc = 0.
*  CALL METHOD picture_control_1-&gt;set_3d_border
*    EXPORTING
*      border = 5.
  CALL METHOD lr_picture_control-&gt;set_display_mode
    EXPORTING
      display_mode = cl_gui_picture=&gt;display_mode_stretch.
  CALL METHOD lr_picture_control-&gt;set_position
    EXPORTING
      height = 100
      left   = 1000
      top    = 0
      width  = 500.

* Change POSITION and SIZE above and VALUE below
  IF lv_url IS INITIAL.
    lt_query = VALUE #( ( name = &apos;_OBJECT_ID&apos; value = &apos;ZHCI_LOGO&apos; ) ).

    CALL FUNCTION &apos;WWW_GET_MIME_OBJECT&apos;
      TABLES
        query_string        = lt_query
        html                = lt_html
        mime                = lt_pic_data
      CHANGING
        return_code         = lv_return
        content_type        = lv_content_type
        content_length      = lv_content_length
      EXCEPTIONS
        object_not_found    = 1
        parameter_not_found = 2
        OTHERS              = 3.
    IF sy-subrc &lt;&gt; 0.
*      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
    CALL FUNCTION &apos;DP_CREATE_URL&apos;
      EXPORTING
        type     = &apos;image&apos;
        subtype  = cndp_sap_tab_unknown
        size     = lv_pic_size
        lifetime = cndp_lifetime_transaction
      TABLES
        data     = lt_pic_data
      CHANGING
        url      = lv_url
      EXCEPTIONS
        OTHERS   = 1.
  ENDIF.
  CALL METHOD lr_picture_control-&gt;load_picture_from_url
    EXPORTING
      url = lv_url.
*Syntax for URL
*url = &apos;file://D:\corp-gbanerji\pickut\cartoon_184.gif&apos;.
*url = &apos;http://l.yimg.com/a/i/ww/beta/y3.gif&apos;.
ENDFORM.                    &quot;show_picture</source>
 </PROG>
 <PROG NAME="ZGLIF_ACTIVATE" VARCL="X" SUBC="1" RSTAT="K" RMAND="300" RLOAD="E" FIXPT="X" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="I" KEY="001" ENTRY="Please choose the desired step:" LENGTH="66 "/>
    <textElement ID="I" KEY="002" ENTRY="Customization" LENGTH="23 "/>
    <textElement ID="I" KEY="003" ENTRY="Customize the behavior of Interface components" LENGTH="92 "/>
    <textElement ID="I" KEY="004" ENTRY="Trigger Interface Customization transaction" LENGTH="86 "/>
    <textElement ID="I" KEY="005" ENTRY="WF Responsibilities" LENGTH="29 "/>
    <textElement ID="I" KEY="006" ENTRY="Workflow Responsibilities" LENGTH="50 "/>
    <textElement ID="I" KEY="010" ENTRY="Select the GLIF Interface" LENGTH="50 "/>
    <textElement ID="I" KEY="011" ENTRY="You have to pick the GLIF Interface to run" LENGTH="84 "/>
    <textElement ID="R" ENTRY="Activate GLIF: Global Interface Framework" LENGTH="41 "/>
    <textElement ID="S" KEY="PA_ALL" ENTRY="        Perform all actions from above" LENGTH="38 "/>
    <textElement ID="S" KEY="PA_CNVRT" ENTRY="        Step 2: Convert" LENGTH="23 "/>
    <textElement ID="S" KEY="PA_ERROR" ENTRY="        Step 4: Process Errors" LENGTH="30 "/>
    <textElement ID="S" KEY="PA_FEED" ENTRY="        Step 1: Feed" LENGTH="20 "/>
    <textElement ID="S" KEY="PA_INTER" ENTRY="D       ." LENGTH="22 "/>
    <textElement ID="S" KEY="PA_PRCSS" ENTRY="        Step 3: Process converted data" LENGTH="38 "/>
    <textElement ID="S" KEY="S_BATCH" ENTRY="D       ." LENGTH="9 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp; Transaction code       : ZGLIF_ACTIVATE
*&amp; Program Name           : ZGLIF_ACTIVATE
*&amp; Created on             : 2017-03-14
*&amp; Functional Consultant  : Tomas Talpa (HQ_TTA)
*&amp; Developer              : Katerina Streitova (HQ_KST)
*&amp;---------------------------------------------------------------------*
*&amp; Purpose: Run the GLIF - General Ledger Interface - based on the
*&amp; customization on this client.
*&amp; Step 1: Feeding
*&amp; Step 2: Converting
*&amp; Step 3: Processing
*&amp;---------------------------------------------------------------------*
*&amp; Change Record (new entries to the bottom)
*&amp; Date        Developer Transport    Descriptions
*&amp; ==========  ========  ===========  =================================*
*&amp; 2017-03-14  HQ_KST    SDXK900028   Initial Development
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Report ZGLIF_ACTIVATE
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;---------------------------------------------------------------------*
REPORT zglif_activate.

TYPE-POOLS      vrm.
TABLES:         sscrfields, zglif_batch_stat.

INCLUDE:        zglif_activate_top,
                zglif_activate_forms.

*&amp;---------------------------------------------------------------------*
*&amp; SELECTION-SCREEN
*&amp;---------------------------------------------------------------------*
SELECTION-SCREEN: FUNCTION KEY 1.   &quot; for button Customization
SELECTION-SCREEN: FUNCTION KEY 2.   &quot; for button WF Responsibilities

SELECTION-SCREEN BEGIN OF BLOCK b01 WITH FRAME TITLE TEXT-001.
PARAMETERS: pa_inter TYPE zglif_interface_name AS LISTBOX VISIBLE LENGTH 16 OBLIGATORY MEMORY ID zglif_interface.
SELECT-OPTIONS s_batch FOR zglif_batch_stat-batch_id NO INTERVALS MEMORY ID zglif_batch.
SELECTION-SCREEN END OF BLOCK b01.

SELECTION-SCREEN BEGIN OF BLOCK b02 WITH FRAME TITLE TEXT-001.
PARAMETERS: pa_feed  RADIOBUTTON GROUP rb1,
            pa_cnvrt RADIOBUTTON GROUP rb1,
            pa_prcss RADIOBUTTON GROUP rb1,
            pa_error RADIOBUTTON GROUP rb1.
SELECTION-SCREEN ULINE /1(79).
PARAMETERS: pa_all   RADIOBUTTON GROUP rb1 DEFAULT &apos;X&apos;.
SELECTION-SCREEN END OF BLOCK b02.

*&amp;---------------------------------------------------------------------*
*&amp; INITIALIZATION
*&amp;---------------------------------------------------------------------*
INITIALIZATION.
  PERFORM sel_screen_buttons_fill.

*&amp;---------------------------------------------------------------------*
*&amp; AT SELECTION-SCREEN OUTPUT
*&amp;---------------------------------------------------------------------*
AT SELECTION-SCREEN OUTPUT.
  PERFORM fill_dropdown.

  &quot; Show picture only when NOT in batch job. Dumps otherwise.
  IF sy-batch NE abap_true AND sy-calld NE abap_true.
    PERFORM show_picture.
  ENDIF.

*&amp;---------------------------------------------------------------------*
*&amp; AT SELECTION-SCREEN OUTPUT
*&amp;---------------------------------------------------------------------*
AT SELECTION-SCREEN.
  IF sy-calld NE abap_true.
    PERFORM sel_screen_buttons_handle.
  ENDIF.


*&amp;---------------------------------------------------------------------*
*&amp; START-OF-SELECTION
*&amp;---------------------------------------------------------------------*
START-OF-SELECTION.
  &quot; Get the Dispatcher - initialize, find customization, create hierarchies
  DATA(gr_dispatcher) = zglif_dispatcher=&gt;get_dispatcher( pa_inter ).
  CHECK gr_dispatcher-&gt;mv_abort = abap_false.

  &quot; Perform the selected actions
  IF pa_feed = abap_true.
    &quot; Start the Feeding process based on the customization
    gr_dispatcher-&gt;feed( ).
  ELSEIF pa_cnvrt = abap_true.
    &quot; Convert the input data from external system to SAP-recognizable format, e.g. file to IDoc
    gr_dispatcher-&gt;convert( ).
  ELSEIF pa_prcss = abap_true.
    &quot; Start the processing of converted file, e.g. SAP IDoc
    gr_dispatcher-&gt;process( ).
  ELSEIF pa_error = abap_true.
    &quot; Start the error handling of processed files, e.g. SAP IDoc errors
    gr_dispatcher-&gt;process_errors( ).
  ELSEIF pa_all = abap_true.
    &quot; Start the Feeding process based on the customization
    gr_dispatcher-&gt;feed( ).
    &quot; Convert the input data from external system to SAP-recognizable format, e.g. file to IDoc
    gr_dispatcher-&gt;convert( ).
*    &quot; Start the processing of converted file, e.g. SAP IDoc
    gr_dispatcher-&gt;process( ).
    &quot; Start the error handling of processed files, e.g. SAP IDoc errors
    gr_dispatcher-&gt;process_errors( ).
  ENDIF.</source>
 </PROG>
 <PROG NAME="ZGLIF_MONITOR" VARCL="X" DBAPL="S" DBNA="D$" SUBC="1" RMAND="300" RLOAD="E" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="GLIF Monitor" LENGTH="12 "/>
    <textElement ID="I" KEY="001" ENTRY="Select the data to work with" LENGTH="66 "/>
    <textElement ID="I" KEY="002" ENTRY="Choose operation" LENGTH="26 "/>
    <textElement ID="I" KEY="003" ENTRY="Additional criteria" LENGTH="42 "/>
    <textElement ID="I" KEY="005" ENTRY="Layout settings" LENGTH="26 "/>
    <textElement ID="I" KEY="006" ENTRY="Group entries by:" LENGTH="27 "/>
    <textElement ID="I" KEY="007" ENTRY="Batch Criteria" LENGTH="20 "/>
    <textElement ID="I" KEY="008" ENTRY="Message Criteria" LENGTH="20 "/>
    <textElement ID="I" KEY="010" ENTRY="Ret. Msg." LENGTH="10 "/>
    <textElement ID="I" KEY="011" ENTRY="Return Message" LENGTH="20 "/>
    <textElement ID="I" KEY="015" ENTRY="Batch Sts." LENGTH="10 "/>
    <textElement ID="I" KEY="016" ENTRY="Batch Status" LENGTH="20 "/>
    <textElement ID="I" KEY="018" ENTRY="Mess. Sts." LENGTH="10 "/>
    <textElement ID="I" KEY="019" ENTRY="Message Status" LENGTH="20 "/>
    <textElement ID="I" KEY="020" ENTRY="Confirm status change" LENGTH="42 "/>
    <textElement ID="I" KEY="021" ENTRY="Please note that whole Batch and alll Messages it contains will be canceled. Do you want to continue?" LENGTH="132 "/>
    <textElement ID="I" KEY="022" ENTRY="Yes" LENGTH="18 "/>
    <textElement ID="I" KEY="023" ENTRY="No" LENGTH="15 "/>
    <textElement ID="I" KEY="024" ENTRY="Please select lines using the selection box on the left side" LENGTH="120 "/>
    <textElement ID="I" KEY="025" ENTRY="Status &apos;Canceled&apos; cannot be changed." LENGTH="72 "/>
    <textElement ID="I" KEY="026" ENTRY="BtchChngOn" LENGTH="10 "/>
    <textElement ID="I" KEY="027" ENTRY="Batch Changed On" LENGTH="20 "/>
    <textElement ID="I" KEY="028" ENTRY="Batch Changed On" LENGTH="40 "/>
    <textElement ID="I" KEY="029" ENTRY="BtchChngAt" LENGTH="10 "/>
    <textElement ID="I" KEY="030" ENTRY="Batch Changed At" LENGTH="20 "/>
    <textElement ID="I" KEY="031" ENTRY="Batch Changed At" LENGTH="40 "/>
    <textElement ID="I" KEY="032" ENTRY="MsgChngOn" LENGTH="10 "/>
    <textElement ID="I" KEY="033" ENTRY="Message Changed On" LENGTH="20 "/>
    <textElement ID="I" KEY="034" ENTRY="Message Changed On" LENGTH="40 "/>
    <textElement ID="I" KEY="035" ENTRY="MsgChngAt" LENGTH="10 "/>
    <textElement ID="I" KEY="036" ENTRY="Message Changed At" LENGTH="20 "/>
    <textElement ID="I" KEY="037" ENTRY="Message Changed At" LENGTH="40 "/>
    <textElement ID="I" KEY="038" ENTRY="Group Nr." LENGTH="10 "/>
    <textElement ID="I" KEY="039" ENTRY="Monitor Group Number" LENGTH="20 "/>
    <textElement ID="I" KEY="040" ENTRY="GLIF Monitor Group Number" LENGTH="40 "/>
    <textElement ID="I" KEY="041" ENTRY="BtchChgBy" LENGTH="10 "/>
    <textElement ID="I" KEY="042" ENTRY="Batch Changed By" LENGTH="20 "/>
    <textElement ID="I" KEY="043" ENTRY="Batch Changed By" LENGTH="40 "/>
    <textElement ID="I" KEY="044" ENTRY="MsgChgBy" LENGTH="10 "/>
    <textElement ID="I" KEY="045" ENTRY="Message Changed By" LENGTH="20 "/>
    <textElement ID="I" KEY="046" ENTRY="Message Changed By" LENGTH="40 "/>
    <textElement ID="I" KEY="047" ENTRY='Status &quot;Corrected&quot; can be set only to Messages that are &quot;Being Corrected&quot;.' LENGTH="132 "/>
    <textElement ID="S" KEY="PA_GRBA" ENTRY="        Batch ID" LENGTH="16 "/>
    <textElement ID="S" KEY="PA_GRCA" ENTRY="        Error Category" LENGTH="22 "/>
    <textElement ID="S" KEY="PA_GRME" ENTRY="        Return Message fields" LENGTH="29 "/>
    <textElement ID="S" KEY="PA_GRNO" ENTRY="        No grouping" LENGTH="19 "/>
    <textElement ID="S" KEY="PA_INTER" ENTRY="D       ." LENGTH="22 "/>
    <textElement ID="S" KEY="PA_LAYT" ENTRY="D       ." LENGTH="14 "/>
    <textElement ID="S" KEY="SO_BATCH" ENTRY="D       ." LENGTH="16 "/>
    <textElement ID="S" KEY="SO_BSTAT" ENTRY="D       ." LENGTH="20 "/>
    <textElement ID="S" KEY="SO_CATE" ENTRY="D       ." LENGTH="19 "/>
    <textElement ID="S" KEY="SO_DATE" ENTRY="D       ." LENGTH="18 "/>
    <textElement ID="S" KEY="SO_MESS" ENTRY="D       ." LENGTH="18 "/>
    <textElement ID="S" KEY="SO_MSGID" ENTRY="D       ." LENGTH="31 "/>
    <textElement ID="S" KEY="SO_MSGNO" ENTRY="D       ." LENGTH="29 "/>
    <textElement ID="S" KEY="SO_MSGTY" ENTRY="D       ." LENGTH="27 "/>
    <textElement ID="S" KEY="SO_MSGV1" ENTRY="        Return Message Parameter 1" LENGTH="34 "/>
    <textElement ID="S" KEY="SO_MSGV2" ENTRY="        Return Message Parameter 2" LENGTH="34 "/>
    <textElement ID="S" KEY="SO_MSGV3" ENTRY="        Return Message Parameter 3" LENGTH="34 "/>
    <textElement ID="S" KEY="SO_MSGV4" ENTRY="        Return Message Parameter 4" LENGTH="34 "/>
    <textElement ID="S" KEY="SO_MSTAT" ENTRY="D       ." LENGTH="22 "/>
    <textElement ID="S" KEY="SO_TIME" ENTRY="D       ." LENGTH="18 "/>
    <textElement ID="S" KEY="SO_USER" ENTRY="D       ." LENGTH="23 "/>
   </language>
  </textPool>
  <pfstatus>
   <pfstatus_sta CODE="ZGLIF_MONITOR_PF" MODAL="D" ACTCODE="000001" PFKCODE="000001" BUTCODE="0001" INT_NOTE="Standard for General List Output in Fullscreen Grid"/>
   <pfstatus_fun CODE="%ML" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Session" PATH="S"/>
   <pfstatus_fun CODE="%PC" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_EXPORT" ICON_ID="@49@" FUN_TEXT="Local File..." PATH="L"/>
   <pfstatus_fun CODE="%SC" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SEARCH" ICON_ID="@13@" FUN_TEXT="Search" PATH="E"/>
   <pfstatus_fun CODE="%SC+" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SEARCH_NEXT" ICON_ID="@4E@" FUN_TEXT="Find Next"/>
   <pfstatus_fun CODE="%SL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_MAIL" ICON_ID="@1S@" FUN_TEXT="Mail Recipient" PATH="M"/>
   <pfstatus_fun CODE="&amp;ABC" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_ABC" ICON_ID="@DL@" FUN_TEXT="ABC Analysis" PATH="A"/>
   <pfstatus_fun CODE="&amp;ALL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SELECT_ALL" ICON_ID="@4B@" FUN_TEXT="Select All" PATH="S"/>
   <pfstatus_fun CODE="&amp;AQW" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_WORD_PROCESSING" ICON_ID="@DK@" FUN_TEXT="Word Processing..." PATH="W"/>
   <pfstatus_fun CODE="&amp;AUF" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Define Totals Drilldown..." PATH="S"/>
   <pfstatus_fun CODE="&amp;AVE" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Saving..." PATH="S"/>
   <pfstatus_fun CODE="&amp;AVE" TEXTNO="002" TEXT_TYPE="S" TEXT_NAME="ICON_ALV_VARIANT_SAVE" ICON_ID="@DN@" FUN_TEXT="Save Layout..."/>
   <pfstatus_fun CODE="&amp;AVR" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Mean Value" PATH="M"/>
   <pfstatus_fun CODE="&amp;CDF" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Unfreeze Columns" PATH="U"/>
   <pfstatus_fun CODE="&amp;CFI" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Freeze to Column" PATH="F"/>
   <pfstatus_fun CODE="&amp;COUNT" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Count" PATH="C"/>
   <pfstatus_fun CODE="&amp;CRB" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_TOTAL_LEFT" ICON_ID="@0B@" FUN_TEXT="First Column"/>
   <pfstatus_fun CODE="&amp;CRDESIG" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Crystal Reports Designer" PATH="C"/>
   <pfstatus_fun CODE="&amp;CRE" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_TOTAL_RIGHT" ICON_ID="@0C@" FUN_TEXT="Last Column"/>
   <pfstatus_fun CODE="&amp;CRL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_COLUMN_LEFT" ICON_ID="@0D@" FUN_TEXT="Column Left"/>
   <pfstatus_fun CODE="&amp;CRR" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_COLUMN_RIGHT" ICON_ID="@0E@" FUN_TEXT="Column Right"/>
   <pfstatus_fun CODE="&amp;EB9" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_TABLE_SETTINGS" ICON_ID="@36@" FUN_TEXT="Call Up Report..." PATH="B"/>
   <pfstatus_fun CODE="&amp;ELP" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SYSTEM_HELP" ICON_ID="@35@" FUN_TEXT="Help"/>
   <pfstatus_fun CODE="&amp;ERW" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Administration..." PATH="A"/>
   <pfstatus_fun CODE="&amp;ETA" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SELECT_DETAIL" ICON_ID="@16@" FUN_TEXT="Details"/>
   <pfstatus_fun CODE="&amp;F03" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Back" PATH="Z"/>
   <pfstatus_fun CODE="&amp;F12" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_CANCEL" ICON_ID="@0W@" FUN_TEXT="Cancel" PATH="A"/>
   <pfstatus_fun CODE="&amp;F15" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Exit" PATH="X"/>
   <pfstatus_fun CODE="&amp;F4" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Possible Entries"/>
   <pfstatus_fun CODE="&amp;GRAPH" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_GRAPHICS" ICON_ID="@0N@" FUN_TEXT="Graphic" PATH="G"/>
   <pfstatus_fun CODE="&amp;IC1" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SELECT_DETAIL" ICON_ID="@16@" FUN_TEXT="Choose"/>
   <pfstatus_fun CODE="&amp;ILD" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Delete Filter" PATH="L"/>
   <pfstatus_fun CODE="&amp;ILT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_FILTER" ICON_ID="@4G@" FUN_TEXT="Set Filter" PATH="F"/>
   <pfstatus_fun CODE="&amp;INFO" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_INFORMATION" ICON_ID="@0S@" FUN_TEXT="Information"/>
   <pfstatus_fun CODE="&amp;MAX" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Maximum" PATH="A"/>
   <pfstatus_fun CODE="&amp;MIN" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Minimum" PATH="I"/>
   <pfstatus_fun CODE="&amp;OAD" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Choose..." PATH="H"/>
   <pfstatus_fun CODE="&amp;OAD" TEXTNO="002" TEXT_TYPE="S" TEXT_NAME="ICON_ALV_VARIANT_CHOOSE" ICON_ID="@DM@" FUN_TEXT="Select Layout"/>
   <pfstatus_fun CODE="&amp;ODN" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SORT_DOWN" ICON_ID="@3F@" FUN_TEXT="Sort in Descending Order" PATH="O"/>
   <pfstatus_fun CODE="&amp;OL0" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_ALV_VARIANTS" ICON_ID="@LZ@" FUN_TEXT="Change Layout..."/>
   <pfstatus_fun CODE="&amp;OLX" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_VARIANTS" ICON_ID="@0R@" FUN_TEXT="Change..." PATH="C"/>
   <pfstatus_fun CODE="&amp;OPT" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Optimize Width" PATH="P"/>
   <pfstatus_fun CODE="&amp;OUP" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SORT_UP" ICON_ID="@3E@" FUN_TEXT="Sort in Ascending Order" PATH="I"/>
   <pfstatus_fun CODE="&amp;RNT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_PRINT" ICON_ID="@0X@" FUN_TEXT="Print" PATH="P"/>
   <pfstatus_fun CODE="&amp;RNT_PREV" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_LAYOUT_CONTROL" ICON_ID="@3G@" FUN_TEXT="Print Preview" PATH="R"/>
   <pfstatus_fun CODE="&amp;SAL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_DESELECT_ALL" ICON_ID="@4D@" FUN_TEXT="Deselect All" PATH="D"/>
   <pfstatus_fun CODE="&amp;SUM" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_INTERMEDIATE_SUM" ICON_ID="@5V@" FUN_TEXT="Subtotals" PATH="T"/>
   <pfstatus_fun CODE="&amp;UMC" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_SUM" ICON_ID="@3Z@" FUN_TEXT="Total" PATH="T"/>
   <pfstatus_fun CODE="&amp;VCRYSTAL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_REPORT_TEMPLATE" ICON_ID="@QH@" FUN_TEXT="Crystal Reports" PATH="C"/>
   <pfstatus_fun CODE="&amp;VCRYSTRAL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_REPORT_TEMPLATE" ICON_ID="@QH@" FUN_TEXT="Crystal Reports Designer"/>
   <pfstatus_fun CODE="&amp;VEXCEL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_XLS" ICON_ID="@J2@" FUN_TEXT="Microsoft Excel" PATH="M"/>
   <pfstatus_fun CODE="&amp;VGRID" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_LIST" ICON_ID="@3W@" FUN_TEXT="SAP List Viewer" PATH="S"/>
   <pfstatus_fun CODE="&amp;VLOTUS" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_LOTUS" ICON_ID="@JD@" FUN_TEXT="Lotus 1-2-3" PATH="L"/>
   <pfstatus_fun CODE="&amp;XXL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_XXL" ICON_ID="@DJ@" FUN_TEXT="Spreadsheet" PATH="A"/>
   <pfstatus_fun CODE="BACK" TEXTNO="001" TEXT_TYPE="S" FUN_TEXT="Back" PATH="B"/>
   <pfstatus_fun CODE="CANCEL" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_CANCEL" ICON_ID="@0W@" FUN_TEXT="Set status Canceled" ICON_TEXT="Cancel" INFO_TEXT="Set status Canceled"/>
   <pfstatus_fun CODE="CORRECT" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_COMPLETE" ICON_ID="@DF@" FUN_TEXT="Set status Corrected" ICON_TEXT="Correct" INFO_TEXT="Set status Corrected"/>
   <pfstatus_fun CODE="CORRECTED" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_COMPLETE" ICON_ID="@DF@" FUN_TEXT="Set status Corrected" ICON_TEXT="Correct" INFO_TEXT="Set status Corrected"/>
   <pfstatus_fun CODE="MYFUNCTION" TEXTNO="001" TEXT_TYPE="S" TEXT_NAME="ICON_COMPLETE" ICON_ID="@DF@" FUN_TEXT="Set status Corrected" ICON_TEXT="Corrected" INFO_TEXT="Set status Corrected"/>
   <pfstatus_men CODE="000001" NO="01" REF_TYPE="F" REF_CODE="&amp;RNT_PREV" REF_NO="001"/>
   <pfstatus_men CODE="000001" NO="02" REF_TYPE="F" REF_CODE="&amp;RNT" REF_NO="001"/>
   <pfstatus_men CODE="000001" NO="03" REF_TYPE="S"/>
   <pfstatus_men CODE="000001" NO="04" REF_TYPE="M" REF_CODE="000002"/>
   <pfstatus_men CODE="000001" NO="05" REF_TYPE="M" REF_CODE="000003"/>
   <pfstatus_men CODE="000001" NO="06" REF_TYPE="S"/>
   <pfstatus_men CODE="000001" NO="07" REF_TYPE="F" REF_CODE="&amp;F15" REF_NO="001"/>
   <pfstatus_men CODE="000002" NO="01" REF_TYPE="F" REF_CODE="&amp;AQW" REF_NO="001"/>
   <pfstatus_men CODE="000002" NO="02" REF_TYPE="F" REF_CODE="&amp;XXL" REF_NO="001"/>
   <pfstatus_men CODE="000002" NO="03" REF_TYPE="F" REF_CODE="%PC" REF_NO="001"/>
   <pfstatus_men CODE="000003" NO="01" REF_TYPE="F" REF_CODE="%SL" REF_NO="001"/>
   <pfstatus_men CODE="000003" NO="02" REF_TYPE="F" REF_CODE="%ML" REF_NO="001"/>
   <pfstatus_men CODE="000004" NO="01" REF_TYPE="F" REF_CODE="&amp;ALL" REF_NO="001"/>
   <pfstatus_men CODE="000004" NO="02" REF_TYPE="F" REF_CODE="&amp;SAL" REF_NO="001"/>
   <pfstatus_men CODE="000004" NO="03" REF_TYPE="S"/>
   <pfstatus_men CODE="000004" NO="04" REF_TYPE="F" REF_CODE="&amp;ILT" REF_NO="001"/>
   <pfstatus_men CODE="000004" NO="05" REF_TYPE="F" REF_CODE="&amp;ILD" REF_NO="001"/>
   <pfstatus_men CODE="000004" NO="06" REF_TYPE="S"/>
   <pfstatus_men CODE="000004" NO="07" REF_TYPE="F" REF_CODE="&amp;OUP" REF_NO="001"/>
   <pfstatus_men CODE="000004" NO="08" REF_TYPE="F" REF_CODE="&amp;ODN" REF_NO="001"/>
   <pfstatus_men CODE="000004" NO="09" REF_TYPE="S"/>
   <pfstatus_men CODE="000004" NO="10" REF_TYPE="M" REF_CODE="000005"/>
   <pfstatus_men CODE="000004" NO="11" REF_TYPE="F" REF_CODE="&amp;SUM" REF_NO="001"/>
   <pfstatus_men CODE="000004" NO="12" REF_TYPE="S"/>
   <pfstatus_men CODE="000004" NO="13" REF_TYPE="F" REF_CODE="%SC" REF_NO="001"/>
   <pfstatus_men CODE="000004" NO="14" REF_TYPE="S"/>
   <pfstatus_men CODE="000004" NO="15" REF_TYPE="F" REF_CODE="&amp;F12" REF_NO="001"/>
   <pfstatus_men CODE="000005" NO="01" REF_TYPE="F" REF_CODE="&amp;UMC" REF_NO="001"/>
   <pfstatus_men CODE="000005" NO="02" REF_TYPE="F" REF_CODE="&amp;AVR" REF_NO="001"/>
   <pfstatus_men CODE="000005" NO="03" REF_TYPE="F" REF_CODE="&amp;MIN" REF_NO="001"/>
   <pfstatus_men CODE="000005" NO="04" REF_TYPE="F" REF_CODE="&amp;MAX" REF_NO="001"/>
   <pfstatus_men CODE="000005" NO="05" REF_TYPE="F" REF_CODE="&amp;COUNT" REF_NO="001"/>
   <pfstatus_men CODE="000006" NO="01" REF_TYPE="F" REF_CODE="BACK" REF_NO="001"/>
   <pfstatus_men CODE="000007" NO="01" REF_TYPE="M" REF_CODE="000008"/>
   <pfstatus_men CODE="000007" NO="02" REF_TYPE="M" REF_CODE="000009"/>
   <pfstatus_men CODE="000007" NO="03" REF_TYPE="F" REF_CODE="&amp;AUF" REF_NO="001"/>
   <pfstatus_men CODE="000008" NO="01" REF_TYPE="F" REF_CODE="&amp;OLX" REF_NO="001"/>
   <pfstatus_men CODE="000008" NO="02" REF_TYPE="F" REF_CODE="&amp;OAD" REF_NO="001"/>
   <pfstatus_men CODE="000008" NO="03" REF_TYPE="S"/>
   <pfstatus_men CODE="000008" NO="04" REF_TYPE="F" REF_CODE="&amp;AVE" REF_NO="001"/>
   <pfstatus_men CODE="000008" NO="05" REF_TYPE="S"/>
   <pfstatus_men CODE="000008" NO="06" REF_TYPE="F" REF_CODE="&amp;ERW" REF_NO="001"/>
   <pfstatus_men CODE="000009" NO="01" REF_TYPE="F" REF_CODE="&amp;OPT" REF_NO="001"/>
   <pfstatus_men CODE="000009" NO="02" REF_TYPE="S"/>
   <pfstatus_men CODE="000009" NO="03" REF_TYPE="F" REF_CODE="&amp;CFI" REF_NO="001"/>
   <pfstatus_men CODE="000009" NO="04" REF_TYPE="F" REF_CODE="&amp;CDF" REF_NO="001"/>
   <pfstatus_mtx CODE="000001" TEXT_TYPE="S" TEXT="List" PATH="L" INT_NOTE="SALV_TABLE_STATUS List"/>
   <pfstatus_mtx CODE="000002" TEXT_TYPE="S" TEXT="Export" PATH="E" INT_NOTE="STANDARD Save"/>
   <pfstatus_mtx CODE="000003" TEXT_TYPE="S" TEXT="Send To" PATH="S"/>
   <pfstatus_mtx CODE="000004" TEXT_TYPE="S" TEXT="Edit" PATH="E" INT_NOTE="STANDARD"/>
   <pfstatus_mtx CODE="000005" TEXT_TYPE="S" TEXT="Calculate" PATH="C"/>
   <pfstatus_mtx CODE="000006" TEXT_TYPE="S" TEXT="Goto" PATH="G" INT_NOTE="Standard Supplement"/>
   <pfstatus_mtx CODE="000007" TEXT_TYPE="S" TEXT="Settings" PATH="S" INT_NOTE="SALV_TABLE_STATUS"/>
   <pfstatus_mtx CODE="000008" TEXT_TYPE="S" TEXT="Layout" PATH="A" INT_NOTE="Sub STANDARD"/>
   <pfstatus_mtx CODE="000009" TEXT_TYPE="S" TEXT="Columns" PATH="C"/>
   <pfstatus_act CODE="000001" NO="01" MENUCODE="000001"/>
   <pfstatus_act CODE="000001" NO="02" MENUCODE="000004"/>
   <pfstatus_act CODE="000001" NO="03" MENUCODE="000006"/>
   <pfstatus_act CODE="000001" NO="04" MENUCODE="000007"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="01" PFNO="39"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="02" PFNO="S"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="03" PFNO="05"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="04" PFNO="06"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="05" PFNO="S"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="06" PFNO="28"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="07" PFNO="40"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="08" PFNO="29"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="09" PFNO="S"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="10" PFNO="30"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="11" PFNO="42"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="12" PFNO="S"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="13" PFNO="46"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="14" PFNO="S"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="15" PFNO="32"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="16" PFNO="33"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="17" PFNO="34"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="18" PFNO="S"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="19" PFNO="08"/>
   <pfstatus_but PFK_CODE="000001" CODE="0001" NO="20" PFNO="09"/>
   <pfstatus_pfk CODE="000001" PFNO="01" FUNCODE="&amp;ELP" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="02" FUNCODE="&amp;IC1" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="03" FUNCODE="&amp;F03" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="04" FUNCODE="&amp;F4" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="05" FUNCODE="&amp;ALL" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="06" FUNCODE="&amp;SAL" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="08" FUNCODE="CORRECT" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="09" FUNCODE="CANCEL" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="12" FUNCODE="&amp;F12" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="15" FUNCODE="&amp;F15" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="18" FUNCODE="&amp;CRB" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="19" FUNCODE="&amp;CRE" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="21" FUNCODE="&amp;XXL" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="23" FUNCODE="&amp;VCRYSTRAL" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="24" FUNCODE="&amp;VCRYSTAL" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="25" FUNCODE="&amp;ABC" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="26" FUNCODE="&amp;CRL" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="27" FUNCODE="&amp;CRR" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="28" FUNCODE="&amp;OUP" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="29" FUNCODE="&amp;ILT" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="30" FUNCODE="&amp;UMC" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="31" FUNCODE="%SL" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="32" FUNCODE="&amp;OL0" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="33" FUNCODE="&amp;OAD" FUNNO="002"/>
   <pfstatus_pfk CODE="000001" PFNO="34" FUNCODE="&amp;AVE" FUNNO="002"/>
   <pfstatus_pfk CODE="000001" PFNO="36" FUNCODE="&amp;INFO" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="37" FUNCODE="&amp;EB9" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="38" FUNCODE="&amp;VLOTUS" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="39" FUNCODE="&amp;ETA" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="40" FUNCODE="&amp;ODN" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="41" FUNCODE="&amp;VGRID" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="42" FUNCODE="&amp;SUM" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="43" FUNCODE="&amp;VEXCEL" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="44" FUNCODE="&amp;AQW" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="45" FUNCODE="%PC" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="46" FUNCODE="&amp;RNT_PREV" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="47" FUNCODE="&amp;GRAPH" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="48" FUNCODE="&amp;CRDESIG" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="71" FUNCODE="%SC" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="84" FUNCODE="%SC+" FUNNO="001"/>
   <pfstatus_pfk CODE="000001" PFNO="86" FUNCODE="&amp;RNT" FUNNO="001"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="%CH"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="%ML"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="%PC"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="%SC"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="%SC+"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="%SL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;ABC"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;ALL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;AQW"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;AUF"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;AVE"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;AVR"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;BS"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;BS+"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;BS-"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;CDF"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;CFI"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;COUNT"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;CRB"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;CRBATCH"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;CRDESIG"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;CRE"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;CRL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;CRR"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;CRYSTAL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;DATA_SAVE"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;DAU"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;DOF"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;DON"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;EB3"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;EB9"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;ELP"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;ERW"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;ETA"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;F03"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;F12"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;F15"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;F4"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;GRAPH"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;IC1"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;ILD"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;ILT"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;INFO"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;KOM"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;LFO"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;LIS"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;MAX"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;MIN"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;NFO"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;NTE"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;OAD"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;ODN"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;OL0"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;OLX"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;OMP"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;OPT"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;OUP"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;REFRESH"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;RNT"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;RNT_PREV"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;SAL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;SAVE"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;SUM"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;UMC"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;URL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;VCRYSTAL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;VCRYSTRAL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;VEXCEL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;VGRID"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;VLOTUS"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;XML"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;XPA"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="&amp;XXL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="BAC1"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="BACK"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="BEB1"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="BEB2"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="BEB3"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="BEB9"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="BEBN"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="CANCEL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="COL0"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="COLX"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="CORRECT"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="CORRECTED"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="DETA"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="DRUK"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="DSAL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="ENTE"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="EXIT"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="EXPA"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="FILD"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="FILT"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="GET_SEL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="GLIS"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="HELP"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="INFO"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="KOMP"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="MYFUNCTION"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="P+"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="P++"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="P-"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="P--"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="PF09"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="PF13"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="PIC1"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="PICK"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="PRI"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="PRIN"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="PRNT"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="RW"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SALL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SAUF"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SAVE"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SCRB"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SCRE"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SCRL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SCRR"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SET_CELL"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SET_COLS"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SET_ROWS"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SKOM"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SODN"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SOUP"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="SUMC"/>
   <pfstatus_set STATUS="ZGLIF_MONITOR_PF" FUNCTION="ZSUM"/>
   <pfstatus_doc OBJ_TYPE="A" OBJ_CODE="000001" MODAL="D" INT_NOTE="Menu Bar"/>
   <pfstatus_doc OBJ_TYPE="P" OBJ_CODE="000001" MODAL="D" NORM="X" INT_NOTE="Standard Maximum Interaction"/>
   <pfstatus_doc OBJ_TYPE="B" OBJ_CODE="000001" SUB_CODE="0001" INT_NOTE="Application Toolbar"/>
  </pfstatus>
  <source>*&amp;---------------------------------------------------------------------*
*&amp; Transaction code       : ZGLIF_ERROR_MONITOR
*&amp; Program Name           : ZGLIF_ERROR_MONITOR
*&amp; Created on             : 2017-04-12
*&amp; Functional Consultant  : Tomas Talpa (HQ_TTA)
*&amp; Developer              : Katerina Streitova (HQ_KST)
*&amp;---------------------------------------------------------------------*
*&amp; Purpose: Show/Maintain Errors in GLIF
*&amp; Option 1: Display
*&amp; Option 2: Set status Corrected
*&amp; Option 3: Set status Cancel
*&amp;---------------------------------------------------------------------*
*&amp; Change Record (new entries to the bottom)
*&amp; Date        Developer Transport    Descriptions
*&amp; ==========  ========  ===========  =================================*
*&amp; 2017-04-12  HQ_KST    SDXK900028   Initial Development
*&amp;---------------------------------------------------------------------*
*&amp;---------------------------------------------------------------------*
*&amp; Report ZGLIF_ERROR_MONITOR
*&amp;---------------------------------------------------------------------*
*&amp;
*&amp;---------------------------------------------------------------------*
REPORT zglif_monitor.

INCLUDE:    zglif_monitor_top,
            zglif_monitor_selscreen,
            zglif_monitor_picture,
            zglif_monitor_handler,
            zglif_monitor_alv,
            &lt;color&gt;.

*---------------------------------------------------------------------*
* SELECTION-SCREEN
*---------------------------------------------------------------------*
TABLES: zglif_batch_stat,
        zglif_mess_stat,
        zglif_errorcust.

SELECTION-SCREEN BEGIN OF BLOCK b01 WITH FRAME TITLE TEXT-001.
      SELECTION-SCREEN BEGIN OF BLOCK b11 WITH FRAME TITLE TEXT-007.
      PARAMETERS:     pa_inter    TYPE zglif_interface_name AS LISTBOX VISIBLE LENGTH 16 OBLIGATORY MEMORY ID zglif_interface.
      SELECT-OPTIONS: so_batch    FOR zglif_batch_stat-batch_id MEMORY ID zglif_batch,
                      so_bstat    FOR zglif_batch_stat-batch_status NO INTERVALS.
      SELECTION-SCREEN END OF BLOCK b11.

      SELECTION-SCREEN BEGIN OF BLOCK b12 WITH FRAME TITLE TEXT-008.
      SELECT-OPTIONS: so_mess     FOR zglif_mess_stat-message_id,
                      so_mstat    FOR zglif_mess_stat-message_status NO INTERVALS,
                      so_cate     FOR zglif_errorcust-category MEMORY ID zglif_category,
                      so_date     FOR zglif_mess_stat-message_changed_on,
                      so_time     FOR zglif_mess_stat-message_changed_at,
                      so_user     FOR zglif_mess_stat-message_changed_by.
      SELECTION-SCREEN END OF BLOCK b12.
SELECTION-SCREEN END OF BLOCK b01.

SELECTION-SCREEN BEGIN OF BLOCK b02 WITH FRAME TITLE TEXT-003.
SELECT-OPTIONS: so_msgty    FOR zglif_mess_stat-msgty,
                so_msgid    FOR zglif_mess_stat-msgid,
                so_msgno    FOR zglif_mess_stat-msgno,
                so_msgv1    FOR zglif_mess_stat-msgv1,
                so_msgv2    FOR zglif_mess_stat-msgv2,
                so_msgv3    FOR zglif_mess_stat-msgv3,
                so_msgv4    FOR zglif_mess_stat-msgv4.
SELECTION-SCREEN END OF BLOCK b02.
*
SELECTION-SCREEN BEGIN OF BLOCK b03 WITH FRAME TITLE TEXT-002.
*PARAMETERS: pa_disp RADIOBUTTON GROUP rb1 DEFAULT &apos;X&apos;.
*            pa_corr RADIOBUTTON GROUP rb1,
*            pa_canc RADIOBUTTON GROUP rb1.
SELECTION-SCREEN END OF BLOCK b03.

SELECTION-SCREEN BEGIN OF BLOCK b04 WITH FRAME TITLE TEXT-005.
SELECTION-SCREEN COMMENT /1(50) TEXT-006.
PARAMETERS: pa_grno RADIOBUTTON GROUP rb2 USER-COMMAND grp DEFAULT &apos;X&apos;,
            pa_grba RADIOBUTTON GROUP rb2,
            pa_grca RADIOBUTTON GROUP rb2,
            pa_grme RADIOBUTTON GROUP rb2.
PARAMETERS: pa_layt TYPE slis_vari.
SELECTION-SCREEN END OF BLOCK b04.

*&amp;---------------------------------------------------------------------*
*&amp; AT SELECTION-SCREEN OUTPUT
*&amp;---------------------------------------------------------------------*
AT SELECTION-SCREEN OUTPUT.

  &quot; Fill in possible Interface values and select default one in order for the AT SELSCR OUTPUT to work
  PERFORM fill_dropdown CHANGING gv_default_layout.
  pa_inter = gv_default_layout-key.

  &quot; Show company logo
  PERFORM show_picture CHANGING gr_docking gr_picture_control.

  &quot; Reset the value for performed activity to make sure there is no accidental status change
*  IF pa_disp &lt;&gt; &apos;X&apos;.
**    pa_corr = &apos;&apos;.
**    pa_canc = &apos;&apos;.
*    pa_disp = &apos;X&apos;.
*  ENDIF.

  &quot; Set predefined layout value based on the grouping - pick the best fit
  IF pa_grno = abap_true.
    pa_layt = &apos;/GLIF_GRNO&apos;.
  ELSEIF pa_grba = abap_true.
    pa_layt = &apos;/GLIF_GRBA&apos;.
  ELSEIF pa_grca = abap_true.
    pa_layt = &apos;/GLIF_GRCAT&apos;.
  ELSEIF pa_grme = abap_true.
    pa_layt = &apos;/GLIF_GRRET&apos;.
  ELSE.
    CLEAR pa_layt.
  ENDIF.

*&amp;---------------------------------------------------------------------*
*&amp; AT SELECTION-SCREEN ON VALUE-REQUEST
*&amp;---------------------------------------------------------------------*
AT SELECTION-SCREEN ON VALUE-REQUEST FOR pa_layt.
  PERFORM select_layout CHANGING pa_layt.

*---------------------------------------------------------------------*
* START-OF-SELECTION
*---------------------------------------------------------------------*
START-OF-SELECTION.
  &quot; Delete picture
  PERFORM delete_picture USING gr_picture_control.

  &quot; Select based on selection screen setup
  SELECT *
  FROM zglif_btch_msg
  INTO TABLE gt_btch_msg
  WHERE interface_name      =   pa_inter
    AND batch_id            IN  so_batch
    AND batch_status        IN  so_bstat
    AND message_id          IN  so_mess
    AND message_status      IN  so_mstat
    AND category            IN  so_cate
    AND msgty               IN  so_msgty
    AND msgid               IN  so_msgid
    AND msgno               IN  so_msgno
    AND msgv1               IN  so_msgv1
    AND msgv2               IN  so_msgv2
    AND msgv3               IN  so_msgv3
    AND msgv4               IN  so_msgv4
    AND message_changed_on  IN  so_date
    AND message_changed_at  IN  so_time
    AND message_changed_by  IN  so_user.

  IF pa_grno        = abap_true.
    gv_grouping     = gc_group_none.
  ELSEIF pa_grba    = abap_true.
    gv_grouping     = gc_group_batch.
  ELSEIF pa_grca    = abap_true.
    gv_grouping     = gc_group_category.
  ELSEIF pa_grme    = abap_true.
    gv_grouping     = gc_group_message.
  ENDIF.

  gv_layout = pa_layt.

*  IF pa_disp = abap_true.
  PERFORM prepare_data    USING       gt_btch_msg
                          CHANGING    gt_output.
  PERFORM display_data    USING       gt_output.
*  ELSE.
  &quot; Set the desired status
*    IF pa_corr = abap_true.
*      gv_status = zglif_dispatcher=&gt;gc_50_corrected.
*    ELSEIF pa_canc = abap_true.
*      DATA lv_answer TYPE c LENGTH 1.
*      CALL FUNCTION &apos;POPUP_TO_CONFIRM&apos;
*        EXPORTING
*          titlebar       = TEXT-020    &quot; Title of dialog box
*          text_question  = TEXT-021    &quot; Question text in dialog box
*          text_button_1  = TEXT-022    &quot; Text on the first pushbutton
*          text_button_2  = TEXT-023    &quot; Text on the second pushbutton
*        IMPORTING
*          answer         = lv_answer    &quot; Return values: &apos;1&apos;, &apos;2&apos;, &apos;A&apos;
*        EXCEPTIONS
*          text_not_found = 1
*          OTHERS         = 2.
*
*      IF sy-subrc &lt;&gt; 0.
**         MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
**                    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.  &quot; #TODO: application log
*      ENDIF.
*
*      IF lv_answer = 1.
*        gv_status = zglif_dispatcher=&gt;gc_99_canceled.
*      ELSEIF lv_answer = 2.
*        EXIT.
*      ENDIF.
*
*    ENDIF.

*    &quot; Prepare tables for update to DB and perform the update
*    DATA: lt_batch TYPE zglif_batch_stat_tt.
*
*    &quot; Batch table
*    LOOP AT gt_btch_msg
*        INTO DATA(ls_btch_msg)
*        GROUP BY (
*            interface_name  = ls_btch_msg-interface_name
*            batch_id        = ls_btch_msg-batch_id )
*        ASCENDING WITHOUT MEMBERS REFERENCE INTO DATA(lr_batch).
*      APPEND INITIAL LINE TO lt_batch ASSIGNING FIELD-SYMBOL(&lt;ls_batch&gt;).
*      &lt;ls_batch&gt;-interface_name     = lr_batch-&gt;interface_name.
*      &lt;ls_batch&gt;-batch_id           = lr_batch-&gt;batch_id.
*    ENDLOOP.
*
*    &quot; Message table
*    IF gv_status = zglif_dispatcher=&gt;gc_99_canceled.    &quot; Special case: get ALL messages of touched Batches, not only the selected Messages
*      SELECT *
*        FROM zglif_btch_msg
*        INTO TABLE gt_btch_msg
*        FOR ALL ENTRIES IN lt_batch
*        WHERE interface_name    = lt_batch-interface_name
*          AND batch_id          = lt_batch-batch_id.
*    ENDIF.
*    DATA(lt_mess) = VALUE zglif_mess_stat_tt( FOR ls_msg IN gt_btch_msg (
*        interface_name  = ls_msg-interface_name
*        batch_id        = ls_msg-batch_id
*        message_id      = ls_msg-message_id
*        category        = ls_msg-category ) ).
*
*    zglif_utility_storage=&gt;set_message_status_to_db(
*      EXPORTING
*        pit_message = lt_mess     &quot; GLIF: Message status table
*        piv_status  = gv_status   &quot; Status to be set
*    ).
*
*    zglif_utility_storage=&gt;update_batch_status_to_db(
*      CHANGING
*        pct_batch = lt_batch    &quot; GLIF: Batch status table
*    ).
*
*    &quot; Raise event for ending workflows
*    DATA:
*      lv_object_type     TYPE swr_struct-object_typ VALUE &apos;ZGLIF_ERR&apos;,
*      lv_object_key      TYPE swr_struct-object_key,
*      lv_event_corr      TYPE swr_struct-event VALUE &apos;ErrorCorrected&apos;,
*      lv_event_canc      TYPE swr_struct-event VALUE &apos;BatchCancelled&apos;,
*      lv_return_code     TYPE sy-subrc,
*      lv_event_id        TYPE swr_struct-event_id,
*      lt_input_container TYPE STANDARD TABLE OF swr_cont,
*      lt_message_lines   TYPE STANDARD TABLE OF swr_messag,
*      lt_message_struct  TYPE STANDARD TABLE OF swr_mstruc.
*
*    CASE gv_status.
*      WHEN zglif_dispatcher=&gt;gc_50_corrected.
*        &quot; before raising the event for workflow end we have to check that there are no other messages of the given category
*        SELECT interface_name, batch_id, message_id, message_status, category
*        FROM zglif_mess_stat
*        INTO TABLE @DATA(lt_mess_check)
*        FOR ALL ENTRIES IN @lt_mess
*        WHERE   interface_name  = @lt_mess-interface_name
*          AND   batch_id        = @lt_mess-batch_id
*          AND   category        = @lt_mess-category AND (
*                message_status  = @zglif_dispatcher=&gt;gc_01_ftp_error
*           OR   message_status  = @zglif_dispatcher=&gt;gc_11_conversion_error
*           OR   message_status  = @zglif_dispatcher=&gt;gc_21_test_processing_fail
*           OR   message_status  = @zglif_dispatcher=&gt;gc_31_processing_fail
*           OR   message_status  = @zglif_dispatcher=&gt;gc_51_being_corrected
*           OR   message_status  = @zglif_dispatcher=&gt;gc_52_workflow_not_started
*           OR   message_status  = @zglif_dispatcher=&gt;gc_99_canceled ).
*
*        LOOP AT lt_mess
*            INTO DATA(ls_mess_corr)
*            GROUP BY (  interface_name = ls_mess_corr-interface_name
*                        batch_id       = ls_mess_corr-batch_id
*                        category       = ls_mess_corr-category ).
*
*          IF NOT line_exists( lt_mess_check[
*                                interface_name  = ls_mess_corr-interface_name
*                                batch_id        = ls_mess_corr-batch_id
*                                category        = ls_mess_corr-category ] ).
*            CLEAR: lv_object_key.
*            CONCATENATE ls_mess_corr-interface_name ls_mess_corr-batch_id  ls_mess_corr-category INTO lv_object_key RESPECTING BLANKS.
*
*            CALL FUNCTION &apos;SAP_WAPI_CREATE_EVENT&apos;
*              EXPORTING
*                object_type     = lv_object_type
*                object_key      = lv_object_key
*                event           = lv_event_corr
**               COMMIT_WORK     = &apos;X&apos;
**               EVENT_LANGUAGE  = SY-LANGU
**               LANGUAGE        = SY-LANGU
**               USER            = SY-UNAME
**               IFS_XML_CONTAINER       = IFS_XML_CONTAINER
*              IMPORTING
*                return_code     = lv_return_code
*                event_id        = lv_event_id
*              TABLES
*                input_container = lt_input_container
*                message_lines   = lt_message_lines
*                message_struct  = lt_message_struct.
*
*            IF sy-subrc = 0.
*              &quot; #TODO: application log that the batch and all its messages were canceled
*            ELSE.
*              &quot; #TODO: application log that the batch and all its messages were NOT cancelled
*            ENDIF.
*          ENDIF.
*
*        ENDLOOP.
*
*
*      WHEN zglif_dispatcher=&gt;gc_99_canceled.
*        &quot; with status Canceled for one message, we are canceling all the Messages in the touched Batch
*        LOOP AT lt_mess
*            INTO DATA(ls_mess_canc)
*            GROUP BY (  interface_name = ls_mess_canc-interface_name
*                        batch_id       = ls_mess_canc-batch_id
*                        category       = ls_mess_canc-category ).
*
*          CLEAR: lv_object_key.
*          CONCATENATE ls_mess_canc-interface_name ls_mess_canc-batch_id  ls_mess_canc-category INTO lv_object_key RESPECTING BLANKS.
*
*          CALL FUNCTION &apos;SAP_WAPI_CREATE_EVENT&apos;
*            EXPORTING
*              object_type     = lv_object_type
*              object_key      = lv_object_key
*              event           = lv_event_canc
**             COMMIT_WORK     = &apos;X&apos;
**             EVENT_LANGUAGE  = SY-LANGU
**             LANGUAGE        = SY-LANGU
**             USER            = SY-UNAME
**             IFS_XML_CONTAINER       = IFS_XML_CONTAINER
*            IMPORTING
*              return_code     = lv_return_code
*              event_id        = lv_event_id
*            TABLES
*              input_container = lt_input_container
*              message_lines   = lt_message_lines
*              message_struct  = lt_message_struct.
*
*          IF sy-subrc = 0.
*            &quot; #TODO: application log that the batch and all its messages were canceled
*          ELSE.
*            &quot; #TODO: application log that the batch and all its messages were NOT cancelled
*          ENDIF.
*
*        ENDLOOP.
*
*      WHEN OTHERS.
*        &quot; no other status possible in this program currently
*    ENDCASE.
*
*    &quot; Get only the data selected based on the selection screen (statuses changed now - would not work with the same select)
*    DATA(lt_selection) = VALUE zglif_error_monitor_output_tt( FOR ls_selection IN gt_btch_msg (
*        interface_name  = ls_selection-interface_name
*        batch_id        = ls_selection-batch_id
*        message_id      = ls_selection-message_id ) ).
*    CLEAR gt_btch_msg.
*
*    &quot; Get the modified data for display
*    CLEAR gt_btch_msg.
*    SELECT *
*    FROM zglif_btch_msg
*    INTO TABLE gt_btch_msg
*    FOR ALL ENTRIES IN lt_selection
*    WHERE interface_name    = lt_selection-interface_name
*      AND batch_id          = lt_selection-batch_id
*      AND message_id        = lt_selection-message_id.
*
*    &quot; Display data
*    PERFORM prepare_data    USING       gt_btch_msg
*                            CHANGING    gt_output.
*
*    PERFORM display_data    USING       gt_output.
*  ENDIF.</source>
 </PROG>
 <PROG NAME="ZGLIF_MONITOR_HANDLER" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Handle events of GLIF Montor ALV" LENGTH="32 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include  zglif_monitor_handler
*&amp;---------------------------------------------------------------------*
CLASS lcl_event_handler DEFINITION.
  PUBLIC SECTION.
    METHODS:
      &quot; long message when double-clicking
      on_double_click FOR EVENT double_click OF cl_salv_events_table
        IMPORTING row column,

      &quot; hotspot click for IDoc number
      on_single_click FOR EVENT link_click OF cl_salv_events_table
        IMPORTING row column,

      on_click FOR EVENT added_function OF cl_salv_events_table
        IMPORTING e_salv_function.

  PRIVATE SECTION.
    METHODS:
      get_selected_entries  IMPORTING pit_selected_alv_rows TYPE salv_t_row
                                      piv_status            TYPE zglif_message_status
                            EXPORTING pet_batch_for_change  TYPE zglif_batch_stat_tt
                                      pet_mess_for_change   TYPE zglif_mess_stat_tt,

      expand_grouped_entries    IMPORTING pit_selected_entries TYPE zglif_error_monitor_output_tt
                                EXPORTING pet_expanded_entries TYPE zglif_error_monitor_output_tt,

      set_status IMPORTING pit_batch_for_change TYPE zglif_batch_stat_tt
                           pit_mess_for_change  TYPE zglif_mess_stat_tt
                           piv_status           TYPE zglif_message_status.
ENDCLASS.                    &quot;lcl_handle_events DEFINITION

CLASS lcl_event_handler IMPLEMENTATION.

  METHOD on_double_click.
    READ TABLE gt_output INTO DATA(ls_output) INDEX row.
    CASE column.
      WHEN &apos;RETURN_MESSAGE&apos;.
        CHECK ls_output-return_message IS NOT INITIAL.
        CALL FUNCTION &apos;MASS_MESSAGE_SHOW_LONGTEXT&apos;
          EXPORTING
            sprsl     = sy-langu
            arbgb     = ls_output-msgid
            msgnr     = ls_output-msgno
            msgv1     = ls_output-msgv1
            msgv2     = ls_output-msgv2
            msgv3     = ls_output-msgv3
            msgv4     = ls_output-msgv4
          EXCEPTIONS
            not_found = 1
            OTHERS    = 2.
      WHEN OTHERS.
    ENDCASE.
    IF sy-subrc &lt;&gt; 0.
* MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4. #TODO: application log
    ENDIF.
  ENDMETHOD.                    &quot;on_double_click

  METHOD on_single_click.
    READ TABLE gt_output INTO DATA(ls_output) INDEX row.
    CASE column.
      WHEN &apos;IDOC_NUMBER&apos;.
        CHECK ls_output-idoc_number IS NOT INITIAL.
        CALL FUNCTION &apos;BAPI_IDOCAPPL_DISPLAY&apos;
          EXPORTING
            idocnumber = ls_output-idoc_number    &quot; IDoc number
*  IMPORTING
*           return     =     &quot; Return parameter, not needed now #TODO: application log
          .
      WHEN OTHERS.
        MESSAGE &apos;kuk single&apos; TYPE &apos;I&apos;.
    ENDCASE.
  ENDMETHOD.                    &quot;on_single_click

  METHOD on_click.
    DATA: lt_selected_data TYPE TABLE OF zglif_error_monitor_output,
          lv_status        TYPE zglif_message_status.

    &quot; Get the selected lines
    DATA: lr_selections TYPE REF TO cl_salv_selections.
    lr_selections = gr_batch_msg_alv-&gt;get_selections( ).
    DATA(lt_selected_alv_rows) = lr_selections-&gt;get_selected_rows( ).

    IF lt_selected_alv_rows IS INITIAL.
      MESSAGE TEXT-024 TYPE &apos;I&apos;.    &quot; inform the user, that no lines have been selected
      EXIT.
    ENDIF.

    &quot; Prepare Status to be set to selected entries
    CASE e_salv_function.
      WHEN gc_correct.
        lv_status = zglif_dispatcher=&gt;gc_50_corrected.
      WHEN gc_cancel.
        DATA lv_answer TYPE c LENGTH 1.
        CALL FUNCTION &apos;POPUP_TO_CONFIRM&apos;
          EXPORTING
            titlebar       = TEXT-020    &quot; Title of dialog box
            text_question  = TEXT-021    &quot; Question text in dialog box
            text_button_1  = TEXT-022    &quot; Text on the first pushbutton
            text_button_2  = TEXT-023    &quot; Text on the second pushbutton
          IMPORTING
            answer         = lv_answer    &quot; Return values: &apos;1&apos;, &apos;2&apos;, &apos;A&apos;
          EXCEPTIONS
            text_not_found = 1
            OTHERS         = 2.
        IF sy-subrc &lt;&gt; 0.
*         MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*                    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.  &quot; #TODO: application log
        ENDIF.

        IF lv_answer = &apos;1&apos;.
          lv_status = zglif_dispatcher=&gt;gc_99_canceled.
        ELSEIF lv_answer = &apos;2&apos; OR lv_answer = &apos;A&apos;.
          EXIT.
        ENDIF.
      WHEN OTHERS.
    ENDCASE.

    &quot; Get data that was selected, widen the data selection based on the desired status and set the status
    CHECK lv_status IS NOT INITIAL.
    get_selected_entries(   EXPORTING pit_selected_alv_rows = lt_selected_alv_rows
                                      piv_status            = lv_status
                            IMPORTING pet_batch_for_change  = DATA(lt_batch_for_change)
                                      pet_mess_for_change   = DATA(lt_mess_for_change) ).

    set_status(
        pit_batch_for_change = lt_batch_for_change
        pit_mess_for_change  = lt_mess_for_change
        piv_status           = lv_status ).
  ENDMETHOD.

  METHOD get_selected_entries.
    DATA: lt_marked_lines       TYPE TABLE OF zglif_error_monitor_output,
          lt_messages_to_change TYPE TABLE OF zglif_error_monitor_output.

    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    &quot; Get the selected lines&apos; data based on the row numbers
    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    LOOP AT pit_selected_alv_rows INTO DATA(ls_selected_row).
      APPEND INITIAL LINE TO lt_marked_lines ASSIGNING FIELD-SYMBOL(&lt;ls_marked_lines&gt;).
      &lt;ls_marked_lines&gt; = CORRESPONDING #( gt_output[ ls_selected_row ] ).
    ENDLOOP.

    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    &quot; Check the grouping - single entry represents multiple entries
    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    expand_grouped_entries( EXPORTING pit_selected_entries = lt_marked_lines
                            IMPORTING pet_expanded_entries = lt_marked_lines ).

    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    &quot; Prepare tables for update to DB and perform the update
    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    &quot; Batch table - Batches that are going to have the Status updated
    LOOP AT lt_marked_lines
        INTO DATA(ls_marked_lines)
        GROUP BY (
            interface_name  = ls_marked_lines-interface_name
            batch_id        = ls_marked_lines-batch_id )
        ASCENDING WITHOUT MEMBERS REFERENCE INTO DATA(lr_batch).
      APPEND INITIAL LINE TO pet_batch_for_change ASSIGNING FIELD-SYMBOL(&lt;ls_batch&gt;).
      &lt;ls_batch&gt;-interface_name     = lr_batch-&gt;interface_name.
      &lt;ls_batch&gt;-batch_id           = lr_batch-&gt;batch_id.
    ENDLOOP.

    &quot; Message table - Messages that are going to have their Status changed
    IF piv_status = zglif_dispatcher=&gt;gc_99_canceled.
      &quot; Special case: get ALL messages of touched Batches, not only the selected Messages
      SELECT *
         FROM zglif_btch_msg
         INTO TABLE @DATA(lt_messages_to_cancel)
         FOR ALL ENTRIES IN @pet_batch_for_change
         WHERE interface_name    = @pet_batch_for_change-interface_name
           AND batch_id          = @pet_batch_for_change-batch_id.
      lt_messages_to_change = CORRESPONDING #( lt_messages_to_cancel ).
    ELSE.
      &quot; Do not widen the Messages list, take only what was selected
      lt_messages_to_change = lt_marked_lines.
    ENDIF.
    pet_mess_for_change = VALUE zglif_mess_stat_tt( FOR ls_msg IN lt_messages_to_change (
        interface_name  = ls_msg-interface_name
        batch_id        = ls_msg-batch_id
        message_id      = ls_msg-message_id
        message_status  = ls_msg-message_status
        category        = ls_msg-category ) ).

  ENDMETHOD.

  METHOD set_status.

    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    &quot; Data check
    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    CHECK pit_batch_for_change IS NOT INITIAL AND pit_mess_for_change IS NOT INITIAL.
    IF piv_status = zglif_dispatcher=&gt;gc_50_corrected.
      &quot; Is there any Message that is Canceled and the user wants set Status Corrected?
      IF line_exists( pit_mess_for_change[ message_status = zglif_dispatcher=&gt;gc_99_canceled ] ).
        MESSAGE TEXT-025 TYPE &apos;I&apos;.
        EXIT.
      ENDIF.

      &quot; Check that we have ONLY Messages with status Being corrected selected
      LOOP AT pit_mess_for_change
        INTO DATA(ls_not_being_corrected)
        WHERE   message_status = zglif_dispatcher=&gt;gc_00_downloaded
           OR   message_status = zglif_dispatcher=&gt;gc_01_download_error
           OR   message_status = zglif_dispatcher=&gt;gc_10_converted
           OR   message_status = zglif_dispatcher=&gt;gc_11_conversion_error
           OR   message_status = zglif_dispatcher=&gt;gc_20_test_processing_ok
           OR   message_status = zglif_dispatcher=&gt;gc_21_test_processing_fail
           OR   message_status = zglif_dispatcher=&gt;gc_30_processing_ok
           OR   message_status = zglif_dispatcher=&gt;gc_31_processing_fail
         &quot; or   message_status = zglif_dispatcher=&gt;gc_50_corrected
           OR   message_status = zglif_dispatcher=&gt;gc_52_workflow_not_started
           OR   message_status = zglif_dispatcher=&gt;gc_98_canceled_zero_values.
        MESSAGE TEXT-047 TYPE &apos;I&apos;.
        DATA(lv_return) = abap_true.
        EXIT.
      ENDLOOP.

      CHECK lv_return = abap_false.

    ENDIF.

    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    &quot; Set status for Messages and update status of Batch
    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    DATA(lt_batch_for_change) = CORRESPONDING zglif_batch_stat_tt( pit_batch_for_change ).

    zglif_utility_storage=&gt;set_message_status_to_db(
      EXPORTING
        pit_message = pit_mess_for_change     &quot; GLIF: Message status table
        piv_status  = piv_status ).           &quot; Status to be set

    zglif_utility_storage=&gt;update_batch_status_to_db(
      CHANGING
        pct_batch = lt_batch_for_change ).   &quot; GLIF: Batch status table

    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    &quot; Raise event for ending workflows
    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    DATA:
      lv_object_type     TYPE swr_struct-object_typ VALUE &apos;ZGLIF_ERR&apos;,
      lv_object_key      TYPE swr_struct-object_key,
      lv_event_corr      TYPE swr_struct-event VALUE &apos;ErrorCorrected&apos;,
      lv_event_canc      TYPE swr_struct-event VALUE &apos;BatchCancelled&apos;,
      lv_return_code     TYPE sy-subrc,
      lv_event_id        TYPE swr_struct-event_id,
      lt_input_container TYPE STANDARD TABLE OF swr_cont,
      lt_message_lines   TYPE STANDARD TABLE OF swr_messag,
      lt_message_struct  TYPE STANDARD TABLE OF swr_mstruc.

    CASE piv_status.
      WHEN zglif_dispatcher=&gt;gc_50_corrected.
        &quot; before raising the event for workflow end we have to check that there are no other messages of the given category
        SELECT interface_name, batch_id, message_id, message_status, category
        FROM zglif_mess_stat
        INTO TABLE @DATA(lt_mess_check)
        FOR ALL ENTRIES IN @pit_mess_for_change
        WHERE   interface_name  = @pit_mess_for_change-interface_name
          AND   batch_id        = @pit_mess_for_change-batch_id
          AND   category        = @pit_mess_for_change-category AND (
                message_status  = @zglif_dispatcher=&gt;gc_01_download_error
           OR   message_status  = @zglif_dispatcher=&gt;gc_11_conversion_error
           OR   message_status  = @zglif_dispatcher=&gt;gc_21_test_processing_fail
           OR   message_status  = @zglif_dispatcher=&gt;gc_31_processing_fail
           OR   message_status  = @zglif_dispatcher=&gt;gc_51_being_corrected
           OR   message_status  = @zglif_dispatcher=&gt;gc_52_workflow_not_started
           OR   message_status  = @zglif_dispatcher=&gt;gc_99_canceled ).

        LOOP AT pit_mess_for_change
            INTO DATA(ls_mess_corr)
            GROUP BY (  interface_name = ls_mess_corr-interface_name
                        batch_id       = ls_mess_corr-batch_id
                        category       = ls_mess_corr-category ).

          IF NOT line_exists( lt_mess_check[
                                interface_name  = ls_mess_corr-interface_name
                                batch_id        = ls_mess_corr-batch_id
                                category        = ls_mess_corr-category ] ).
            CLEAR: lv_object_key.
            CONCATENATE ls_mess_corr-interface_name ls_mess_corr-batch_id  ls_mess_corr-category INTO lv_object_key RESPECTING BLANKS.

            CALL FUNCTION &apos;SAP_WAPI_CREATE_EVENT&apos;
              EXPORTING
                object_type     = lv_object_type
                object_key      = lv_object_key
                event           = lv_event_corr
*               COMMIT_WORK     = &apos;X&apos;
*               EVENT_LANGUAGE  = SY-LANGU
*               LANGUAGE        = SY-LANGU
*               USER            = SY-UNAME
*               IFS_XML_CONTAINER       = IFS_XML_CONTAINER
              IMPORTING
                return_code     = lv_return_code
                event_id        = lv_event_id
              TABLES
                input_container = lt_input_container
                message_lines   = lt_message_lines
                message_struct  = lt_message_struct.

            IF sy-subrc = 0.
              &quot; #TODO: application log that the batch and all its messages were canceled
            ELSE.
              &quot; #TODO: application log that the batch and all its messages were NOT cancelled
            ENDIF.
          ENDIF.

        ENDLOOP.


      WHEN zglif_dispatcher=&gt;gc_99_canceled.
        &quot; with status Canceled for one message, we are canceling all the Messages in the touched Batch
        LOOP AT pit_mess_for_change
            INTO DATA(ls_mess_canc)
            GROUP BY (  interface_name = ls_mess_canc-interface_name
                        batch_id       = ls_mess_canc-batch_id
                        category       = ls_mess_canc-category ).

          CLEAR: lv_object_key.
          CONCATENATE ls_mess_canc-interface_name ls_mess_canc-batch_id  ls_mess_canc-category INTO lv_object_key RESPECTING BLANKS.

          CALL FUNCTION &apos;SAP_WAPI_CREATE_EVENT&apos;
            EXPORTING
              object_type     = lv_object_type
              object_key      = lv_object_key
              event           = lv_event_canc
*             COMMIT_WORK     = &apos;X&apos;
*             EVENT_LANGUAGE  = SY-LANGU
*             LANGUAGE        = SY-LANGU
*             USER            = SY-UNAME
*             IFS_XML_CONTAINER       = IFS_XML_CONTAINER
            IMPORTING
              return_code     = lv_return_code
              event_id        = lv_event_id
            TABLES
              input_container = lt_input_container
              message_lines   = lt_message_lines
              message_struct  = lt_message_struct.

          IF sy-subrc = 0.
            &quot; #TODO: application log that the batch and all its messages were canceled
          ELSE.
            &quot; #TODO: application log that the batch and all its messages were NOT cancelled
          ENDIF.

        ENDLOOP.

      WHEN OTHERS.
        &quot; no other status possible in this program currently
    ENDCASE.

    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    &quot; Refresh the ALV table display
    &quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;&quot;
    &quot; Get only the data selected based on the selection screen (statuses changed now - would not work with the same select as from selection screen)
    DATA(lt_selscreen_data) = VALUE zglif_error_monitor_output_tt( FOR ls_selection IN gt_btch_msg (
        interface_name  = ls_selection-interface_name
        batch_id        = ls_selection-batch_id
        message_id      = ls_selection-message_id ) ).

    &quot; Get the modified data for display
    CLEAR gt_btch_msg.
    SELECT *
    FROM zglif_btch_msg
    INTO TABLE gt_btch_msg
    FOR ALL ENTRIES IN lt_selscreen_data
    WHERE interface_name    = lt_selscreen_data-interface_name
      AND batch_id          = lt_selscreen_data-batch_id
      AND message_id        = lt_selscreen_data-message_id.

    &quot; Display data
    gr_batch_msg_alv-&gt;refresh(  ).     &quot; # TODO: refresh the screen via set_data and refresh

    PERFORM prepare_data    USING       gt_btch_msg
                            CHANGING    gt_output.

    PERFORM display_data    USING       gt_output.

  ENDMETHOD.

  METHOD expand_grouped_entries.

    DATA: lt_selected_entries TYPE TABLE OF zglif_error_monitor_output,
          lt_expanded_entries TYPE TABLE OF zglif_error_monitor_output.

    CASE gv_grouping.
      WHEN gc_group_none.
        EXIT.   &quot; entries not grouped, no modification of data needed
      WHEN OTHERS.  &quot; entries are grouped: gc_group_batch, gc_group_category, gc_group_message
        lt_selected_entries = pit_selected_entries.
        CLEAR pet_expanded_entries.

        LOOP AT lt_selected_entries INTO DATA(ls_selected_entry).
          lt_expanded_entries = VALUE #(
            FOR ls_member IN gt_output_all WHERE ( group_number = ls_selected_entry-group_number ) (
            group_number        = ls_member-group_number
            interface_name      = ls_member-interface_name
            batch_id            = ls_member-batch_id
            batch_status        = ls_member-batch_status
            batch_status_text   = ls_member-batch_status_text
            batch_changed_at    = ls_member-batch_changed_at
            batch_changed_on    = ls_member-batch_changed_on
            batch_changed_by    = ls_member-batch_changed_by
            filename            = ls_member-filename
            message_id          = ls_member-message_id
            message_status      = ls_member-message_status
            message_status_text = ls_member-message_status_text
            idoc_number         = ls_member-idoc_number
            idoc_status         = ls_member-idoc_status
            idoc_status_text    = ls_member-idoc_status_text
            return_message      = ls_member-return_message
            msgty               = ls_member-msgty
            msgid               = ls_member-msgid
            msgno               = ls_member-msgno
            msgv1               = ls_member-msgv1
            msgv2               = ls_member-msgv2
            msgv3               = ls_member-msgv3
            msgv4               = ls_member-msgv4
            category            = ls_member-category
            category_text       = ls_member-category_text
            message_changed_at  = ls_member-message_changed_at
            message_changed_on  = ls_member-message_changed_on
            message_changed_by  = ls_member-message_changed_by ) ).
          APPEND LINES OF lt_expanded_entries TO pet_expanded_entries.
        ENDLOOP.
    ENDCASE.

  ENDMETHOD.

ENDCLASS.                    &quot;lcl_handle_events IMPLEMENTATION</source>
 </PROG>
 <PROG NAME="ZGLIF_MONITOR_PICTURE" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="Picture related forms" LENGTH="21 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include  zglif_monitor_picture
*&amp;---------------------------------------------------------------------*
FORM show_picture CHANGING  pcr_docking TYPE REF TO cl_gui_docking_container
                            pcr_picture_control TYPE REF TO cl_gui_picture.
  DATA: lv_url            TYPE c LENGTH 256,
        lt_query          TYPE TABLE OF w3query,
        lt_html           TYPE TABLE OF w3html,
        lv_return         TYPE  w3param-ret_code,
        lv_content_type   TYPE  w3param-cont_type,
        lv_content_length TYPE  w3param-cont_len,
        lt_pic_data       TYPE w3mime OCCURS 0,
        lv_pic_size       TYPE i.


  CHECK pcr_picture_control IS NOT BOUND.
  CREATE OBJECT pcr_picture_control EXPORTING parent = pcr_docking.
  CHECK sy-subrc = 0.
*  CALL METHOD picture_control_1-&gt;set_3d_border
*    EXPORTING
*      border = 5.
  CALL METHOD pcr_picture_control-&gt;set_display_mode
    EXPORTING
      display_mode = cl_gui_picture=&gt;display_mode_stretch.
  CALL METHOD pcr_picture_control-&gt;set_position
    EXPORTING
      height = 100
      left   = 1000
      top    = 0
      width  = 500.

* Change POSITION and SIZE above and VALUE below
  IF lv_url IS INITIAL.
    lt_query = VALUE #( ( name = &apos;_OBJECT_ID&apos; value = &apos;ZHCI_LOGO&apos; ) ).

    CALL FUNCTION &apos;WWW_GET_MIME_OBJECT&apos;
      TABLES
        query_string        = lt_query
        html                = lt_html
        mime                = lt_pic_data
      CHANGING
        return_code         = lv_return
        content_type        = lv_content_type
        content_length      = lv_content_length
      EXCEPTIONS
        object_not_found    = 1
        parameter_not_found = 2
        OTHERS              = 3.
    IF sy-subrc &lt;&gt; 0.
      &quot; #TODO: application log
*      MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
    ENDIF.
    CALL FUNCTION &apos;DP_CREATE_URL&apos;
      EXPORTING
        type     = &apos;image&apos;
        subtype  = cndp_sap_tab_unknown
        size     = lv_pic_size
        lifetime = cndp_lifetime_transaction
      TABLES
        data     = lt_pic_data
      CHANGING
        url      = lv_url
      EXCEPTIONS
        OTHERS   = 1.
  ENDIF.
  pcr_picture_control-&gt;load_picture_from_url(
    EXPORTING
      url    = lv_url    &quot; URL
    IMPORTING
      result = gv_loaded    &quot; Load Successful (0 = No, 1 = Yes)
    EXCEPTIONS
      error  = 1
      OTHERS = 2
  ).
  IF sy-subrc &lt;&gt; 0.
    &quot; #TODO: application log
*   MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.                    &quot;show_picture

FORM delete_picture USING pur_picture_control TYPE REF TO cl_gui_picture.
  pur_picture_control-&gt;clear_picture(
  EXCEPTIONS
    error  = 1
    OTHERS = 2 ).
  IF sy-subrc &lt;&gt; 0.
* MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*            WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  CALL METHOD pur_picture_control-&gt;free
    EXCEPTIONS
      cntl_error        = 1
      cntl_system_error = 2
      OTHERS            = 3.
  IF sy-subrc &lt;&gt; 0.
*   MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
*              WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.
ENDFORM.</source>
 </PROG>
 <PROG NAME="ZGLIF_MONITOR_SELSCREEN" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="GLIF Monitor Selection Screen forms" LENGTH="35 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include  zglif_monitor_selscreen
*&amp;---------------------------------------------------------------------*
FORM fill_dropdown CHANGING pcv_default_layout TYPE vrm_value.
  DATA: lv_name  TYPE vrm_id VALUE &apos;PA_INTER&apos;,
        lt_value TYPE vrm_values,
        ls_value LIKE LINE OF lt_value.

  &quot; Get all active interfaces
  SELECT *
  FROM zglif_dispcust
  INTO TABLE @DATA(lt_dispcust)
  WHERE active = @abap_true.

  &quot; Make sure we have some values to work with
  CHECK lt_dispcust IS NOT INITIAL.
  lt_value = VALUE #( FOR ls_dispcust IN lt_dispcust ( key = ls_dispcust-interface_name  text = ls_dispcust-interface_name ) ).

  CALL FUNCTION &apos;VRM_SET_VALUES&apos; EXPORTING id = lv_name values = lt_value.

  &quot;Get default value - first from the list
  TRY.
      DATA(lv_interface) = VALUE zglif_interface_name( ).
      IMPORT zglif_interface = lv_interface FROM MEMORY ID &apos;ZGLIF_INTERFACE&apos;.

      IF lv_interface IS NOT INITIAL.
        pcv_default_layout = lt_value[ key = lv_interface ].
      ELSE.
        pcv_default_layout = lt_value[ 1 ].
      ENDIF.


    CATCH cx_sy_itab_line_not_found. &quot; # TODO: proper logging and own error class
  ENDTRY.

ENDFORM.

FORM select_layout CHANGING pcv_layout TYPE slis_vari.
  DATA: ls_layout_key  TYPE salv_s_layout_key,
        ls_layout_info TYPE salv_s_layout_info.

  ls_layout_key-report  = sy-repid.
  ls_layout_info        = cl_salv_layout_service=&gt;f4_layouts( ls_layout_key ).
  pcv_layout            = ls_layout_info-layout.
ENDFORM.                    &quot;select_layout</source>
 </PROG>
 <PROG NAME="ZGLIF_MONITOR_TOP" VARCL="X" DBAPL="S" DBNA="D$" SUBC="I" RMAND="300" FIXPT="X" LDBNAME="D$S" UCCHECK="X">
  <textPool>
   <language SPRAS="E">
    <textElement ID="R" ENTRY="TOP include for GLIF Monitor" LENGTH="28 "/>
   </language>
  </textPool>
  <source>*&amp;---------------------------------------------------------------------*
*&amp;  Include  zglif_monitor_top
*&amp;---------------------------------------------------------------------*

&quot; Constants
CONSTANTS:
  gc_group_none     TYPE char0008 VALUE &apos;none&apos;,
  gc_group_batch    TYPE char0008 VALUE &apos;batch&apos;,
  gc_group_category TYPE char0008 VALUE &apos;category&apos;,
  gc_group_message  TYPE char0008 VALUE &apos;message&apos;,

  gc_correct        TYPE char0008 VALUE &apos;CORRECT&apos;,
  gc_cancel         TYPE char0008 VALUE &apos;CANCEL&apos;.

&quot; ALV variables
DATA:
  gv_grouping       TYPE          char0008,
  gv_default_layout TYPE          vrm_value,
  gv_layout         TYPE          slis_vari,
  gt_btch_msg       TYPE TABLE OF zglif_btch_msg,               &quot; table for selecting the data from DB
  gt_output         TYPE TABLE OF zglif_error_monitor_output,   &quot; table with output data for ALV
  gr_batch_msg_alv  TYPE REF TO   cl_salv_table,                &quot; alv reference
  gt_output_all     TYPE TABLE OF zglif_error_monitor_output.   &quot; all entries with indication of the group

&quot; Picture control
DATA:
  gr_docking         TYPE REF TO cl_gui_docking_container,
  gr_picture_control TYPE REF TO cl_gui_picture,
  gv_loaded          TYPE i.

&quot; Event handling
CLASS lcl_event_handler DEFINITION DEFERRED.
DATA: gr_event_handler TYPE REF TO lcl_event_handler.</source>
 </PROG>
 <SHLP SHLPNAME="ZGLIF_ERR_CATEG" DDLANGUAGE="E" DDTEXT="GLIF: Table for categories of GLIF Errors" ISSIMPLE="X" SELMETHOD="ZGLIF_ERR_CATEG" SELMTYPE="T" DIALOGTYPE="D" FUZZY_SIMILARITY="0.8 ">
  <dd32p SHLPNAME="ZGLIF_ERR_CATEG" FIELDNAME="INTERFACE_NAME" FLPOSITION="0001" ROLLNAME="ZGLIF_INTERFACE_NAME" SHLPINPUT="X" SHLPOUTPUT="X" SHLPSELPOS="01" SHLPLISPOS="01" DOMNAME="CHAR0016" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000"/>
  <dd32p SHLPNAME="ZGLIF_ERR_CATEG" FIELDNAME="ID" FLPOSITION="0002" ROLLNAME="ZGLIF_CATEGORY_ID" SHLPINPUT="X" SHLPOUTPUT="X" SHLPSELPOS="02" SHLPLISPOS="02" DOMNAME="ZGLIF_CATEGORY_DOM" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X"/>
  <dd32p SHLPNAME="ZGLIF_ERR_CATEG" FIELDNAME="CATEGORY_DESCRIPTION" FLPOSITION="0003" ROLLNAME="ZGLIF_CATEGORY" SHLPINPUT="X" SHLPOUTPUT="X" SHLPSELPOS="03" SHLPLISPOS="03" DOMNAME="CHAR_30" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X"/>
 </SHLP>
 <SHLP SHLPNAME="ZGLIF_INTERFACE_NAME" DDLANGUAGE="E" DDTEXT="GLIF: search-help for Interface Name" ISSIMPLE="X" SELMETHOD="ZGLIF_DISPCUST" SELMTYPE="T" DIALOGTYPE="D" FUZZY_SIMILARITY="0.8 ">
  <dd32p SHLPNAME="ZGLIF_INTERFACE_NAME" FIELDNAME="INTERFACE_NAME" FLPOSITION="0001" ROLLNAME="ZGLIF_INTERFACE_NAME" SHLPINPUT="X" SHLPOUTPUT="X" SHLPSELPOS="01" SHLPLISPOS="01" DOMNAME="CHAR0016" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000"/>
 </SHLP>
 <TABL TABNAME="ZGLIF_BATCH_STAT" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="GLIF: Batch status table" AUTHCLASS="00" MAINFLAG="X" CONTFLAG="A" PROZPUFF="000" EXCLASS="3">
  <dd09l TABNAME="ZGLIF_BATCH_STAT" AS4LOCAL="A" AS4VERS="0000" TABKAT="3" TABART="APPL1" SCHFELDANZ="000" BUFALLOW="N" ROWORCOLST="C"/>
  <dd03p TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="INTERFACE_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="ZGLIF_INTERFACE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000032" NOTNULL="X" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" DOMMASTER="D" DOMNAME3L="CHAR0016" SHLPORIGIN="D" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="BATCH_ID" DDLANGUAGE="E" POSITION="0003" KEYFLAG="X" ROLLNAME="ZGLIF_BATCH_ID" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" NOTNULL="X" DOMNAME="ZGLIF_BATCH_ID_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_BATCH" HEADLEN="08" SCRLEN1="08" SCRLEN2="08" SCRLEN3="08" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" LOWERCASE="X" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Batch ID" REPTEXT="Batch ID" SCRTEXT_S="Batch ID" SCRTEXT_M="Batch ID" SCRTEXT_L="Batch ID" DOMNAME3L="ZGLIF_BATCH_ID_DOM" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="BATCH_STATUS" DDLANGUAGE="E" POSITION="0004" ROLLNAME="ZGLIF_BATCH_STATUS" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="ZGLIF_BATCH_STATUS_DOM" ROUTPUTLEN="000000" HEADLEN="12" SCRLEN1="06" SCRLEN2="12" SCRLEN3="12" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Batch Status" REPTEXT="Batch Status" SCRTEXT_S="Status" SCRTEXT_M="Batch Status" SCRTEXT_L="Batch Status" DOMNAME3L="ZGLIF_BATCH_STATUS_DOM" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="BATCH_CHANGED_ON" DDLANGUAGE="E" POSITION="0005" ROLLNAME="ZGLIF_CHANGED_ON" ADMINFIELD="0" INTTYPE="D" INTLEN="000016" DOMNAME="DATS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DTELMASTER="E" DATATYPE="DATS" LENG="000008" OUTPUTLEN="000010" DECIMALS="000000" MASK="  DATSE" MASKLEN="0000" DDTEXT="GLIF: Entry Changed On" REPTEXT="Changed On" SCRTEXT_S="Changed On" SCRTEXT_M="Changed On" SCRTEXT_L="Changed On" DOMMASTER="D" DOMNAME3L="DATS" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="BATCH_CHANGED_AT" DDLANGUAGE="E" POSITION="0006" ROLLNAME="ZGLIF_CHANGED_AT" ADMINFIELD="0" INTTYPE="T" INTLEN="000012" DOMNAME="TIMS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DTELMASTER="E" DATATYPE="TIMS" LENG="000006" OUTPUTLEN="000008" DECIMALS="000000" MASK="  TIMSE" MASKLEN="0000" DDTEXT="GLIF: Entry Changed At" REPTEXT="Changed At" SCRTEXT_S="Changed At" SCRTEXT_M="Changed At" SCRTEXT_L="Changed At" DOMMASTER="D" DOMNAME3L="TIMS" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="BATCH_CHANGED_BY" DDLANGUAGE="E" POSITION="0007" ROLLNAME="ZGLIF_CHANGED_USERNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Entry Changed By" REPTEXT="Changed By Username" SCRTEXT_S="Chngd By" SCRTEXT_M="Changed By" SCRTEXT_L="Changed By User" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
 <TABL TABNAME="ZGLIF_CONVCUST" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="GLIF: Convertor Customization table" AUTHCLASS="00" MAINFLAG="X" CONTFLAG="C" PROZPUFF="000" EXCLASS="3">
  <dd09l TABNAME="ZGLIF_CONVCUST" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL2" PUFFERUNG="X" SCHFELDANZ="000" PROTOKOLL="X" BUFALLOW="X" ROWORCOLST="C"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="INTERFACE_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="ZGLIF_INTERFACE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000032" NOTNULL="X" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" DOMMASTER="D" DOMNAME3L="CHAR0016" SHLPORIGIN="D" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="ACTIVE" DDLANGUAGE="E" POSITION="0003" ROLLNAME="ZGLIF_INTERFACE_ACTIVE" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Indicate status of the row: Active (X), Inactive (&apos; &apos;)" REPTEXT="Interface Active" SCRTEXT_S="Active" SCRTEXT_M="Active" SCRTEXT_L="Interface Active" DOMMASTER="D" DOMNAME3L="BOOLEAN_FLG" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="SAP_FOLDER_SOURCE" DDLANGUAGE="E" POSITION="0004" ROLLNAME="ZGLIF_SAP_FOLDER" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="10" SCRLEN2="18" SCRLEN3="25" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: SAP Application Server Folder" REPTEXT="SAP Folder" SCRTEXT_S="SAP Folder" SCRTEXT_M="SAP Folder" SCRTEXT_L="SAP Folder" DOMNAME3L="TEXT60" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="SAP_FOLDER_ERRORS" DDLANGUAGE="E" POSITION="0005" ROLLNAME="ZGLIF_SAP_FOLDER_ERRORS" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="10" SCRLEN2="18" SCRLEN3="25" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: SAP Application Server Folder for Errors" REPTEXT="SAP Errors Folder" SCRTEXT_S="SAP Errors" SCRTEXT_M="SAP Errors Folder" SCRTEXT_L="SAP Errors Folder" DOMNAME3L="TEXT60" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="SAP_FOLDER_PROCESSED" DDLANGUAGE="E" POSITION="0006" ROLLNAME="ZGLIF_SAP_FOLDER_PROCESSED" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: SAP Applicatin Server Folder for Processed" REPTEXT="SAP Processed Folder" SCRTEXT_S="SAP Prcsd." SCRTEXT_M="SAP Processed Folder" SCRTEXT_L="SAP Processed Folder" DOMNAME3L="TEXT60" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="SAP_PORT" DDLANGUAGE="E" POSITION="0007" ROLLNAME="ZGLIF_SAP_PORT" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="EDI_PVPORT" ROUTPUTLEN="000000" HEADLEN="08" SCRLEN1="08" SCRLEN2="08" SCRLEN3="08" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" ENTITYTAB="EDIPORT" MASK="  CHARE" MASKLEN="0000" DDTEXT="SAP Port" REPTEXT="SAP Port" SCRTEXT_S="SAP Port" SCRTEXT_M="SAP Port" SCRTEXT_L="SAP Port" DOMNAME3L="EDI_PVPORT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="EDI_XACTIVE" DDLANGUAGE="E" POSITION="0008" ROLLNAME="ZGLIF_EDI_XACTIVE" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="XFELD" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: activate EDI control record modifications" REPTEXT="activate EDI control record modifications" SCRTEXT_S="EDICntrMod" SCRTEXT_M="EDI control modify" SCRTEXT_L="activate EDI control record modification" DOMNAME3L="XFELD" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="EDI_RCVPOR" DDLANGUAGE="E" POSITION="0009" ROLLNAME="EDI_RCVPOR" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="EDI_PORT" ROUTPUTLEN="000000" HEADLEN="14" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Receiver port (SAP System, EDI subsystem)" REPTEXT="Receiver port" SCRTEXT_S="Port" SCRTEXT_M="Receiver port" SCRTEXT_L="Receiver port" DOMNAME3L="EDI_PORT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="EDI_RCVPRT" DDLANGUAGE="E" POSITION="0010" ROLLNAME="EDI_RCVPRT" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="EDI_PARTYP" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Partner Type of Receiver" REPTEXT="Part. Type" SCRTEXT_S="Part. Type" SCRTEXT_M="Partner Type" SCRTEXT_L="Receiver Partn. Type" DOMNAME3L="EDI_PARTYP" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="EDI_RCVPRN" DDLANGUAGE="E" POSITION="0011" ROLLNAME="EDI_RCVPRN" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="EDI_PARNUM" ROUTPUTLEN="000000" HEADLEN="15" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" ENTITYTAB="EDPP1" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Partner Number of Receiver" REPTEXT="Partner Number" SCRTEXT_S="Partn.no." SCRTEXT_M="Receiver" SCRTEXT_L="Receiver Partner No." DOMNAME3L="EDI_PARNUM" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="EDI_SNDPOR" DDLANGUAGE="E" POSITION="0012" ROLLNAME="EDI_SNDPOR" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="EDI_PORT" ROUTPUTLEN="000000" HEADLEN="12" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Sender port (SAP System, EDI subsystem)" REPTEXT="Sender port" SCRTEXT_S="Port" SCRTEXT_M="Sender port" SCRTEXT_L="Sender port" DOMNAME3L="EDI_PORT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="EDI_SNDPRT" DDLANGUAGE="E" POSITION="0013" ROLLNAME="EDI_SNDPRT" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="EDI_PARTYP" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Partner type of sender" REPTEXT="Partn.Type" SCRTEXT_S="Partn.Type" SCRTEXT_M="Sender type" SCRTEXT_L="Sender partner type" DOMNAME3L="EDI_PARTYP" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_CONVCUST" FIELDNAME="EDI_SNDPRN" DDLANGUAGE="E" POSITION="0014" ROLLNAME="EDI_SNDPRN" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="EDI_PARNUM" ROUTPUTLEN="000000" HEADLEN="15" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" ENTITYTAB="EDPP1" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Partner Number of Sender" REPTEXT="Partner number" SCRTEXT_S="Partn.no." SCRTEXT_M="Sender" SCRTEXT_L="Sender partner no." DOMNAME3L="EDI_PARNUM" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
 <TABL TABNAME="ZGLIF_DISPCUST" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="Customization for Dispatcher" AUTHCLASS="00" MASTERLANG="E" MAINFLAG="X" CONTFLAG="C" PROZPUFF="000" EXCLASS="3">
  <dd09l TABNAME="ZGLIF_DISPCUST" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL0" PUFFERUNG="X" SCHFELDANZ="000" PROTOKOLL="X" BUFALLOW="X" ROWORCOLST="C"/>
  <dd03p TABNAME="ZGLIF_DISPCUST" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_DISPCUST" FIELDNAME="INTERFACE_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="ZGLIF_INTERFACE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000032" NOTNULL="X" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" DOMMASTER="D" DOMNAME3L="CHAR0016" SHLPORIGIN="D" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_DISPCUST" FIELDNAME="ACTIVE" DDLANGUAGE="E" POSITION="0003" ROLLNAME="ZGLIF_INTERFACE_ACTIVE" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Indicate status of the row: Active (X), Inactive (&apos; &apos;)" REPTEXT="Interface Active" SCRTEXT_S="Active" SCRTEXT_M="Active" SCRTEXT_L="Interface Active" DOMMASTER="D" DOMNAME3L="BOOLEAN_FLG" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_DISPCUST" FIELDNAME="FEEDER_CLASS" DDLANGUAGE="E" POSITION="0004" ROLLNAME="ZGLIF_FEEDER_CLASS_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="17" SCRLEN1="06" SCRLEN2="12" SCRLEN3="17" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Feeder Class name" REPTEXT="Feeder Class name" SCRTEXT_S="Feeder" SCRTEXT_M="Feeder Class" SCRTEXT_L="Feeder Class name" DOMNAME3L="SEOCLSNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_DISPCUST" FIELDNAME="CONVERTOR_CLASS" DDLANGUAGE="E" POSITION="0005" ROLLNAME="ZGLIF_CONVERTOR_CLASS_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="15" SCRLEN3="20" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Convertor Class name" REPTEXT="Convertor Class name" SCRTEXT_S="Convertor" SCRTEXT_M="Convertor Class" SCRTEXT_L="Convertor Class name" DOMNAME3L="SEOCLSNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_DISPCUST" FIELDNAME="PROCESSOR_CLASS" DDLANGUAGE="E" POSITION="0006" ROLLNAME="ZGLIF_PROCESSOR_CLASS_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="15" SCRLEN3="20" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Processor Class name" REPTEXT="Processor Class name" SCRTEXT_S="Processor" SCRTEXT_M="Processor Class" SCRTEXT_L="Processor Class name" DOMNAME3L="SEOCLSNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_DISPCUST" FIELDNAME="ERROR_HANDLER_CLASS" DDLANGUAGE="E" POSITION="0007" ROLLNAME="ZGLIF_ERROR_HANDLER_CLASS_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="SEOCLSNAME" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="20" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Error Handler Class name" REPTEXT="Error Handler Class name" SCRTEXT_S="Err.Handle" SCRTEXT_M="Error Handler Class" SCRTEXT_L="Error Handler Class name" DOMNAME3L="SEOCLSNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_DISPCUST" FIELDNAME="LOG_ACTIVE" DDLANGUAGE="E" POSITION="0008" ROLLNAME="ZGLIF_LOG_ACTIVATE" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Activate/Deactive Logging" REPTEXT="Log Active" SCRTEXT_S="Log Active" SCRTEXT_M="Log Active" SCRTEXT_L="Log Active" DOMMASTER="D" DOMNAME3L="BOOLEAN_FLG" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_DISPCUST" FIELDNAME="LOG_CREATE_OWN" DDLANGUAGE="E" POSITION="0009" ROLLNAME="ZGLIF_LOG_CREATE_OWN" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Create own dispatcher log, or use log from program" REPTEXT="Own Log" SCRTEXT_S="Own Log" SCRTEXT_M="Own Log" SCRTEXT_L="Own Log" DOMMASTER="D" DOMNAME3L="BOOLEAN_FLG" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_DISPCUST" FIELDNAME="LOG_DAYS_KEEP" DDLANGUAGE="E" POSITION="0010" ROLLNAME="ZGLID_LOG_DAYS_TO_KEEP" ADMINFIELD="0" INTTYPE="X" INTLEN="000001" DOMNAME="INT1" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="INT1" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" MASK="  INT1E" MASKLEN="0000" DDTEXT="How many days to keep log" REPTEXT="Log Expiration Days" SCRTEXT_S="Log Days" SCRTEXT_M="Log Expiration Days" SCRTEXT_L="Log Expiration Days" DOMNAME3L="INT1" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
 <TABL TABNAME="ZGLIF_ERRORCUST" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="GLIF: Customization for message info combination -&gt; Category" AUTHCLASS="00" MASTERLANG="E" MAINFLAG="X" CONTFLAG="C" PROZPUFF="000" EXCLASS="3">
  <dd09l TABNAME="ZGLIF_ERRORCUST" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL2" PUFFERUNG="X" SCHFELDANZ="000" PROTOKOLL="X" BUFALLOW="X" ROWORCOLST="C"/>
  <dd03p TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERRORCUST" FIELDNAME="INTERFACE_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="ZGLIF_INTERFACE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000032" NOTNULL="X" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" DOMMASTER="D" DOMNAME3L="CHAR0016" SHLPORIGIN="D" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MESSAGE_STATUS" DDLANGUAGE="E" POSITION="0003" KEYFLAG="X" ROLLNAME="ZGLIF_MESSAGE_STATUS" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" NOTNULL="X" DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Message status" REPTEXT="Message Status" SCRTEXT_S="M. Status" SCRTEXT_M="Message Status" SCRTEXT_L="Message Status" DOMNAME3L="ZGLIF_MESSAGE_STATUS_DOM" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGID" DDLANGUAGE="E" POSITION="0004" KEYFLAG="X" ROLLNAME="ZGLIF_MSGID" CHECKTABLE="T100" ADMINFIELD="0" INTTYPE="C" INTLEN="000040" NOTNULL="X" DOMNAME="ARBGB" ROUTPUTLEN="000000" HEADLEN="23" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000020" OUTPUTLEN="000020" DECIMALS="000000" ENTITYTAB="T100A" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Class ID" REPTEXT="Return Message Class ID" SCRTEXT_S="Class ID" SCRTEXT_M="Return Message Class" SCRTEXT_L="Return Message Class ID" DOMNAME3L="ARBGB" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGNO" DDLANGUAGE="E" POSITION="0005" KEYFLAG="X" ROLLNAME="ZGLIF_MSGNO" CHECKTABLE="T100" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MSGNR" ROUTPUTLEN="000000" HEADLEN="21" SCRLEN1="08" SCRLEN2="19" SCRLEN3="21" DTELMASTER="E" DATATYPE="CHAR" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T100" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Number" REPTEXT="Return Message Number" SCRTEXT_S="Msg. No." SCRTEXT_M="Return Mess. Number" SCRTEXT_L="Return Message Number" DOMNAME3L="MSGNR" SHLPORIGIN="X" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERRORCUST" FIELDNAME="CATEGORY" DDLANGUAGE="E" POSITION="0006" ROLLNAME="ZGLIF_CATEGORY_ID" CHECKTABLE="ZGLIF_ERR_CATEG" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="ZGLIF_CATEGORY_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_CATEGORY" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Category ID" REPTEXT="Category ID" SCRTEXT_S="CategoryID" SCRTEXT_M="Category ID" SCRTEXT_L="Category ID" DOMNAME3L="ZGLIF_CATEGORY_DOM" SHLPORIGIN="X" SHLPNAME="ZGLIF_ERR_CATEG" SHLPFIELD="ID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd05m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="CATEGORY" FORTABLE="ZGLIF_ERRORCUST" FORKEY="MANDT" CHECKTABLE="ZGLIF_ERR_CATEG" CHECKFIELD="MANDT" PRIMPOS="0001" DOMNAME="MANDT" DATATYPE="CLNT" LENG="000003"/>
  <dd05m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="CATEGORY" FORTABLE="ZGLIF_ERRORCUST" FORKEY="INTERFACE_NAME" CHECKTABLE="ZGLIF_ERR_CATEG" CHECKFIELD="INTERFACE_NAME" PRIMPOS="0002" DOMNAME="CHAR0016" DATATYPE="CHAR" LENG="000016"/>
  <dd05m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="CATEGORY" FORTABLE="ZGLIF_ERRORCUST" FORKEY="CATEGORY" CHECKTABLE="ZGLIF_ERR_CATEG" CHECKFIELD="ID" PRIMPOS="0003" DOMNAME="ZGLIF_CATEGORY_DOM" DATATYPE="CHAR" LENG="000002"/>
  <dd05m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGID" FORTABLE="SYST" FORKEY="LANGU" CHECKTABLE="T100" CHECKFIELD="SPRSL" PRIMPOS="0001" DOMNAME="SPRAS" DATATYPE="LANG" LENG="000001"/>
  <dd05m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGID" FORTABLE="ZGLIF_ERRORCUST" FORKEY="MSGID" CHECKTABLE="T100" CHECKFIELD="ARBGB" PRIMPOS="0002" DOMNAME="ARBGB" DATATYPE="CHAR" LENG="000020"/>
  <dd05m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGID" FORTABLE="ZGLIF_ERRORCUST" FORKEY="MSGNO" CHECKTABLE="T100" CHECKFIELD="MSGNR" PRIMPOS="0003" DOMNAME="MSGNR" DATATYPE="CHAR" LENG="000003"/>
  <dd05m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGNO" FORTABLE="SYST" FORKEY="LANGU" CHECKTABLE="T100" CHECKFIELD="SPRSL" PRIMPOS="0001" DOMNAME="SPRAS" DATATYPE="LANG" LENG="000001"/>
  <dd05m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGNO" FORTABLE="ZGLIF_ERRORCUST" FORKEY="MSGID" CHECKTABLE="T100" CHECKFIELD="ARBGB" PRIMPOS="0002" DOMNAME="ARBGB" DATATYPE="CHAR" LENG="000020"/>
  <dd05m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGNO" FORTABLE="ZGLIF_ERRORCUST" FORKEY="MSGNO" CHECKTABLE="T100" CHECKFIELD="MSGNR" PRIMPOS="0003" DOMNAME="MSGNR" DATATYPE="CHAR" LENG="000003"/>
  <dd08v TABNAME="ZGLIF_ERRORCUST" FIELDNAME="CATEGORY" DDLANGUAGE="E" CHECKTABLE="ZGLIF_ERR_CATEG"/>
  <dd08v TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGID" DDLANGUAGE="E" CHECKTABLE="T100" FRKART="KEY" CARD="CN" CARDLEFT="1"/>
  <dd08v TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGNO" DDLANGUAGE="E" CHECKTABLE="T100"/>
  <dd35v TABNAME="ZGLIF_ERRORCUST" FIELDNAME="CATEGORY" SHLPNAME="ZGLIF_ERR_CATEG"/>
  <dd35v TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGNO" SHLPNAME="T100F4"/>
  <dd36m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="CATEGORY" SHLPNAME="ZGLIF_ERR_CATEG" SHLPFIELD="CATEGORY_DESCRIPTION" FLPOSITION="0003" SHTYPE="G" SHLPINPUT="X" SHLPOUTPUT="X" ROLLNAME="ZGLIF_CATEGORY" DOMNAME="CHAR_30" DATATYPE="CHAR" LENG="000030" DECIMALS="000000"/>
  <dd36m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="CATEGORY" SHLPNAME="ZGLIF_ERR_CATEG" SHLPFIELD="ID" FLPOSITION="0002" SHTABLE="ZGLIF_ERRORCUST" SHFIELD="CATEGORY" SHLPINPUT="X" SHLPOUTPUT="X" ROLLNAME="ZGLIF_CATEGORY_ID" DOMNAME="ZGLIF_CATEGORY_DOM" DATATYPE="CHAR" LENG="000002" DECIMALS="000000"/>
  <dd36m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="CATEGORY" SHLPNAME="ZGLIF_ERR_CATEG" SHLPFIELD="INTERFACE_NAME" FLPOSITION="0001" SHTYPE="G" SHLPINPUT="X" SHLPOUTPUT="X" ROLLNAME="ZGLIF_INTERFACE_NAME" DOMNAME="CHAR0016" DATATYPE="CHAR" LENG="000016" DECIMALS="000000"/>
  <dd36m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGNO" SHLPNAME="T100F4" SHLPFIELD="ARBGB" FLPOSITION="0002" SHTABLE="ZGLIF_ERRORCUST" SHFIELD="MSGID" SHLPINPUT="X" SHLPOUTPUT="X" ROLLNAME="ARBGB" DOMNAME="ARBGB" DATATYPE="CHAR" LENG="000020" DECIMALS="000000"/>
  <dd36m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGNO" SHLPNAME="T100F4" SHLPFIELD="MSGNR" FLPOSITION="0003" SHTABLE="ZGLIF_ERRORCUST" SHFIELD="MSGNO" SHLPINPUT="X" SHLPOUTPUT="X" ROLLNAME="MSGNR" DOMNAME="MSGNR" DATATYPE="CHAR" LENG="000003" DECIMALS="000000"/>
  <dd36m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGNO" SHLPNAME="T100F4" SHLPFIELD="SPRSL" FLPOSITION="0001" SHTABLE="SYST" SHFIELD="LANGU" SHLPINPUT="X" SHLPOUTPUT="X" ROLLNAME="SPRAS" DOMNAME="SPRAS" DATATYPE="LANG" LENG="000001" DECIMALS="000000" DEFAULTVAL="SY-LANGU" DEFAULTTYP="S"/>
  <dd36m TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGNO" SHLPNAME="T100F4" SHLPFIELD="TEXT" FLPOSITION="0004" SHTYPE="G" SHLPINPUT="X" SHLPOUTPUT="X" ROLLNAME="NATXT" DOMNAME="NATXT" DATATYPE="CHAR" LENG="000073" DECIMALS="000000"/>
 </TABL>
 <TABL TABNAME="ZGLIF_ERR_BOR_DATA" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="GLIF: Error BOR data (support structure)" AUTHCLASS="00" PROZPUFF="000" EXCLASS="3">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZGLIF_ERR_BOR_DATA" FIELDNAME="BORNAME" DDLANGUAGE="E" POSITION="0001" ROLLNAME="ZGLIF_ERR_BOR_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000090" DOMNAME="TEXT45" ROUTPUTLEN="000000" HEADLEN="45" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000045" OUTPUTLEN="000045" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: ErrBOR name (human readable, BatchID+CatID+CatDesc)" REPTEXT="ErrBOR name (human readable)" SCRTEXT_S="ErrBorName" SCRTEXT_M="ErrBOR name" SCRTEXT_L="ErrBOR name (human readable)" DOMNAME3L="TEXT45" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
 <TABL TABNAME="ZGLIF_ERR_CATEG" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="GLIF: Table for categories of GLIF Errors" AUTHCLASS="00" MAINFLAG="X" CONTFLAG="C" PROZPUFF="000" EXCLASS="2">
  <dd09l TABNAME="ZGLIF_ERR_CATEG" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL0" PUFFERUNG="X" SCHFELDANZ="000" PROTOKOLL="X" BUFALLOW="X" ROWORCOLST="C"/>
  <dd03p TABNAME="ZGLIF_ERR_CATEG" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERR_CATEG" FIELDNAME="INTERFACE_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="ZGLIF_INTERFACE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000032" NOTNULL="X" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" DOMMASTER="D" DOMNAME3L="CHAR0016" SHLPORIGIN="D" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERR_CATEG" FIELDNAME="ID" DDLANGUAGE="E" POSITION="0003" KEYFLAG="X" ROLLNAME="ZGLIF_CATEGORY_ID" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" NOTNULL="X" DOMNAME="ZGLIF_CATEGORY_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_CATEGORY" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Category ID" REPTEXT="Category ID" SCRTEXT_S="CategoryID" SCRTEXT_M="Category ID" SCRTEXT_L="Category ID" DOMNAME3L="ZGLIF_CATEGORY_DOM" SHLPORIGIN="D" SHLPNAME="ZGLIF_ERR_CATEG" SHLPFIELD="ID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERR_CATEG" FIELDNAME="CATEGORY_DESCRIPTION" DDLANGUAGE="E" POSITION="0004" ROLLNAME="ZGLIF_CATEGORY" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="CHAR_30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Category" REPTEXT="Category" SCRTEXT_S="Category" SCRTEXT_M="Category" SCRTEXT_L="Category" DOMMASTER="D" DOMNAME3L="CHAR_30" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
 <TABL TABNAME="ZGLIF_FEEDCUST" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="GLIF: Feeder Customization table" AUTHCLASS="00" MAINFLAG="X" CONTFLAG="C" PROZPUFF="000" EXCLASS="3">
  <dd09l TABNAME="ZGLIF_FEEDCUST" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL2" PUFFERUNG="X" SCHFELDANZ="000" PROTOKOLL="X" BUFALLOW="X" ROWORCOLST="C"/>
  <dd03p TABNAME="ZGLIF_FEEDCUST" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_FEEDCUST" FIELDNAME="INTERFACE_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="ZGLIF_INTERFACE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000032" NOTNULL="X" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" DOMMASTER="D" DOMNAME3L="CHAR0016" SHLPORIGIN="D" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_FEEDCUST" FIELDNAME="ACTIVE" DDLANGUAGE="E" POSITION="0003" ROLLNAME="ZGLIF_INTERFACE_ACTIVE" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Indicate status of the row: Active (X), Inactive (&apos; &apos;)" REPTEXT="Interface Active" SCRTEXT_S="Active" SCRTEXT_M="Active" SCRTEXT_L="Interface Active" DOMMASTER="D" DOMNAME3L="BOOLEAN_FLG" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_FEEDCUST" FIELDNAME="SAP_RFC_DESTINATION" DDLANGUAGE="E" POSITION="0004" ROLLNAME="RFCDEST" ADMINFIELD="0" INTTYPE="C" INTLEN="000064" DOMNAME="RFCDEST" ROUTPUTLEN="000000" MEMORYID="RFC" HEADLEN="15" SCRLEN1="05" SCRLEN2="11" SCRLEN3="15" DTELMASTER="D" DATATYPE="CHAR" LENG="000032" OUTPUTLEN="000032" DECIMALS="000000" LOWERCASE="X" ENTITYTAB="RFCDES" MASK="  CHARE" MASKLEN="0000" DDTEXT="Logical destination (specified in function call)" REPTEXT="RFC Destination" SCRTEXT_S="Dest." SCRTEXT_M="Destination" SCRTEXT_L="RFC Destination" DOMNAME3L="RFCDEST" SHLPORIGIN="D" SHLPNAME="F4_RFCDESTYPEALL" SHLPFIELD="RFCDEST" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_FEEDCUST" FIELDNAME="FTP_HOST" DDLANGUAGE="E" POSITION="0005" ROLLNAME="ZGLIF_FTP_HOST" ADMINFIELD="0" INTTYPE="C" INTLEN="000160" DOMNAME="TEXT80" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000080" OUTPUTLEN="000080" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: FTP host name" REPTEXT="FTP host name" SCRTEXT_S="FTP host" SCRTEXT_M="FTP host name" SCRTEXT_L="FTP host name" DOMNAME3L="TEXT80" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_FEEDCUST" FIELDNAME="FTP_USER" DDLANGUAGE="E" POSITION="0006" ROLLNAME="ZGLIF_FTP_USER" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="TEXT30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: FTP user name" REPTEXT="FTP user name" SCRTEXT_S="FTP user" SCRTEXT_M="FTP user name" SCRTEXT_L="FTP user name" DOMNAME3L="TEXT30" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_FEEDCUST" FIELDNAME="FTP_PSWD" DDLANGUAGE="E" POSITION="0007" ROLLNAME="ZGLIF_FTP_PSWD" ADMINFIELD="0" INTTYPE="C" INTLEN="000160" DOMNAME="TEXT80" ROUTPUTLEN="000000" HEADLEN="12" SCRLEN1="08" SCRLEN2="12" SCRLEN3="12" DTELMASTER="E" DATATYPE="CHAR" LENG="000080" OUTPUTLEN="000080" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: FTP password" REPTEXT="FTP password" SCRTEXT_S="FTp pswd" SCRTEXT_M="FTP password" SCRTEXT_L="FTP password" DOMNAME3L="TEXT80" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_FEEDCUST" FIELDNAME="FTP_SCRIPT" DDLANGUAGE="E" POSITION="0008" ROLLNAME="ZGLIF_FEEDER_SCRIPT" ADMINFIELD="0" INTTYPE="C" INTLEN="000036" DOMNAME="ZGLIF_SCRIPT_NAME" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="18" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000018" OUTPUTLEN="000018" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: unix script name" REPTEXT="GLIF: Feeder Script name" SCRTEXT_S="Script nm." SCRTEXT_M="Feeder script name" SCRTEXT_L="GLIF: Feeder Script name" DOMNAME3L="ZGLIF_SCRIPT_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_FEEDCUST" FIELDNAME="FTP_FOLDER_SOURCE" DDLANGUAGE="E" POSITION="0009" ROLLNAME="ZGLIF_FTP_FOLDER" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="17" SCRLEN1="10" SCRLEN2="17" SCRLEN3="23" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: FTP Folder" REPTEXT="FTP Source Folder" SCRTEXT_S="FTP Source" SCRTEXT_M="FTP Source Folder" SCRTEXT_L="FTP Source Folder" DOMNAME3L="TEXT60" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_FEEDCUST" FIELDNAME="FTP_FOLDER_ERRORS" DDLANGUAGE="E" POSITION="0010" ROLLNAME="ZGLIF_FTP_FOLDER_ERRORS" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: FTP Folder for Errors" REPTEXT="FTP Errors Folder" SCRTEXT_S="FTP Errors" SCRTEXT_M="FTP Errors Folder" SCRTEXT_L="FTP Errors Folder" DOMNAME3L="TEXT60" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_FEEDCUST" FIELDNAME="FTP_FOLDER_PROCESSED" DDLANGUAGE="E" POSITION="0011" ROLLNAME="ZGLIF_FTP_FOLDER_PROCESSED" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: FTP Folder for Processed" REPTEXT="FTP Processed Folder" SCRTEXT_S="FTP Prcsd." SCRTEXT_M="FTP Processed Folder" SCRTEXT_L="FTP Processed Folder" DOMNAME3L="TEXT60" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_FEEDCUST" FIELDNAME="SAP_FOLDER_SOURCE" DDLANGUAGE="E" POSITION="0012" ROLLNAME="ZGLIF_SAP_FOLDER" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="25" SCRLEN1="10" SCRLEN2="18" SCRLEN3="25" DTELMASTER="E" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: SAP Application Server Folder" REPTEXT="SAP Folder" SCRTEXT_S="SAP Folder" SCRTEXT_M="SAP Folder" SCRTEXT_L="SAP Folder" DOMNAME3L="TEXT60" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
 <TABL TABNAME="ZGLIF_HANDLECUST" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="GLIF: Customization for Error Handler" AUTHCLASS="00" MAINFLAG="X" CONTFLAG="C" PROZPUFF="000" EXCLASS="3">
  <dd09l TABNAME="ZGLIF_HANDLECUST" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL0" PUFFERUNG="X" SCHFELDANZ="000" PROTOKOLL="X" BUFALLOW="X" ROWORCOLST="C"/>
  <dd03p TABNAME="ZGLIF_HANDLECUST" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_HANDLECUST" FIELDNAME="INTERFACE_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="ZGLIF_INTERFACE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000032" NOTNULL="X" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" DOMMASTER="D" DOMNAME3L="CHAR0016" SHLPORIGIN="D" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_HANDLECUST" FIELDNAME="ACTIVE" DDLANGUAGE="E" POSITION="0003" ROLLNAME="ZGLIF_INTERFACE_ACTIVE" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Indicate status of the row: Active (X), Inactive (&apos; &apos;)" REPTEXT="Interface Active" SCRTEXT_S="Active" SCRTEXT_M="Active" SCRTEXT_L="Interface Active" DOMMASTER="D" DOMNAME3L="BOOLEAN_FLG" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_HANDLECUST" FIELDNAME="DEFAULT_CATEGORY" DDLANGUAGE="E" POSITION="0004" ROLLNAME="ZGLIF_CATEGORY_ID" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="ZGLIF_CATEGORY_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_CATEGORY" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Category ID" REPTEXT="Category ID" SCRTEXT_S="CategoryID" SCRTEXT_M="Category ID" SCRTEXT_L="Category ID" DOMNAME3L="ZGLIF_CATEGORY_DOM" SHLPORIGIN="D" SHLPNAME="ZGLIF_ERR_CATEG" SHLPFIELD="ID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
 <TABL TABNAME="ZGLIF_MESS_STAT" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="GLIF: Message status table" AUTHCLASS="00" MAINFLAG="X" CONTFLAG="A" PROZPUFF="000" EXCLASS="3">
  <dd09l TABNAME="ZGLIF_MESS_STAT" AS4LOCAL="A" AS4VERS="0000" TABKAT="6" TABART="APPL1" SCHFELDANZ="000" BUFALLOW="N" ROWORCOLST="C"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="INTERFACE_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="ZGLIF_INTERFACE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000032" NOTNULL="X" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" DOMMASTER="D" DOMNAME3L="CHAR0016" SHLPORIGIN="D" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="FILENAME" DDLANGUAGE="E" POSITION="0003" KEYFLAG="X" ROLLNAME="ZGLIF_FILENAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000400" NOTNULL="X" DOMNAME="TEXT200" ROUTPUTLEN="000000" HEADLEN="40" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000200" OUTPUTLEN="000200" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Name of the original file" REPTEXT="Original data source name" SCRTEXT_S="Filename" SCRTEXT_M="Original datsrc.name" SCRTEXT_L="Original data source name" DOMNAME3L="TEXT200" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="BATCH_ID" DDLANGUAGE="E" POSITION="0004" KEYFLAG="X" ROLLNAME="ZGLIF_BATCH_ID" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" NOTNULL="X" DOMNAME="ZGLIF_BATCH_ID_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_BATCH" HEADLEN="08" SCRLEN1="08" SCRLEN2="08" SCRLEN3="08" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" LOWERCASE="X" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Batch ID" REPTEXT="Batch ID" SCRTEXT_S="Batch ID" SCRTEXT_M="Batch ID" SCRTEXT_L="Batch ID" DOMNAME3L="ZGLIF_BATCH_ID_DOM" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MESSAGE_ID" DDLANGUAGE="E" POSITION="0005" KEYFLAG="X" ROLLNAME="ZGLIF_MESSAGE_ID" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" NOTNULL="X" DOMNAME="ZGLIF_MESSAGE_ID_DOM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" LOWERCASE="X" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Message ID" REPTEXT="Message ID" SCRTEXT_S="Message ID" SCRTEXT_M="Message ID" SCRTEXT_L="Message ID" DOMNAME3L="ZGLIF_MESSAGE_ID_DOM" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="IDOC_NUMBER" DDLANGUAGE="E" POSITION="0006" KEYFLAG="X" ROLLNAME="ZGLIF_IDOC_NUMBER" ADMINFIELD="0" INTTYPE="N" INTLEN="000032" NOTNULL="X" DOMNAME="EDI_DOCNUM" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="08" SCRLEN2="11" SCRLEN3="11" DTELMASTER="E" DATATYPE="NUMC" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" MASK="  NUMCE" MASKLEN="0000" DDTEXT="GLIF: IDoc number" REPTEXT="IDoc Number" SCRTEXT_S="IDoc No." SCRTEXT_M="IDoc Number" SCRTEXT_L="IDoc Number" DOMNAME3L="EDI_DOCNUM" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MESSAGE_STATUS" DDLANGUAGE="E" POSITION="0007" ROLLNAME="ZGLIF_MESSAGE_STATUS" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Message status" REPTEXT="Message Status" SCRTEXT_S="M. Status" SCRTEXT_M="Message Status" SCRTEXT_L="Message Status" DOMNAME3L="ZGLIF_MESSAGE_STATUS_DOM" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="IDOC_STATUS" DDLANGUAGE="E" POSITION="0008" ROLLNAME="ZGLIF_IDOC_STATUS" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="EDI_STATUS" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" ENTITYTAB="TEDS1" MASK="  CHARE" MASKLEN="0000" DDTEXT="IDoc Status" REPTEXT="IDoc Status" SCRTEXT_S="IDoc Stat." SCRTEXT_M="IDoc Status" SCRTEXT_L="IDoc Status" DOMNAME3L="EDI_STATUS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGTY" DDLANGUAGE="E" POSITION="0009" ROLLNAME="ZGLIF_MSGTY" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="SYCHAR01" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="08" SCRLEN2="19" SCRLEN3="19" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Type" REPTEXT="Return Message Type" SCRTEXT_S="Msg Type" SCRTEXT_M="Return Message Type" SCRTEXT_L="Return Message Type" DOMNAME3L="SYCHAR01" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGID" DDLANGUAGE="E" POSITION="0010" ROLLNAME="ZGLIF_MSGID" ADMINFIELD="0" INTTYPE="C" INTLEN="000040" DOMNAME="ARBGB" ROUTPUTLEN="000000" HEADLEN="23" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000020" OUTPUTLEN="000020" DECIMALS="000000" ENTITYTAB="T100A" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Class ID" REPTEXT="Return Message Class ID" SCRTEXT_S="Class ID" SCRTEXT_M="Return Message Class" SCRTEXT_L="Return Message Class ID" DOMNAME3L="ARBGB" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGNO" DDLANGUAGE="E" POSITION="0011" ROLLNAME="ZGLIF_MSGNO" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" DOMNAME="MSGNR" ROUTPUTLEN="000000" HEADLEN="21" SCRLEN1="08" SCRLEN2="19" SCRLEN3="21" DTELMASTER="E" DATATYPE="CHAR" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T100" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Number" REPTEXT="Return Message Number" SCRTEXT_S="Msg. No." SCRTEXT_M="Return Mess. Number" SCRTEXT_L="Return Message Number" DOMNAME3L="MSGNR" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGV1" DDLANGUAGE="E" POSITION="0012" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGV2" DDLANGUAGE="E" POSITION="0013" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGV3" DDLANGUAGE="E" POSITION="0014" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGV4" DDLANGUAGE="E" POSITION="0015" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="CATEGORY" DDLANGUAGE="E" POSITION="0016" ROLLNAME="ZGLIF_CATEGORY" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="CHAR_30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Category" REPTEXT="Category" SCRTEXT_S="Category" SCRTEXT_M="Category" SCRTEXT_L="Category" DOMMASTER="D" DOMNAME3L="CHAR_30" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MESSAGE_CHANGED_ON" DDLANGUAGE="E" POSITION="0017" ROLLNAME="ZGLIF_CHANGED_ON" ADMINFIELD="0" INTTYPE="D" INTLEN="000016" DOMNAME="DATS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DTELMASTER="E" DATATYPE="DATS" LENG="000008" OUTPUTLEN="000010" DECIMALS="000000" MASK="  DATSE" MASKLEN="0000" DDTEXT="GLIF: Entry Changed On" REPTEXT="Changed On" SCRTEXT_S="Changed On" SCRTEXT_M="Changed On" SCRTEXT_L="Changed On" DOMMASTER="D" DOMNAME3L="DATS" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MESSAGE_CHANGED_AT" DDLANGUAGE="E" POSITION="0018" ROLLNAME="ZGLIF_CHANGED_AT" ADMINFIELD="0" INTTYPE="T" INTLEN="000012" DOMNAME="TIMS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DTELMASTER="E" DATATYPE="TIMS" LENG="000006" OUTPUTLEN="000008" DECIMALS="000000" MASK="  TIMSE" MASKLEN="0000" DDTEXT="GLIF: Entry Changed At" REPTEXT="Changed At" SCRTEXT_S="Changed At" SCRTEXT_M="Changed At" SCRTEXT_L="Changed At" DOMMASTER="D" DOMNAME3L="TIMS" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MESSAGE_CHANGED_BY" DDLANGUAGE="E" POSITION="0019" ROLLNAME="ZGLIF_CHANGED_USERNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Entry Changed By" REPTEXT="Changed By Username" SCRTEXT_S="Chngd By" SCRTEXT_M="Changed By" SCRTEXT_L="Changed By User" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
 <TABL TABNAME="ZGLIF_PRCTRCUST" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="Profit center discrepancy transformation table" AUTHCLASS="00" MAINFLAG="X" CONTFLAG="C" PROZPUFF="000" EXCLASS="3">
  <dd09l TABNAME="ZGLIF_PRCTRCUST" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL2" PUFFERUNG="X" SCHFELDANZ="000" PROTOKOLL="X" BUFALLOW="X" ROWORCOLST="C"/>
  <dd03p TABNAME="ZGLIF_PRCTRCUST" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_PRCTRCUST" FIELDNAME="INTERFACE_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="ZGLIF_INTERFACE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000032" NOTNULL="X" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" DOMMASTER="D" DOMNAME3L="CHAR0016" SHLPORIGIN="D" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_PRCTRCUST" FIELDNAME="VALID_FROM" DDLANGUAGE="E" POSITION="0003" KEYFLAG="X" ROLLNAME="VIM_BEGDA" ADMINFIELD="0" INTTYPE="D" INTLEN="000016" NOTNULL="X" DOMNAME="DATUM" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DATS" LENG="000008" OUTPUTLEN="000010" DECIMALS="000000" MASK="  DATSE" MASKLEN="0000" DDTEXT="View Maintenance: Start of Validity" REPTEXT="Start" SCRTEXT_S="Valid from" SCRTEXT_M="Valid From" SCRTEXT_L="Valid From" DOMNAME3L="DATUM" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_PRCTRCUST" FIELDNAME="VALID_TO" DDLANGUAGE="E" POSITION="0004" KEYFLAG="X" ROLLNAME="VIM_ENDDA" ADMINFIELD="0" INTTYPE="D" INTLEN="000016" NOTNULL="X" DOMNAME="DATUM" ROUTPUTLEN="000000" HEADLEN="10" SCRLEN1="01" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="DATS" LENG="000008" OUTPUTLEN="000010" DECIMALS="000000" MASK="  DATSE" MASKLEN="0000" DDTEXT="View Maintenance: End of Validity" REPTEXT="End" SCRTEXT_S="-" SCRTEXT_M="Valid To" SCRTEXT_L="Valid To" DOMNAME3L="DATUM" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_PRCTRCUST" FIELDNAME="BUKRS" DDLANGUAGE="E" POSITION="0005" KEYFLAG="X" ROLLNAME="BUKRS" ADMINFIELD="0" INTTYPE="C" INTLEN="000008" NOTNULL="X" DOMNAME="BUKRS" ROUTPUTLEN="000000" MEMORYID="BUK" LOGFLAG="X" HEADLEN="04" SCRLEN1="06" SCRLEN2="15" SCRLEN3="15" DTELMASTER="D" DATATYPE="CHAR" LENG="000004" OUTPUTLEN="000004" DECIMALS="000000" ENTITYTAB="T001" MASK="  CHARE" MASKLEN="0000" DDTEXT="Company Code" REPTEXT="CoCd" SCRTEXT_S="CoCode" SCRTEXT_M="Company Code" SCRTEXT_L="Company Code" DOMNAME3L="BUKRS" SHLPORIGIN="D" SHLPNAME="C_T001" SHLPFIELD="BUKRS" DEPTH="00" COMPTYPE="E" DEFFDNAME="COMP_CODE" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_PRCTRCUST" FIELDNAME="PRCTR_SOURCE" DDLANGUAGE="E" POSITION="0006" KEYFLAG="X" ROLLNAME="ZGLIF_PRCTR_SOURCE" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" NOTNULL="X" DOMNAME="CHAR10" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="20" SCRLEN3="20" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Source Profit Center" REPTEXT="Source Profit Center" SCRTEXT_S="Pr.C.Src." SCRTEXT_M="Source Profit Center" SCRTEXT_L="Source Profit Center" DOMNAME3L="CHAR10" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_PRCTRCUST" FIELDNAME="PRCTR_TARGET" DDLANGUAGE="E" POSITION="0007" ROLLNAME="ZGLIF_PRCTR_TARGET" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="PRCTR" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="09" SCRLEN2="20" SCRLEN3="20" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" ENTITYTAB="CEPC" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Source Profit Center" REPTEXT="Target Profit Center" SCRTEXT_S="Pr.C.Trg." SCRTEXT_M="Target Profit Center" SCRTEXT_L="Target Profit Center" DOMNAME3L="PRCTR" SHLPORIGIN="X" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd35v TABNAME="ZGLIF_PRCTRCUST" FIELDNAME="PRCTR_TARGET" SHLPNAME="PRCTR_EMPTY"/>
  <dd36m TABNAME="ZGLIF_PRCTRCUST" FIELDNAME="PRCTR_TARGET" SHLPNAME="PRCTR_EMPTY" SHLPFIELD="PRCTR" FLPOSITION="0001" SHTABLE="ZGLIF_PRCTRCUST" SHFIELD="PRCTR_TARGET" SHLPINPUT="X" SHLPOUTPUT="X" ROLLNAME="PRCTR" DOMNAME="PRCTR" DATATYPE="CHAR" LENG="000010" DECIMALS="000000"/>
 </TABL>
 <TABL TABNAME="ZGLIF_PROCCUST" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="GLIF: Processor Customization table" AUTHCLASS="00" MAINFLAG="X" CONTFLAG="C" PROZPUFF="000" EXCLASS="3">
  <dd09l TABNAME="ZGLIF_PROCCUST" AS4LOCAL="A" AS4VERS="0000" TABKAT="0" TABART="APPL2" PUFFERUNG="X" SCHFELDANZ="000" PROTOKOLL="X" BUFALLOW="X" ROWORCOLST="C"/>
  <dd03p TABNAME="ZGLIF_PROCCUST" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_PROCCUST" FIELDNAME="INTERFACE_NAME" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="ZGLIF_INTERFACE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000032" NOTNULL="X" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" DOMMASTER="D" DOMNAME3L="CHAR0016" SHLPORIGIN="D" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_PROCCUST" FIELDNAME="ACTIVE" DDLANGUAGE="E" POSITION="0003" ROLLNAME="ZGLIF_INTERFACE_ACTIVE" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="BOOLEAN_FLG" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Indicate status of the row: Active (X), Inactive (&apos; &apos;)" REPTEXT="Interface Active" SCRTEXT_S="Active" SCRTEXT_M="Active" SCRTEXT_L="Interface Active" DOMMASTER="D" DOMNAME3L="BOOLEAN_FLG" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_PROCCUST" FIELDNAME="RFCGR" DDLANGUAGE="E" POSITION="0004" ROLLNAME="RFCGR" CHECKTABLE="RZLLITAB" ADMINFIELD="0" INTTYPE="C" INTLEN="000040" DOMNAME="RZLLI_ACN" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000020" OUTPUTLEN="000020" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="RFC server group for parallel processing" REPTEXT="Server group" SCRTEXT_S="SrvGrp" SCRTEXT_M="Server group" SCRTEXT_L="Server group" DOMNAME3L="RZLLI_ACN" SHLPORIGIN="P" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd05m TABNAME="ZGLIF_PROCCUST" FIELDNAME="RFCGR" FORTABLE="ZGLIF_PROCCUST" FORKEY="RFCGR" CHECKTABLE="RZLLITAB" CHECKFIELD="CLASSNAME" PRIMPOS="0001" DOMNAME="RZLLI_ACN" DATATYPE="CHAR" LENG="000020"/>
  <dd05m TABNAME="ZGLIF_PROCCUST" FIELDNAME="RFCGR" FORTABLE="*" CHECKTABLE="RZLLITAB" CHECKFIELD="APPLSERVER" PRIMPOS="0002" DOMNAME="RZLLI_ASN" DATATYPE="CHAR" LENG="000020"/>
  <dd05m TABNAME="ZGLIF_PROCCUST" FIELDNAME="RFCGR" FORTABLE="&apos;S&apos;" CHECKTABLE="RZLLITAB" CHECKFIELD="GROUPTYPE" PRIMPOS="0003" DOMNAME="RZLLI_GRPT" DATATYPE="CHAR" LENG="000001"/>
  <dd08v TABNAME="ZGLIF_PROCCUST" FIELDNAME="RFCGR" DDLANGUAGE="E" CHECKTABLE="RZLLITAB" CLASFIELD="*"/>
 </TABL>
 <TABL TABNAME="ZGLIF_RETURN_MESSAGE" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="GLIF: Return Message" AUTHCLASS="00" MASTERLANG="E" PROZPUFF="000" EXCLASS="3">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZGLIF_RETURN_MESSAGE" FIELDNAME="STATUS" DDLANGUAGE="E" POSITION="0001" ROLLNAME="ZGLIF_IDOC_STATUS" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="EDI_STATUS" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" ENTITYTAB="TEDS1" MASK="  CHARE" MASKLEN="0000" DDTEXT="IDoc Status" REPTEXT="IDoc Status" SCRTEXT_S="IDoc Stat." SCRTEXT_M="IDoc Status" SCRTEXT_L="IDoc Status" DOMNAME3L="EDI_STATUS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_RETURN_MESSAGE" FIELDNAME="MSGTY" DDLANGUAGE="E" POSITION="0002" ROLLNAME="ZGLIF_MSGTY" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="SYCHAR01" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="08" SCRLEN2="19" SCRLEN3="19" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Type" REPTEXT="Return Message Type" SCRTEXT_S="Msg Type" SCRTEXT_M="Return Message Type" SCRTEXT_L="Return Message Type" DOMNAME3L="SYCHAR01" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_RETURN_MESSAGE" FIELDNAME="MSGID" DDLANGUAGE="E" POSITION="0003" ROLLNAME="ZGLIF_MSGID" ADMINFIELD="0" INTTYPE="C" INTLEN="000040" DOMNAME="ARBGB" ROUTPUTLEN="000000" HEADLEN="23" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000020" OUTPUTLEN="000020" DECIMALS="000000" ENTITYTAB="T100A" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Class ID" REPTEXT="Return Message Class ID" SCRTEXT_S="Class ID" SCRTEXT_M="Return Message Class" SCRTEXT_L="Return Message Class ID" DOMNAME3L="ARBGB" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_RETURN_MESSAGE" FIELDNAME="MSGNO" DDLANGUAGE="E" POSITION="0004" ROLLNAME="ZGLIF_MSGNO" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" DOMNAME="MSGNR" ROUTPUTLEN="000000" HEADLEN="21" SCRLEN1="08" SCRLEN2="19" SCRLEN3="21" DTELMASTER="E" DATATYPE="CHAR" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T100" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Number" REPTEXT="Return Message Number" SCRTEXT_S="Msg. No." SCRTEXT_M="Return Mess. Number" SCRTEXT_L="Return Message Number" DOMNAME3L="MSGNR" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_RETURN_MESSAGE" FIELDNAME="MSGV1" DDLANGUAGE="E" POSITION="0005" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_RETURN_MESSAGE" FIELDNAME="MSGV2" DDLANGUAGE="E" POSITION="0006" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_RETURN_MESSAGE" FIELDNAME="MSGV3" DDLANGUAGE="E" POSITION="0007" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_RETURN_MESSAGE" FIELDNAME="MSGV4" DDLANGUAGE="E" POSITION="0008" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
 <TABL TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" DDLANGUAGE="E" TABCLASS="INTTAB" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" DDTEXT="Structure for output of ZGLIF_ERROR_MONITOR" AUTHCLASS="00" MASTERLANG="E" PROZPUFF="000" EXCLASS="3">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="GROUP_NUMBER" DDLANGUAGE="E" POSITION="0001" ADMINFIELD="0" INTTYPE="C" INTLEN="000016" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000008" OUTPUTLEN="000000" DECIMALS="000000" MASK="  CHAR" MASKLEN="0000" DDTEXT="Group number [technical field]" DEPTH="00" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="INTERFACE_NAME" DDLANGUAGE="E" POSITION="0002" ROLLNAME="ZGLIF_INTERFACE_NAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000032" DOMNAME="CHAR0016" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" DOMMASTER="D" DOMNAME3L="CHAR0016" SHLPORIGIN="D" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="BATCH_ID" DDLANGUAGE="E" POSITION="0003" ROLLNAME="ZGLIF_BATCH_ID" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="ZGLIF_BATCH_ID_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_BATCH" HEADLEN="08" SCRLEN1="08" SCRLEN2="08" SCRLEN3="08" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" LOWERCASE="X" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Batch ID" REPTEXT="Batch ID" SCRTEXT_S="Batch ID" SCRTEXT_M="Batch ID" SCRTEXT_L="Batch ID" DOMNAME3L="ZGLIF_BATCH_ID_DOM" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="BATCH_STATUS" DDLANGUAGE="E" POSITION="0004" ROLLNAME="ZGLIF_BATCH_STATUS" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="ZGLIF_BATCH_STATUS_DOM" ROUTPUTLEN="000000" HEADLEN="12" SCRLEN1="06" SCRLEN2="12" SCRLEN3="12" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Batch Status" REPTEXT="Batch Status" SCRTEXT_S="Status" SCRTEXT_M="Batch Status" SCRTEXT_L="Batch Status" DOMNAME3L="ZGLIF_BATCH_STATUS_DOM" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="BATCH_STATUS_TEXT" DDLANGUAGE="E" POSITION="0005" ROLLNAME="TEXT30" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="TEXT30" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Text (30 Characters)" REPTEXT="Text" SCRTEXT_S="Text" SCRTEXT_M="Text" SCRTEXT_L="Text" DOMNAME3L="TEXT30" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="BATCH_CHANGED_ON" DDLANGUAGE="E" POSITION="0006" ROLLNAME="ZGLIF_CHANGED_ON" ADMINFIELD="0" INTTYPE="D" INTLEN="000016" DOMNAME="DATS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DTELMASTER="E" DATATYPE="DATS" LENG="000008" OUTPUTLEN="000010" DECIMALS="000000" MASK="  DATSE" MASKLEN="0000" DDTEXT="GLIF: Entry Changed On" REPTEXT="Changed On" SCRTEXT_S="Changed On" SCRTEXT_M="Changed On" SCRTEXT_L="Changed On" DOMMASTER="D" DOMNAME3L="DATS" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="BATCH_CHANGED_AT" DDLANGUAGE="E" POSITION="0007" ROLLNAME="ZGLIF_CHANGED_AT" ADMINFIELD="0" INTTYPE="T" INTLEN="000012" DOMNAME="TIMS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DTELMASTER="E" DATATYPE="TIMS" LENG="000006" OUTPUTLEN="000008" DECIMALS="000000" MASK="  TIMSE" MASKLEN="0000" DDTEXT="GLIF: Entry Changed At" REPTEXT="Changed At" SCRTEXT_S="Changed At" SCRTEXT_M="Changed At" SCRTEXT_L="Changed At" DOMMASTER="D" DOMNAME3L="TIMS" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="BATCH_CHANGED_BY" DDLANGUAGE="E" POSITION="0008" ROLLNAME="ZGLIF_CHANGED_USERNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Entry Changed By" REPTEXT="Changed By Username" SCRTEXT_S="Chngd By" SCRTEXT_M="Changed By" SCRTEXT_L="Changed By User" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="FILENAME" DDLANGUAGE="E" POSITION="0009" ROLLNAME="ZGLIF_FILENAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000400" DOMNAME="TEXT200" ROUTPUTLEN="000000" HEADLEN="40" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000200" OUTPUTLEN="000200" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Name of the original file" REPTEXT="Original data source name" SCRTEXT_S="Filename" SCRTEXT_M="Original datsrc.name" SCRTEXT_L="Original data source name" DOMNAME3L="TEXT200" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="MESSAGE_ID" DDLANGUAGE="E" POSITION="0010" ROLLNAME="ZGLIF_MESSAGE_ID" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="ZGLIF_MESSAGE_ID_DOM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" LOWERCASE="X" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Message ID" REPTEXT="Message ID" SCRTEXT_S="Message ID" SCRTEXT_M="Message ID" SCRTEXT_L="Message ID" DOMNAME3L="ZGLIF_MESSAGE_ID_DOM" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="MESSAGE_STATUS" DDLANGUAGE="E" POSITION="0011" ROLLNAME="ZGLIF_MESSAGE_STATUS" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Message status" REPTEXT="Message Status" SCRTEXT_S="M. Status" SCRTEXT_M="Message Status" SCRTEXT_L="Message Status" DOMNAME3L="ZGLIF_MESSAGE_STATUS_DOM" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="MESSAGE_STATUS_TEXT" DDLANGUAGE="E" POSITION="0012" ROLLNAME="TEXT30" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="TEXT30" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Text (30 Characters)" REPTEXT="Text" SCRTEXT_S="Text" SCRTEXT_M="Text" SCRTEXT_L="Text" DOMNAME3L="TEXT30" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="IDOC_NUMBER" DDLANGUAGE="E" POSITION="0013" ROLLNAME="ZGLIF_IDOC_NUMBER" ADMINFIELD="0" INTTYPE="N" INTLEN="000032" DOMNAME="EDI_DOCNUM" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="08" SCRLEN2="11" SCRLEN3="11" DTELMASTER="E" DATATYPE="NUMC" LENG="000016" OUTPUTLEN="000016" DECIMALS="000000" MASK="  NUMCE" MASKLEN="0000" DDTEXT="GLIF: IDoc number" REPTEXT="IDoc Number" SCRTEXT_S="IDoc No." SCRTEXT_M="IDoc Number" SCRTEXT_L="IDoc Number" DOMNAME3L="EDI_DOCNUM" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="IDOC_STATUS" DDLANGUAGE="E" POSITION="0014" ROLLNAME="ZGLIF_IDOC_STATUS" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="EDI_STATUS" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" ENTITYTAB="TEDS1" MASK="  CHARE" MASKLEN="0000" DDTEXT="IDoc Status" REPTEXT="IDoc Status" SCRTEXT_S="IDoc Stat." SCRTEXT_M="IDoc Status" SCRTEXT_L="IDoc Status" DOMNAME3L="EDI_STATUS" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="IDOC_STATUS_TEXT" DDLANGUAGE="E" POSITION="0015" ROLLNAME="EDI_TEXT60" ADMINFIELD="0" INTTYPE="C" INTLEN="000120" DOMNAME="TEXT60" ROUTPUTLEN="000000" HEADLEN="12" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000060" OUTPUTLEN="000060" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Short description of object" REPTEXT="Description" SCRTEXT_S="Descr." SCRTEXT_M="Description" SCRTEXT_L="Short text" DOMNAME3L="TEXT60" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="RETURN_MESSAGE" DDLANGUAGE="E" POSITION="0016" ADMINFIELD="0" INTTYPE="C" INTLEN="000200" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="00" SCRLEN2="00" SCRLEN3="00" DATATYPE="CHAR" LENG="000100" OUTPUTLEN="000000" DECIMALS="000000" MASK="  CHAR" MASKLEN="0000" DDTEXT="GLIF: Return Message" DEPTH="00" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="MSGTY" DDLANGUAGE="E" POSITION="0017" ROLLNAME="ZGLIF_MSGTY" ADMINFIELD="0" INTTYPE="C" INTLEN="000002" DOMNAME="SYCHAR01" ROUTPUTLEN="000000" HEADLEN="19" SCRLEN1="08" SCRLEN2="19" SCRLEN3="19" DTELMASTER="E" DATATYPE="CHAR" LENG="000001" OUTPUTLEN="000001" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Type" REPTEXT="Return Message Type" SCRTEXT_S="Msg Type" SCRTEXT_M="Return Message Type" SCRTEXT_L="Return Message Type" DOMNAME3L="SYCHAR01" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="MSGID" DDLANGUAGE="E" POSITION="0018" ROLLNAME="ZGLIF_MSGID" ADMINFIELD="0" INTTYPE="C" INTLEN="000040" DOMNAME="ARBGB" ROUTPUTLEN="000000" HEADLEN="23" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000020" OUTPUTLEN="000020" DECIMALS="000000" ENTITYTAB="T100A" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Class ID" REPTEXT="Return Message Class ID" SCRTEXT_S="Class ID" SCRTEXT_M="Return Message Class" SCRTEXT_L="Return Message Class ID" DOMNAME3L="ARBGB" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="MSGNO" DDLANGUAGE="E" POSITION="0019" ROLLNAME="ZGLIF_MSGNO" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" DOMNAME="MSGNR" ROUTPUTLEN="000000" HEADLEN="21" SCRLEN1="08" SCRLEN2="19" SCRLEN3="21" DTELMASTER="E" DATATYPE="CHAR" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T100" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Number" REPTEXT="Return Message Number" SCRTEXT_S="Msg. No." SCRTEXT_M="Return Mess. Number" SCRTEXT_L="Return Message Number" DOMNAME3L="MSGNR" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="MSGV1" DDLANGUAGE="E" POSITION="0020" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="MSGV2" DDLANGUAGE="E" POSITION="0021" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="MSGV3" DDLANGUAGE="E" POSITION="0022" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="MSGV4" DDLANGUAGE="E" POSITION="0023" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" ROUTPUTLEN="000000" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" DTELMASTER="E" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="CATEGORY" DDLANGUAGE="E" POSITION="0024" ROLLNAME="ZGLIF_CATEGORY_ID" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="ZGLIF_CATEGORY_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_CATEGORY" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Category ID" REPTEXT="Category ID" SCRTEXT_S="CategoryID" SCRTEXT_M="Category ID" SCRTEXT_L="Category ID" DOMNAME3L="ZGLIF_CATEGORY_DOM" SHLPORIGIN="D" SHLPNAME="ZGLIF_ERR_CATEG" SHLPFIELD="ID" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="CATEGORY_TEXT" DDLANGUAGE="E" POSITION="0025" ROLLNAME="ZGLIF_CATEGORY" ADMINFIELD="0" INTTYPE="C" INTLEN="000060" DOMNAME="CHAR_30" ROUTPUTLEN="000000" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000030" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Category" REPTEXT="Category" SCRTEXT_S="Category" SCRTEXT_M="Category" SCRTEXT_L="Category" DOMMASTER="D" DOMNAME3L="CHAR_30" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="MESSAGE_CHANGED_ON" DDLANGUAGE="E" POSITION="0026" ROLLNAME="ZGLIF_CHANGED_ON" ADMINFIELD="0" INTTYPE="D" INTLEN="000016" DOMNAME="DATS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DTELMASTER="E" DATATYPE="DATS" LENG="000008" OUTPUTLEN="000010" DECIMALS="000000" MASK="  DATSE" MASKLEN="0000" DDTEXT="GLIF: Entry Changed On" REPTEXT="Changed On" SCRTEXT_S="Changed On" SCRTEXT_M="Changed On" SCRTEXT_L="Changed On" DOMMASTER="D" DOMNAME3L="DATS" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="MESSAGE_CHANGED_AT" DDLANGUAGE="E" POSITION="0027" ROLLNAME="ZGLIF_CHANGED_AT" ADMINFIELD="0" INTTYPE="T" INTLEN="000012" DOMNAME="TIMS" ROUTPUTLEN="000000" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" DTELMASTER="E" DATATYPE="TIMS" LENG="000006" OUTPUTLEN="000008" DECIMALS="000000" MASK="  TIMSE" MASKLEN="0000" DDTEXT="GLIF: Entry Changed At" REPTEXT="Changed At" SCRTEXT_S="Changed At" SCRTEXT_M="Changed At" SCRTEXT_L="Changed At" DOMMASTER="D" DOMNAME3L="TIMS" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_ERROR_MONITOR_OUTPUT" FIELDNAME="MESSAGE_CHANGED_BY" DDLANGUAGE="E" POSITION="0028" ROLLNAME="ZGLIF_CHANGED_USERNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Entry Changed By" REPTEXT="Changed By Username" SCRTEXT_S="Chngd By" SCRTEXT_M="Changed By" SCRTEXT_L="Changed By User" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
 <TABL TABNAME="ZGLIF_BOOKNG_WS" DDLANGUAGE="E" TABCLASS="TRANSP" DATMIN="0000000000" DATMAX="0000000000" DATAVG="0000000000" CLIDEP="X" DDTEXT="GLIF: Data table for storing webservice data from BookNG" AUTHCLASS="00" MASTERLANG="E" MAINFLAG="X" CONTFLAG="A" PROZPUFF="000" EXCLASS="1">
  <dd09l TABNAME="ZGLIF_BOOKNG_WS" AS4LOCAL="A" AS4VERS="0000" TABKAT="9" TABART="APPL1" SCHFELDANZ="000" BUFALLOW="N" ROWORCOLST="C"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="MANDT" DDLANGUAGE="E" POSITION="0001" KEYFLAG="X" ROLLNAME="MANDT" ADMINFIELD="0" INTTYPE="C" INTLEN="000006" NOTNULL="X" DOMNAME="MANDT" ROUTPUTLEN="000000" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CLNT" LENG="000003" OUTPUTLEN="000003" DECIMALS="000000" ENTITYTAB="T000" MASK="  CLNTE" MASKLEN="0000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" DOMNAME3L="MANDT" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="BATCH_ID" DDLANGUAGE="E" POSITION="0002" KEYFLAG="X" ROLLNAME="ZGLIF_BATCH_ID" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" NOTNULL="X" DOMNAME="ZGLIF_BATCH_ID_DOM" ROUTPUTLEN="000000" MEMORYID="ZGLIF_BATCH" HEADLEN="08" SCRLEN1="08" SCRLEN2="08" SCRLEN3="08" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" LOWERCASE="X" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Batch ID" REPTEXT="Batch ID" SCRTEXT_S="Batch ID" SCRTEXT_M="Batch ID" SCRTEXT_L="Batch ID" DOMNAME3L="ZGLIF_BATCH_ID_DOM" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="MESSAGE_ID" DDLANGUAGE="E" POSITION="0003" KEYFLAG="X" ROLLNAME="ZBOOKNG_ID_MESSAGE" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" NOTNULL="X" DOMNAME="CHAR10" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="BookNG: Message ID" REPTEXT="Message ID" SCRTEXT_S="MessageID" SCRTEXT_M="Message ID" SCRTEXT_L="Message ID" DOMNAME3L="CHAR10" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="ITEM" DDLANGUAGE="E" POSITION="0004" KEYFLAG="X" ROLLNAME="ZGLIF_ITEM" ADMINFIELD="0" INTTYPE="N" INTLEN="000012" NOTNULL="X" ROUTPUTLEN="000000" HEADLEN="06" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="NUMC" LENG="000006" OUTPUTLEN="000006" DECIMALS="000000" MASK="  NUMCE" MASKLEN="0000" DDTEXT="GLIF Item number" REPTEXT="Item" SCRTEXT_S="Item" SCRTEXT_M="Item" SCRTEXT_L="Item" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="MESSAGE_STATUS" DDLANGUAGE="E" POSITION="0005" ROLLNAME="ZGLIF_MESSAGE_STATUS" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="GLIF: Message status" REPTEXT="Message Status" SCRTEXT_S="M. Status" SCRTEXT_M="Message Status" SCRTEXT_L="Message Status" DOMNAME3L="ZGLIF_MESSAGE_STATUS_DOM" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="COMPANY_CODE" DDLANGUAGE="E" POSITION="0006" ROLLNAME="BUKRS" ADMINFIELD="0" INTTYPE="C" INTLEN="000008" DOMNAME="BUKRS" ROUTPUTLEN="000000" MEMORYID="BUK" LOGFLAG="X" HEADLEN="04" SCRLEN1="06" SCRLEN2="15" SCRLEN3="15" DTELMASTER="D" DATATYPE="CHAR" LENG="000004" OUTPUTLEN="000004" DECIMALS="000000" ENTITYTAB="T001" MASK="  CHARE" MASKLEN="0000" DDTEXT="Company Code" REPTEXT="CoCd" SCRTEXT_S="CoCode" SCRTEXT_M="Company Code" SCRTEXT_L="Company Code" DOMNAME3L="BUKRS" SHLPORIGIN="D" SHLPNAME="C_T001" SHLPFIELD="BUKRS" DEPTH="00" COMPTYPE="E" DEFFDNAME="COMP_CODE" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="DOCUMENT_DATE" DDLANGUAGE="E" POSITION="0007" ROLLNAME="ZBOOKNG_DOCUMENT_DATE" ADMINFIELD="0" INTTYPE="C" INTLEN="000016" DOMNAME="CHAR8" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000008" OUTPUTLEN="000008" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="BookNG: Document Date (like BLDAT as char8, not DATS)" REPTEXT="Document Date" SCRTEXT_S="DocDate" SCRTEXT_M="Document Date" SCRTEXT_L="Document Date" DOMNAME3L="CHAR8" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="POSTING_DATE" DDLANGUAGE="E" POSITION="0008" ROLLNAME="ZBOOKNG_POSTING_DATE" ADMINFIELD="0" INTTYPE="C" INTLEN="000016" DOMNAME="CHAR8" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="12" SCRLEN1="08" SCRLEN2="12" SCRLEN3="12" DTELMASTER="E" DATATYPE="CHAR" LENG="000008" OUTPUTLEN="000008" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="BookNG: Posting Date (like BUDAT as char8, not DATS)" REPTEXT="Posting Date" SCRTEXT_S="PostDate" SCRTEXT_M="Posting Date" SCRTEXT_L="Posting Date" DOMNAME3L="CHAR8" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="LEDGER_GROUP" DDLANGUAGE="E" POSITION="0009" ROLLNAME="ZBOOKNG_LEDGER_GROUP" ADMINFIELD="0" INTTYPE="C" INTLEN="000010" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000005" OUTPUTLEN="000005" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="BOOKNG Ledger Group" REPTEXT="Ledger Group BOOK" SCRTEXT_S="Led. Gr. B" SCRTEXT_M="Ledger Group BOOK" SCRTEXT_L="Ledger Group BOOK" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="HEADER_TEXT" DDLANGUAGE="E" POSITION="0010" ROLLNAME="BKTXT" ADMINFIELD="0" INTTYPE="C" INTLEN="000050" DOMNAME="TEXT25" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="25" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000025" OUTPUTLEN="000025" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Document Header Text" REPTEXT="Document Header Text" SCRTEXT_S="HeaderText" SCRTEXT_M="Doc.Header Text" SCRTEXT_L="Document Header Text" DOMNAME3L="TEXT25" DEPTH="00" COMPTYPE="E" DEFFDNAME="HEADER_TXT" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="DEBIT_CREDIT" DDLANGUAGE="E" POSITION="0011" ROLLNAME="ZBOOKNG_DEBIT_CREDIT" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="ZBOOKNG_DEBIT_CREDIT" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="22" SCRLEN1="05" SCRLEN2="20" SCRLEN3="22" DTELMASTER="E" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" VALEXI="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="BookNG: Debit/Credit indicator" REPTEXT="Debit/Credit indicator" SCRTEXT_S="Dr/Cr" SCRTEXT_M="Debit/Credit indicat" SCRTEXT_L="Debit/Credit indicator" DOMNAME3L="ZBOOKNG_DEBIT_CREDIT" SHLPORIGIN="F" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="GL_ACCOUNT" DDLANGUAGE="E" POSITION="0012" ROLLNAME="HKONT" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="SAKNR" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="10" SCRLEN1="07" SCRLEN2="12" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" ENTITYTAB="SKA1" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="General Ledger Account" REPTEXT="G/L" SCRTEXT_S="G/L Acc" SCRTEXT_M="G/L Acct" SCRTEXT_L="G/L Account" DOMNAME3L="SAKNR" DEPTH="00" COMPTYPE="E" DEFFDNAME="GL_ACCOUNT" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="AMOUNT" DDLANGUAGE="E" POSITION="0013" ROLLNAME="WRBTR" ADMINFIELD="0" INTTYPE="P" INTLEN="000012" REFTABLE="BKPF" REFFIELD="WAERS" DOMNAME="AFLE13D2O16N_TO_23D2O30N" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CURR" LENG="000023" OUTPUTLEN="000030" DECIMALS="000002" CONVEXIT="AU132" MASK="  CURRE" MASKLEN="0000" DDTEXT="Amount in document currency" REPTEXT="Amount" SCRTEXT_S="Amount" SCRTEXT_M="Amount" SCRTEXT_L="Amount" DOMNAME3L="AFLE13D2O16N_TO_23D2O30N" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="VALUE_DATE" DDLANGUAGE="E" POSITION="0014" ROLLNAME="ZBOOKNG_VALUE_DATE" ADMINFIELD="0" INTTYPE="C" INTLEN="000016" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000008" OUTPUTLEN="000008" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="BOOKNG Value Date char8 not Dats" REPTEXT="Values Date" SCRTEXT_S="Val. Date" SCRTEXT_M="Values Date" SCRTEXT_L="Values Date" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="PROFIT_CENTER" DDLANGUAGE="E" POSITION="0015" ROLLNAME="PRCTR" ADMINFIELD="0" INTTYPE="C" INTLEN="000020" DOMNAME="PRCTR" ROUTPUTLEN="000000" MEMORYID="PRC" LOGFLAG="X" HEADLEN="10" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000010" OUTPUTLEN="000010" DECIMALS="000000" ENTITYTAB="CEPC" CONVEXIT="ALPHA" MASK="  CHARE" MASKLEN="0000" DDTEXT="Profit Center" REPTEXT="Profit Ctr" SCRTEXT_S="Profit Ctr" SCRTEXT_M="Profit Center" SCRTEXT_L="Profit Center" DOMNAME3L="PRCTR" SHLPORIGIN="D" SHLPNAME="PRCTR_EMPTY" SHLPFIELD="PRCTR" DEPTH="00" COMPTYPE="E" DEFFDNAME="PROFIT_CTR" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="BUSINESS_AREA" DDLANGUAGE="E" POSITION="0016" ROLLNAME="GSBER" ADMINFIELD="0" INTTYPE="C" INTLEN="000008" DOMNAME="GSBER" ROUTPUTLEN="000000" MEMORYID="GSB" LOGFLAG="X" HEADLEN="04" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000004" OUTPUTLEN="000004" DECIMALS="000000" ENTITYTAB="TGSB" MASK="  CHARE" MASKLEN="0000" DDTEXT="Business Area" REPTEXT="BusA" SCRTEXT_S="Bus. Area" SCRTEXT_M="Business Area" SCRTEXT_L="Business Area" DOMNAME3L="GSBER" DEPTH="00" COMPTYPE="E" DEFFDNAME="BUS_AREA" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="SEGMENT" DDLANGUAGE="E" POSITION="0017" ROLLNAME="ZBOOKNG_SEGMENT_SOURCE" ADMINFIELD="0" INTTYPE="C" INTLEN="000040" DOMNAME="TEXT20" ROUTPUTLEN="000000" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" DTELMASTER="E" DATATYPE="CHAR" LENG="000020" OUTPUTLEN="000020" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="BOOKNG Segment Source" REPTEXT="Segment BOOK" SCRTEXT_S="Segment B." SCRTEXT_M="Segment BOOK" SCRTEXT_L="Segment BOOK" DOMNAME3L="TEXT20" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="ITEM_TEXT" DDLANGUAGE="E" POSITION="0018" ROLLNAME="SGTXT" ADMINFIELD="0" INTTYPE="C" INTLEN="000100" DOMNAME="TEXT50" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="50" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000050" OUTPUTLEN="000050" DECIMALS="000000" LOWERCASE="X" MASK="  CHARE" MASKLEN="0000" DDTEXT="Item Text" REPTEXT="Text" SCRTEXT_S="Text" SCRTEXT_M="Text" SCRTEXT_L="Text" DOMNAME3L="TEXT50" DEPTH="00" COMPTYPE="E" DEFFDNAME="ITEM_TEXT" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="REFERENCE1" DDLANGUAGE="E" POSITION="0019" ROLLNAME="XREF1" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="CHAR12" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="12" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Business Partner Reference Key" REPTEXT="Ref. Key 1" SCRTEXT_S="Ref. Key 1" SCRTEXT_M="Reference Key 1" SCRTEXT_L="Reference Key 1" DOMNAME3L="CHAR12" DEPTH="00" COMPTYPE="E" DEFFDNAME="REF_KEY_1" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="REFERENCE2" DDLANGUAGE="E" POSITION="0020" ROLLNAME="XREF2" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="CHAR12" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="12" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Business Partner Reference Key" REPTEXT="Ref. Key 2" SCRTEXT_S="Ref. Key 2" SCRTEXT_M="Reference Key 2" SCRTEXT_L="Reference Key 2" DOMNAME3L="CHAR12" DEPTH="00" COMPTYPE="E" DEFFDNAME="REF_KEY_2" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="REFERENCE3" DDLANGUAGE="E" POSITION="0021" ROLLNAME="XREF3" ADMINFIELD="0" INTTYPE="C" INTLEN="000040" DOMNAME="CHAR20" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="12" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000020" OUTPUTLEN="000020" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="Reference key for line item" REPTEXT="Ref. key 3" SCRTEXT_S="RefKey 3" SCRTEXT_M="Reference key 3" SCRTEXT_L="Reference key 3" DOMNAME3L="CHAR20" DEPTH="00" COMPTYPE="E" DEFFDNAME="REF_KEY_3" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="TAX_CODE" DDLANGUAGE="E" POSITION="0022" ROLLNAME="MWSKZ" ADMINFIELD="0" INTTYPE="C" INTLEN="000004" DOMNAME="MWSKZ" ROUTPUTLEN="000000" LOGFLAG="X" HEADLEN="02" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000002" OUTPUTLEN="000002" DECIMALS="000000" ENTITYTAB="T007A" MASK="  CHARE" MASKLEN="0000" DDTEXT="Tax on sales/purchases code" REPTEXT="Tx" SCRTEXT_S="Tax Code" SCRTEXT_M="Tax Code" SCRTEXT_L="Tax Code" DOMNAME3L="MWSKZ" DEPTH="00" COMPTYPE="E" DEFFDNAME="TAX_CODE" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="CHANGED_ON" DDLANGUAGE="E" POSITION="0023" ROLLNAME="DATUM" ADMINFIELD="0" INTTYPE="D" INTLEN="000016" DOMNAME="DATUM" ROUTPUTLEN="000000" HEADLEN="00" SCRLEN1="05" SCRLEN2="05" SCRLEN3="05" DTELMASTER="D" DATATYPE="DATS" LENG="000008" OUTPUTLEN="000010" DECIMALS="000000" MASK="  DATSE" MASKLEN="0000" DDTEXT="Date" SCRTEXT_S="Date" SCRTEXT_M="Date" SCRTEXT_L="Date" DOMNAME3L="DATUM" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="CHANGED_AT" DDLANGUAGE="E" POSITION="0024" ROLLNAME="UZEIT" ADMINFIELD="0" INTTYPE="T" INTLEN="000012" DOMNAME="UZEIT" ROUTPUTLEN="000000" HEADLEN="08" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DATATYPE="TIMS" LENG="000006" OUTPUTLEN="000008" DECIMALS="000000" MASK="  TIMSE" MASKLEN="0000" DDTEXT="Time" REPTEXT="Time" SCRTEXT_S="Time" SCRTEXT_M="Time" SCRTEXT_L="Time" DOMNAME3L="UZEIT" SHLPORIGIN="T" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
  <dd03p TABNAME="ZGLIF_BOOKNG_WS" FIELDNAME="CHANGED_BY" DDLANGUAGE="E" POSITION="0025" ROLLNAME="UNAME" ADMINFIELD="0" INTTYPE="C" INTLEN="000024" DOMNAME="UNAME" ROUTPUTLEN="000000" HEADLEN="20" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" DTELMASTER="D" DATATYPE="CHAR" LENG="000012" OUTPUTLEN="000012" DECIMALS="000000" MASK="  CHARE" MASKLEN="0000" DDTEXT="User Name" REPTEXT="User Name" SCRTEXT_S="User" SCRTEXT_M="User Name" SCRTEXT_L="User Name" DOMNAME3L="UNAME" DEPTH="00" COMPTYPE="E" EXCLASS="0" DBPOSITION="0000" OUTPUTSTYLE="00" STRORLOCPOS="00" SRS_ID="0000000000"/>
 </TABL>
 <TRAN TCODE="Y_SDX_97000002" PGMNA="SAPLS_CUS_IMG_ACTIVITY" DYPNO="0200" TYPE="D" S_WEBGUI="1" S_WIN32="X" S_PLATIN="X" MASTERLANG="E"/>
 <TRAN TCODE="Y_SDX_97000001" PGMNA="SAPLS_CUS_IMG_ACTIVITY" DYPNO="0200" TYPE="D" S_WEBGUI="1" S_WIN32="X" S_PLATIN="X" MASTERLANG="E"/>
 <TRAN TCODE="Y_SDX_97000003" PGMNA="SAPLS_CUS_IMG_ACTIVITY" DYPNO="0200" TYPE="D" S_WEBGUI="1" S_WIN32="X" S_PLATIN="X" MASTERLANG="E"/>
 <TRAN TCODE="Y_SDX_97000004" PGMNA="SAPLS_CUS_IMG_ACTIVITY" DYPNO="0200" TYPE="D" S_WEBGUI="1" S_WIN32="X" S_PLATIN="X" MASTERLANG="E"/>
 <TRAN TCODE="ZGLIF_ACTIVATE" PGMNA="ZGLIF_ACTIVATE" DYPNO="1000" TYPE="R" S_WEBGUI="1" S_WIN32="X" MASTERLANG="E" TTEXT="GLIF: Activate interface"/>
 <TRAN TCODE="ZGLIF_CUSTOMIZATION" DYPNO="0000" TCODE_CALL="SM34" TYPE="P" SKIP_SCREEN="X" S_WEBGUI="1" S_WIN32="X" S_PLATIN="X" MASTERLANG="E" TTEXT="GLIF customization">
  <params FIELD="VCLDIR-VCLNAME" VALUE="ZGLIF_CUSTOMIZATION"/>
  <params FIELD="UPDATE" VALUE="X"/>
 </TRAN>
 <TRAN TCODE="ZGLIF_MONITOR" PGMNA="ZGLIF_MONITOR" DYPNO="1000" TYPE="R" S_WEBGUI="1" S_WIN32="X" MASTERLANG="E" TTEXT="GLIF: Monitor"/>
 <TTYP TYPENAME="ZGLIF_BATCH_STAT_TT" DDLANGUAGE="E" ROWTYPE="ZGLIF_BATCH_STAT" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="GLIF: Batch status table type" TYPELEN="000114" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZGLIF_BOOKNG_WS_TT" DDLANGUAGE="E" ROWTYPE="ZGLIF_BOOKNG_WS" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="GLIF: Table type for webservice data of BookNG" TYPELEN="000542" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZGLIF_BTCH_MSG_TT" DDLANGUAGE="E" ROWTYPE="ZGLIF_BTCH_MSG" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="Table type for zglif_btch_msg" TYPELEN="001140" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZGLIF_ERROR_MONITOR_OUTPUT_TT" DDLANGUAGE="E" ROWTYPE="ZGLIF_ERROR_MONITOR_OUTPUT" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="Table type for output of ZGLIF_ERROR_MONITOR" TYPELEN="001588" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <TTYP TYPENAME="ZGLIF_MESS_STAT_TT" DDLANGUAGE="E" ROWTYPE="ZGLIF_MESS_STAT" ROWKIND="S" DATATYPE="STRU" LENG="000000" DECIMALS="000000" ACCESSMODE="T" KEYDEF="D" KEYKIND="N" KEYFDCOUNT="0000" DDTEXT="Table type for zglif_mess_stat" TYPELEN="001078" CTLENG="000000" CTDECIMALS="000000" OCCURS="00000"/>
 <VCLS VCLNAME="ZGLIF_CUSTOMIZATION" CHANGEDATE="20170823" TEXT="GLIF customization">
  <vclstruc VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_DISPCUST" OBJECTTEXT="Dispatcher customization" PREDOBJECT="ZGLIF_DISPCUST" DEPENDENCY="R" OBJPOS="01" OBJLEVEL="01" STARTOBJ="X"/>
  <vclstruc VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_FEEDCUST" OBJECTTEXT="Feeder customization" PREDOBJECT="ZGLIF_DISPCUST" DEPENDENCY="S" OBJPOS="02" OBJLEVEL="02"/>
  <vclstruc VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_CONVCUST" OBJECTTEXT="Convertor customization" PREDOBJECT="ZGLIF_DISPCUST" DEPENDENCY="S" OBJPOS="03" OBJLEVEL="02"/>
  <vclstruc VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_PROCCUST" OBJECTTEXT="Processor Customization" PREDOBJECT="ZGLIF_DISPCUST" DEPENDENCY="S" OBJPOS="04" OBJLEVEL="02"/>
  <vclstruc VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_PRCTRCUST" OBJECTTEXT="Processor customization: Profit Center" PREDOBJECT="ZGLIF_DISPCUST" DEPENDENCY="S" OBJPOS="05" OBJLEVEL="02"/>
  <vclstruc VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_ERR_CATEG" OBJECTTEXT="Error Category list" PREDOBJECT="ZGLIF_DISPCUST" DEPENDENCY="S" OBJPOS="06" OBJLEVEL="02"/>
  <vclstruc VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_ERRORCUS_V" OBJECTTEXT="Error assignment to Error Category" PREDOBJECT="ZGLIF_DISPCUST" DEPENDENCY="S" OBJPOS="07" OBJLEVEL="02"/>
  <vclstruc VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_HANDLECUST" OBJECTTEXT="Error Handler customization (default category...)" PREDOBJECT="ZGLIF_DISPCUST" DEPENDENCY="S" OBJPOS="08" OBJLEVEL="02"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_CONVCUST" OBJFIELD="INTERFACE_NAME" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="INTERFACE_NAME"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_CONVCUST" OBJFIELD="MANDT" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="MANDT"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_DISPCUST" PREDOBJECT="ZGLIF_DISPCUST"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_ERRORCUS_V" OBJFIELD="INTERFACE_NAME" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="INTERFACE_NAME"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_ERRORCUS_V" OBJFIELD="MANDT" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="MANDT"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_ERR_CATEG" OBJFIELD="INTERFACE_NAME" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="INTERFACE_NAME"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_ERR_CATEG" OBJFIELD="MANDT" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="MANDT"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_FEEDCUST" OBJFIELD="INTERFACE_NAME" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="INTERFACE_NAME"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_FEEDCUST" OBJFIELD="MANDT" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="MANDT"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_HANDLECUST" OBJFIELD="INTERFACE_NAME" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="INTERFACE_NAME"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_HANDLECUST" OBJFIELD="MANDT" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="MANDT"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_PRCTRCUST" OBJFIELD="INTERFACE_NAME" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="INTERFACE_NAME"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_PRCTRCUST" OBJFIELD="MANDT" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="MANDT"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_PROCCUST" OBJFIELD="INTERFACE_NAME" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="INTERFACE_NAME"/>
  <vclstrudep VCLNAME="ZGLIF_CUSTOMIZATION" OBJECT="ZGLIF_PROCCUST" OBJFIELD="MANDT" PREDOBJECT="ZGLIF_DISPCUST" PREDFIELD="MANDT"/>
 </VCLS>
 <VIEW VIEWNAME="ZGLIF_ERRORCUS_V" AS4LOCAL="A" AS4VERS="0000" DDLANGUAGE="E" AGGTYPE="V" AUTHCLASS="00" ROOTTAB="ZGLIF_ERRORCUST" DDTEXT="GLIF: Error assignment to Category with Message text" VIEWCLASS="C" CUSTOMAUTH="C" GLOBALFLAG="X">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd26v VIEWNAME="ZGLIF_ERRORCUS_V" TABNAME="ZGLIF_ERRORCUST" TABPOS="0001" FORTABNAME="ZGLIF_ERRORCUST"/>
  <dd26v VIEWNAME="ZGLIF_ERRORCUS_V" TABNAME="T100" TABPOS="0002" FORTABNAME="ZGLIF_ERRORCUST" FORFIELD="MSGID" FORDIR="E"/>
  <dd26v VIEWNAME="ZGLIF_ERRORCUS_V" TABNAME="ZGLIF_ERR_CATEG" TABPOS="0003" FORTABNAME="ZGLIF_ERRORCUST" FORFIELD="CATEGORY" FORDIR="E"/>
  <dd27p VIEWNAME="ZGLIF_ERRORCUS_V" OBJPOS="0001" DDLANGUAGE="E" VIEWFIELD="MANDT" TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MANDT" KEYFLAG="X" ROLLNAME="MANDT" ROLLNAMEVI="MANDT" DOMNAME="MANDT" DATATYPE="CLNT" FLENGTH="000003" ENTITYTAB="T000" INTTYPE="C" INTLEN="000006" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000003" DECIMALS="000000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_ERRORCUS_V" OBJPOS="0002" DDLANGUAGE="E" VIEWFIELD="INTERFACE_NAME" TABNAME="ZGLIF_ERRORCUST" FIELDNAME="INTERFACE_NAME" KEYFLAG="X" ROLLNAME="ZGLIF_INTERFACE_NAME" ROLLNAMEVI="ZGLIF_INTERFACE_NAME" DOMNAME="CHAR0016" DATATYPE="CHAR" FLENGTH="000016" SHLPORIGIN="D" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" INTTYPE="C" INTLEN="000032" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000016" DECIMALS="000000" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_ERRORCUS_V" OBJPOS="0003" DDLANGUAGE="E" VIEWFIELD="MESSAGE_STATUS" TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MESSAGE_STATUS" KEYFLAG="X" ROLLNAME="ZGLIF_MESSAGE_STATUS" ROLLNAMEVI="ZGLIF_MESSAGE_STATUS" DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" DATATYPE="CHAR" FLENGTH="000002" SHLPORIGIN="F" INTTYPE="C" INTLEN="000004" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" VALEXI="X" DDTEXT="GLIF: Message status" REPTEXT="Message Status" SCRTEXT_S="M. Status" SCRTEXT_M="Message Status" SCRTEXT_L="Message Status" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_ERRORCUS_V" OBJPOS="0004" DDLANGUAGE="E" VIEWFIELD="MSGID" TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGID" KEYFLAG="X" ROLLNAME="ZGLIF_MSGID" ROLLNAMEVI="ZGLIF_MSGID" DOMNAME="ARBGB" DATATYPE="CHAR" FLENGTH="000020" CHECKTABLE="T100" SHLPORIGIN="P" ENTITYTAB="T100A" INTTYPE="C" INTLEN="000040" HEADLEN="23" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000020" DECIMALS="000000" DDTEXT="Return Message Class ID" REPTEXT="Return Message Class ID" SCRTEXT_S="Class ID" SCRTEXT_M="Return Message Class" SCRTEXT_L="Return Message Class ID" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_ERRORCUS_V" OBJPOS="0005" DDLANGUAGE="E" VIEWFIELD="MSGNO" TABNAME="ZGLIF_ERRORCUST" FIELDNAME="MSGNO" KEYFLAG="X" ROLLNAME="ZGLIF_MSGNO" ROLLNAMEVI="ZGLIF_MSGNO" DOMNAME="MSGNR" DATATYPE="CHAR" FLENGTH="000003" CHECKTABLE="T100" SHLPORIGIN="X" ENTITYTAB="T100" INTTYPE="C" INTLEN="000006" HEADLEN="21" SCRLEN1="08" SCRLEN2="19" SCRLEN3="21" OUTPUTLEN="000003" DECIMALS="000000" DDTEXT="Return Message Number" REPTEXT="Return Message Number" SCRTEXT_S="Msg. No." SCRTEXT_M="Return Mess. Number" SCRTEXT_L="Return Message Number" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_ERRORCUS_V" OBJPOS="0006" DDLANGUAGE="E" VIEWFIELD="TEXT" TABNAME="T100" FIELDNAME="TEXT" ROLLNAME="NATXT" ROLLNAMEVI="NATXT" DOMNAME="NATXT" DATATYPE="CHAR" FLENGTH="000073" INTTYPE="C" INTLEN="000146" HEADLEN="18" SCRLEN1="07" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000073" DECIMALS="000000" LOWERCASE="X" DDTEXT="Message Text" REPTEXT="Message Text" SCRTEXT_S="Text" SCRTEXT_M="Message Text" SCRTEXT_L="Message Text" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_ERRORCUS_V" OBJPOS="0007" DDLANGUAGE="E" VIEWFIELD="CATEGORY" TABNAME="ZGLIF_ERRORCUST" FIELDNAME="CATEGORY" ROLLNAME="ZGLIF_CATEGORY_ID" ROLLNAMEVI="ZGLIF_CATEGORY_ID" MEMORYID="ZGLIF_CATEGORY" DOMNAME="ZGLIF_CATEGORY_DOM" DATATYPE="CHAR" FLENGTH="000002" CHECKTABLE="ZGLIF_ERR_CATEG" SHLPORIGIN="X" SHLPNAME="ZGLIF_ERR_CATEG" SHLPFIELD="ID" INTTYPE="C" INTLEN="000004" LOGFLAG="X" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" DDTEXT="GLIF: Category ID" REPTEXT="Category ID" SCRTEXT_S="CategoryID" SCRTEXT_M="Category ID" SCRTEXT_L="Category ID" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_ERRORCUS_V" OBJPOS="0008" DDLANGUAGE="E" VIEWFIELD="CATEGORY_TX" TABNAME="ZGLIF_ERR_CATEG" FIELDNAME="CATEGORY_DESCRIPTION" ROLLNAME="ZGLIF_CATEGORY" ROLLNAMEVI="ZGLIF_CATEGORY" DOMNAME="CHAR_30" DATATYPE="CHAR" FLENGTH="000030" INTTYPE="C" INTLEN="000060" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X" DDTEXT="GLIF: Category" REPTEXT="Category" SCRTEXT_S="Category" SCRTEXT_M="Category" SCRTEXT_L="Category" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd28j VIEWNAME="ZGLIF_ERRORCUS_V" LTAB="T100" LFIELD="SPRSL" OPERATOR="EQ" RTAB="SYST" RFIELD="LANGU" SOURCE="F" FRKTAB="ZGLIF_ERRORCUST" FRKFIELD="MSGID" FRKDIR="E"/>
  <dd28j VIEWNAME="ZGLIF_ERRORCUS_V" LTAB="T100" LFIELD="ARBGB" OPERATOR="EQ" RTAB="ZGLIF_ERRORCUST" RFIELD="MSGID" SOURCE="F" FRKTAB="ZGLIF_ERRORCUST" FRKFIELD="MSGID" FRKDIR="E"/>
  <dd28j VIEWNAME="ZGLIF_ERRORCUS_V" LTAB="T100" LFIELD="MSGNR" OPERATOR="EQ" RTAB="ZGLIF_ERRORCUST" RFIELD="MSGNO" SOURCE="F" FRKTAB="ZGLIF_ERRORCUST" FRKFIELD="MSGID" FRKDIR="E"/>
  <dd28j VIEWNAME="ZGLIF_ERRORCUS_V" LTAB="ZGLIF_ERR_CATEG" LFIELD="MANDT" OPERATOR="EQ" RTAB="ZGLIF_ERRORCUST" RFIELD="MANDT" SOURCE="F" FRKTAB="ZGLIF_ERRORCUST" FRKFIELD="CATEGORY" FRKDIR="E"/>
  <dd28j VIEWNAME="ZGLIF_ERRORCUS_V" LTAB="ZGLIF_ERR_CATEG" LFIELD="INTERFACE_NAME" OPERATOR="EQ" RTAB="ZGLIF_ERRORCUST" RFIELD="INTERFACE_NAME" SOURCE="F" FRKTAB="ZGLIF_ERRORCUST" FRKFIELD="CATEGORY" FRKDIR="E"/>
  <dd28j VIEWNAME="ZGLIF_ERRORCUS_V" LTAB="ZGLIF_ERR_CATEG" LFIELD="ID" OPERATOR="EQ" RTAB="ZGLIF_ERRORCUST" RFIELD="CATEGORY" SOURCE="F" FRKTAB="ZGLIF_ERRORCUST" FRKFIELD="CATEGORY" FRKDIR="E"/>
 </VIEW>
 <VIEW VIEWNAME="ZGLIF_BTCH_MSG" AS4LOCAL="A" AS4VERS="0000" DDLANGUAGE="E" AGGTYPE="V" AUTHCLASS="00" ROOTTAB="ZGLIF_BATCH_STAT" DDTEXT="List of all GLIF Batches+Messages" VIEWCLASS="D" VIEWGRANT="R">
  <dd09l AS4VERS="0000" SCHFELDANZ="000"/>
  <dd26v VIEWNAME="ZGLIF_BTCH_MSG" TABNAME="ZGLIF_BATCH_STAT" TABPOS="0001" FORTABNAME="ZGLIF_BATCH_STAT"/>
  <dd26v VIEWNAME="ZGLIF_BTCH_MSG" TABNAME="ZGLIF_MESS_STAT" TABPOS="0002"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0001" DDLANGUAGE="E" VIEWFIELD="CLIENT" TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="MANDT" KEYFLAG="X" ROLLNAME="MANDT" ROLLNAMEVI="MANDT" DOMNAME="MANDT" DATATYPE="CLNT" FLENGTH="000003" ENTITYTAB="T000" INTTYPE="C" INTLEN="000006" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000003" DECIMALS="000000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0002" DDLANGUAGE="E" VIEWFIELD="INTERFACE_NAME" TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="INTERFACE_NAME" KEYFLAG="X" ROLLNAME="ZGLIF_INTERFACE_NAME" ROLLNAMEVI="ZGLIF_INTERFACE_NAME" DOMNAME="CHAR0016" DATATYPE="CHAR" FLENGTH="000016" SHLPORIGIN="D" SHLPNAME="ZGLIF_INTERFACE_NAME" SHLPFIELD="INTERFACE_NAME" INTTYPE="C" INTLEN="000032" LOGFLAG="X" HEADLEN="16" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000016" DECIMALS="000000" DDTEXT="GLIF: Activity name" REPTEXT="Interface Name" SCRTEXT_S="Interface" SCRTEXT_M="Interface Name" SCRTEXT_L="Interface Name" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0003" DDLANGUAGE="E" VIEWFIELD="MANDT" TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="MANDT" KEYFLAG="X" ROLLNAME="MANDT" ROLLNAMEVI="MANDT" DOMNAME="MANDT" DATATYPE="CLNT" FLENGTH="000003" ENTITYTAB="T000" INTTYPE="C" INTLEN="000006" HEADLEN="03" SCRLEN1="10" SCRLEN2="15" SCRLEN3="20" OUTPUTLEN="000003" DECIMALS="000000" DDTEXT="Client" REPTEXT="Cl." SCRTEXT_S="Client" SCRTEXT_M="Client" SCRTEXT_L="Client" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0004" DDLANGUAGE="E" VIEWFIELD="BATCH_ID" TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="BATCH_ID" KEYFLAG="X" ROLLNAME="ZGLIF_BATCH_ID" ROLLNAMEVI="ZGLIF_BATCH_ID" MEMORYID="ZGLIF_BATCH" DOMNAME="ZGLIF_BATCH_ID_DOM" DATATYPE="CHAR" FLENGTH="000010" INTTYPE="C" INTLEN="000020" HEADLEN="08" SCRLEN1="08" SCRLEN2="08" SCRLEN3="08" OUTPUTLEN="000010" DECIMALS="000000" LOWERCASE="X" CONVEXIT="ALPHA" DDTEXT="GLIF: Batch ID" REPTEXT="Batch ID" SCRTEXT_S="Batch ID" SCRTEXT_M="Batch ID" SCRTEXT_L="Batch ID" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0005" DDLANGUAGE="E" VIEWFIELD="BATCH_STATUS" TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="BATCH_STATUS" KEYFLAG="X" ROLLNAME="ZGLIF_BATCH_STATUS" ROLLNAMEVI="ZGLIF_BATCH_STATUS" DOMNAME="ZGLIF_BATCH_STATUS_DOM" DATATYPE="CHAR" FLENGTH="000002" SHLPORIGIN="F" INTTYPE="C" INTLEN="000004" HEADLEN="12" SCRLEN1="06" SCRLEN2="12" SCRLEN3="12" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" VALEXI="X" DDTEXT="GLIF: Batch Status" REPTEXT="Batch Status" SCRTEXT_S="Status" SCRTEXT_M="Batch Status" SCRTEXT_L="Batch Status" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0006" DDLANGUAGE="E" VIEWFIELD="BATCH_CHANGED_ON" TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="BATCH_CHANGED_ON" KEYFLAG="X" ROLLNAME="ZGLIF_CHANGED_ON" ROLLNAMEVI="ZGLIF_CHANGED_ON" DOMNAME="DATS" DATATYPE="DATS" FLENGTH="000008" SHLPORIGIN="T" INTTYPE="D" INTLEN="000016" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" OUTPUTLEN="000010" DECIMALS="000000" DDTEXT="GLIF: Entry Changed On" REPTEXT="Changed On" SCRTEXT_S="Changed On" SCRTEXT_M="Changed On" SCRTEXT_L="Changed On" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0007" DDLANGUAGE="E" VIEWFIELD="BATCH_CHANGED_AT" TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="BATCH_CHANGED_AT" KEYFLAG="X" ROLLNAME="ZGLIF_CHANGED_AT" ROLLNAMEVI="ZGLIF_CHANGED_AT" DOMNAME="TIMS" DATATYPE="TIMS" FLENGTH="000006" SHLPORIGIN="T" INTTYPE="T" INTLEN="000012" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" OUTPUTLEN="000008" DECIMALS="000000" DDTEXT="GLIF: Entry Changed At" REPTEXT="Changed At" SCRTEXT_S="Changed At" SCRTEXT_M="Changed At" SCRTEXT_L="Changed At" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0008" DDLANGUAGE="E" VIEWFIELD="BATCH_CHANGED_BY" TABNAME="ZGLIF_BATCH_STAT" FIELDNAME="BATCH_CHANGED_BY" KEYFLAG="X" ROLLNAME="ZGLIF_CHANGED_USERNAME" ROLLNAMEVI="ZGLIF_CHANGED_USERNAME" DOMNAME="UNAME" DATATYPE="CHAR" FLENGTH="000012" INTTYPE="C" INTLEN="000024" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000012" DECIMALS="000000" DDTEXT="GLIF: Entry Changed By" REPTEXT="Changed By Username" SCRTEXT_S="Chngd By" SCRTEXT_M="Changed By" SCRTEXT_L="Changed By User" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0009" DDLANGUAGE="E" VIEWFIELD="FILENAME" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="FILENAME" KEYFLAG="X" ROLLNAME="ZGLIF_FILENAME" ROLLNAMEVI="ZGLIF_FILENAME" DOMNAME="TEXT200" DATATYPE="CHAR" FLENGTH="000200" INTTYPE="C" INTLEN="000400" HEADLEN="40" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000200" DECIMALS="000000" LOWERCASE="X" DDTEXT="GLIF: Name of the original file" REPTEXT="Original data source name" SCRTEXT_S="Filename" SCRTEXT_M="Original datsrc.name" SCRTEXT_L="Original data source name" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0010" DDLANGUAGE="E" VIEWFIELD="MESSAGE_ID" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MESSAGE_ID" KEYFLAG="X" ROLLNAME="ZGLIF_MESSAGE_ID" ROLLNAMEVI="ZGLIF_MESSAGE_ID" DOMNAME="ZGLIF_MESSAGE_ID_DOM" DATATYPE="CHAR" FLENGTH="000010" INTTYPE="C" INTLEN="000020" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000010" DECIMALS="000000" LOWERCASE="X" CONVEXIT="ALPHA" DDTEXT="GLIF: Message ID" REPTEXT="Message ID" SCRTEXT_S="Message ID" SCRTEXT_M="Message ID" SCRTEXT_L="Message ID" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0011" DDLANGUAGE="E" VIEWFIELD="MESSAGE_STATUS" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MESSAGE_STATUS" KEYFLAG="X" ROLLNAME="ZGLIF_MESSAGE_STATUS" ROLLNAMEVI="ZGLIF_MESSAGE_STATUS" DOMNAME="ZGLIF_MESSAGE_STATUS_DOM" DATATYPE="CHAR" FLENGTH="000002" SHLPORIGIN="F" INTTYPE="C" INTLEN="000004" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000002" DECIMALS="000000" LOWERCASE="X" VALEXI="X" DDTEXT="GLIF: Message status" REPTEXT="Message Status" SCRTEXT_S="M. Status" SCRTEXT_M="Message Status" SCRTEXT_L="Message Status" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0012" DDLANGUAGE="E" VIEWFIELD="IDOC_NUMBER" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="IDOC_NUMBER" KEYFLAG="X" ROLLNAME="ZGLIF_IDOC_NUMBER" ROLLNAMEVI="ZGLIF_IDOC_NUMBER" DOMNAME="EDI_DOCNUM" DATATYPE="NUMC" FLENGTH="000016" INTTYPE="N" INTLEN="000032" HEADLEN="11" SCRLEN1="08" SCRLEN2="11" SCRLEN3="11" OUTPUTLEN="000016" DECIMALS="000000" DDTEXT="GLIF: IDoc number" REPTEXT="IDoc Number" SCRTEXT_S="IDoc No." SCRTEXT_M="IDoc Number" SCRTEXT_L="IDoc Number" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0013" DDLANGUAGE="E" VIEWFIELD="IDOC_STATUS" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="IDOC_STATUS" ROLLNAME="ZGLIF_IDOC_STATUS" ROLLNAMEVI="ZGLIF_IDOC_STATUS" DOMNAME="EDI_STATUS" DATATYPE="CHAR" FLENGTH="000002" ENTITYTAB="TEDS1" INTTYPE="C" INTLEN="000004" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000002" DECIMALS="000000" DDTEXT="IDoc Status" REPTEXT="IDoc Status" SCRTEXT_S="IDoc Stat." SCRTEXT_M="IDoc Status" SCRTEXT_L="IDoc Status" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0014" DDLANGUAGE="E" VIEWFIELD="MSGID" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGID" ROLLNAME="ZGLIF_MSGID" ROLLNAMEVI="ZGLIF_MSGID" DOMNAME="ARBGB" DATATYPE="CHAR" FLENGTH="000020" ENTITYTAB="T100A" INTTYPE="C" INTLEN="000040" HEADLEN="23" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000020" DECIMALS="000000" DDTEXT="Return Message Class ID" REPTEXT="Return Message Class ID" SCRTEXT_S="Class ID" SCRTEXT_M="Return Message Class" SCRTEXT_L="Return Message Class ID" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0015" DDLANGUAGE="E" VIEWFIELD="MSGNO" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGNO" ROLLNAME="ZGLIF_MSGNO" ROLLNAMEVI="ZGLIF_MSGNO" DOMNAME="MSGNR" DATATYPE="CHAR" FLENGTH="000003" ENTITYTAB="T100" INTTYPE="C" INTLEN="000006" HEADLEN="21" SCRLEN1="08" SCRLEN2="19" SCRLEN3="21" OUTPUTLEN="000003" DECIMALS="000000" DDTEXT="Return Message Number" REPTEXT="Return Message Number" SCRTEXT_S="Msg. No." SCRTEXT_M="Return Mess. Number" SCRTEXT_L="Return Message Number" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0016" DDLANGUAGE="E" VIEWFIELD="MSGTY" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGTY" ROLLNAME="ZGLIF_MSGTY" ROLLNAMEVI="ZGLIF_MSGTY" DOMNAME="SYCHAR01" DATATYPE="CHAR" FLENGTH="000001" INTTYPE="C" INTLEN="000002" HEADLEN="19" SCRLEN1="08" SCRLEN2="19" SCRLEN3="19" OUTPUTLEN="000001" DECIMALS="000000" DDTEXT="Return Message Type" REPTEXT="Return Message Type" SCRTEXT_S="Msg Type" SCRTEXT_M="Return Message Type" SCRTEXT_L="Return Message Type" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0017" DDLANGUAGE="E" VIEWFIELD="MSGV1" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGV1" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ROLLNAMEVI="ZGLIF_MESSAGE_PARAMETER" DATATYPE="CHAR" FLENGTH="000050" INTTYPE="C" INTLEN="000100" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" OUTPUTLEN="000050" DECIMALS="000000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0018" DDLANGUAGE="E" VIEWFIELD="MSGV2" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGV2" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ROLLNAMEVI="ZGLIF_MESSAGE_PARAMETER" DATATYPE="CHAR" FLENGTH="000050" INTTYPE="C" INTLEN="000100" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" OUTPUTLEN="000050" DECIMALS="000000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0019" DDLANGUAGE="E" VIEWFIELD="MSGV3" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGV3" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ROLLNAMEVI="ZGLIF_MESSAGE_PARAMETER" DATATYPE="CHAR" FLENGTH="000050" INTTYPE="C" INTLEN="000100" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" OUTPUTLEN="000050" DECIMALS="000000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0020" DDLANGUAGE="E" VIEWFIELD="MSGV4" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MSGV4" ROLLNAME="ZGLIF_MESSAGE_PARAMETER" ROLLNAMEVI="ZGLIF_MESSAGE_PARAMETER" DATATYPE="CHAR" FLENGTH="000050" INTTYPE="C" INTLEN="000100" HEADLEN="24" SCRLEN1="10" SCRLEN2="19" SCRLEN3="24" OUTPUTLEN="000050" DECIMALS="000000" DDTEXT="Return Message Parameter" REPTEXT="Return Message Parameter" SCRTEXT_S="Msg. Param" SCRTEXT_M="Return Mess. Param." SCRTEXT_L="Return Message Parameter" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0021" DDLANGUAGE="E" VIEWFIELD="CATEGORY" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="CATEGORY" ROLLNAME="ZGLIF_CATEGORY" ROLLNAMEVI="ZGLIF_CATEGORY" DOMNAME="CHAR_30" DATATYPE="CHAR" FLENGTH="000030" INTTYPE="C" INTLEN="000060" HEADLEN="30" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000030" DECIMALS="000000" LOWERCASE="X" DDTEXT="GLIF: Category" REPTEXT="Category" SCRTEXT_S="Category" SCRTEXT_M="Category" SCRTEXT_L="Category" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0022" DDLANGUAGE="E" VIEWFIELD="MESSAGE_CHANGED_ON" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MESSAGE_CHANGED_ON" ROLLNAME="ZGLIF_CHANGED_ON" ROLLNAMEVI="ZGLIF_CHANGED_ON" DOMNAME="DATS" DATATYPE="DATS" FLENGTH="000008" SHLPORIGIN="T" INTTYPE="D" INTLEN="000016" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" OUTPUTLEN="000010" DECIMALS="000000" DDTEXT="GLIF: Entry Changed On" REPTEXT="Changed On" SCRTEXT_S="Changed On" SCRTEXT_M="Changed On" SCRTEXT_L="Changed On" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0023" DDLANGUAGE="E" VIEWFIELD="MESSAGE_CHANGED_AT" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MESSAGE_CHANGED_AT" ROLLNAME="ZGLIF_CHANGED_AT" ROLLNAMEVI="ZGLIF_CHANGED_AT" DOMNAME="TIMS" DATATYPE="TIMS" FLENGTH="000006" SHLPORIGIN="T" INTTYPE="T" INTLEN="000012" HEADLEN="11" SCRLEN1="10" SCRLEN2="11" SCRLEN3="11" OUTPUTLEN="000008" DECIMALS="000000" DDTEXT="GLIF: Entry Changed At" REPTEXT="Changed At" SCRTEXT_S="Changed At" SCRTEXT_M="Changed At" SCRTEXT_L="Changed At" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd27p VIEWNAME="ZGLIF_BTCH_MSG" OBJPOS="0024" DDLANGUAGE="E" VIEWFIELD="MESSAGE_CHANGED_BY" TABNAME="ZGLIF_MESS_STAT" FIELDNAME="MESSAGE_CHANGED_BY" ROLLNAME="ZGLIF_CHANGED_USERNAME" ROLLNAMEVI="ZGLIF_CHANGED_USERNAME" DOMNAME="UNAME" DATATYPE="CHAR" FLENGTH="000012" INTTYPE="C" INTLEN="000024" HEADLEN="55" SCRLEN1="10" SCRLEN2="20" SCRLEN3="40" OUTPUTLEN="000012" DECIMALS="000000" DDTEXT="GLIF: Entry Changed By" REPTEXT="Changed By Username" SCRTEXT_S="Chngd By" SCRTEXT_M="Changed By" SCRTEXT_L="Changed By User" OUTPUTSTYLE="00" EXVFLENGTH="000000" EXVDECIMALS="000000"/>
  <dd28j VIEWNAME="ZGLIF_BTCH_MSG" LTAB="ZGLIF_BATCH_STAT" LFIELD="INTERFACE_NAME" OPERATOR="EQ" RTAB="ZGLIF_MESS_STAT" RFIELD="INTERFACE_NAME" SOURCE="S" JOPERATOR="LOJ"/>
  <dd28j VIEWNAME="ZGLIF_BTCH_MSG" LTAB="ZGLIF_BATCH_STAT" LFIELD="BATCH_ID" OPERATOR="EQ" RTAB="ZGLIF_MESS_STAT" RFIELD="BATCH_ID" SOURCE="S"/>
  <dd28j VIEWNAME="ZGLIF_BTCH_MSG" LTAB="ZGLIF_BATCH_STAT" LFIELD="MANDT" OPERATOR="EQ" RTAB="ZGLIF_MESS_STAT" RFIELD="MANDT" SOURCE="S"/>
 </VIEW>
</nugget>
